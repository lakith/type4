2018-11-06 22:45:07.569 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : account_statement_issue_request
2018-11-06 22:45:07.575 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : atm_or_debit_card_request
2018-11-06 22:45:07.575 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : authorizer_data_transaction
2018-11-06 22:45:07.575 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : bank
2018-11-06 22:45:07.575 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : bank_statement_accountno
2018-11-06 22:45:07.575 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : bill_payment
2018-11-06 22:45:07.575 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : bill_payment_error_eecords
2018-11-06 22:45:07.576 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : bill_payment_referance
2018-11-06 22:45:07.576 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : bill_payment_update_records
2018-11-06 22:45:07.576 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : branch
2018-11-06 22:45:07.576 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : cash_deposit
2018-11-06 22:45:07.576 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : cash_deposit_break_down
2018-11-06 22:45:07.576 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : cash_deposit_error_records
2018-11-06 22:45:07.576 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : cash_deposit_file
2018-11-06 22:45:07.576 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : cash_deposit_update_records
2018-11-06 22:45:07.576 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : cash_withdrawal
2018-11-06 22:45:07.576 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : cash_withdrawal_break_down
2018-11-06 22:45:07.576 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : cash_withdrawal_file
2018-11-06 22:45:07.576 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : cash_withdrawal_record_erros
2018-11-06 22:45:07.579 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : cash_withdrawal_update_records
2018-11-06 22:45:07.579 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : change_mailing_mail
2018-11-06 22:45:07.579 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : change_permanent_mail
2018-11-06 22:45:07.579 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : change_primary_account
2018-11-06 22:45:07.579 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : contact_details
2018-11-06 22:45:07.579 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : crediit_card_peyment
2018-11-06 22:45:07.579 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : credit_card_payment_break_down
2018-11-06 22:45:07.579 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : csr_data_transaction
2018-11-06 22:45:07.579 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : csr_queue
2018-11-06 22:45:07.579 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : csr_queue_history_details
2018-11-06 22:45:07.580 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : currency
2018-11-06 22:45:07.580 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : customer
2018-11-06 22:45:07.580 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : customer_account_no
2018-11-06 22:45:07.580 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : customer_transaction_request
2018-11-06 22:45:07.580 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : customer_service_request
2018-11-06 22:45:07.580 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : customer_service_request_staff_user
2018-11-06 22:45:07.580 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : deactivate_log
2018-11-06 22:45:07.580 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : duplicate_pass_book_request
2018-11-06 22:45:07.580 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : duplicate_fd_cd_cert
2018-11-06 22:45:07.580 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : effect_or_revoke_payment
2018-11-06 22:45:07.580 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : effect_or_revoke_payment_details
2018-11-06 22:45:07.580 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : estatement_facility
2018-11-06 22:45:07.580 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : exclude_internet_account
2018-11-06 22:45:07.580 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : fd_cd_numbers
2018-11-06 22:45:07.580 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : fund_transfer_ceft
2018-11-06 22:45:07.580 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : fund_transfer_ceft_break_down
2018-11-06 22:45:07.580 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : fund_transfer_cefte_error_records
2018-11-06 22:45:07.581 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : fund_transfer_cefte_update_records
2018-11-06 22:45:07.581 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : fund_transfer_slip_update_record
2018-11-06 22:45:07.581 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : fund_transfer_slips
2018-11-06 22:45:07.581 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : fund_transfer_slips_break_down
2018-11-06 22:45:07.581 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : fund_transfer_slips_error_record
2018-11-06 22:45:07.581 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : fund_transfer_slips_files
2018-11-06 22:45:07.581 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : fund_transfer_within_ndb
2018-11-06 22:45:07.581 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : fund_transfer_within_ndb_break_down
2018-11-06 22:45:07.581 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : fund_transfer_within_ndb_error_record
2018-11-06 22:45:07.581 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : fund_transfer_within_ndb_file
2018-11-06 22:45:07.581 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : fund_transfer_within_ndb_update_record
2018-11-06 22:45:07.581 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : fund_transferceftfiles
2018-11-06 22:45:07.581 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : hibernate_sequence
2018-11-06 22:45:07.581 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : identification_form
2018-11-06 22:45:07.581 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : internet_banking
2018-11-06 22:45:07.581 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : internet_banking_account_numbers
2018-11-06 22:45:07.581 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : internet_banking_exclude_account_numbers
2018-11-06 22:45:07.581 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : jwt_token_log
2018-11-06 22:45:07.581 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : jwt_tokens
2018-11-06 22:45:07.582 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : link_account_model
2018-11-06 22:45:07.582 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : linked_account
2018-11-06 22:45:07.582 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : login_logs
2018-11-06 22:45:07.582 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : mailing_mail_account_numbers
2018-11-06 22:45:07.583 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : ndbbranch
2018-11-06 22:45:07.583 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : other_fd_cd_related_request
2018-11-06 22:45:07.583 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : other_service_request
2018-11-06 22:45:07.583 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : pass_book_request
2018-11-06 22:45:07.583 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : pos_limit
2018-11-06 22:45:07.583 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : queue_num
2018-11-06 22:45:07.583 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : queue_service
2018-11-06 22:45:07.583 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : queue_service_service_request
2018-11-06 22:45:07.583 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : reissue_login_password_model
2018-11-06 22:45:07.584 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : reissue_pin_request
2018-11-06 22:45:07.584 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : service_request_customer_log
2018-11-06 22:45:07.584 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : service_request_form_log
2018-11-06 22:45:07.584 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : service_request_tif
2018-11-06 22:45:07.584 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : service_request
2018-11-06 22:45:07.584 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : service_request_file_upload
2018-11-06 22:45:07.584 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : set_active_log
2018-11-06 22:45:07.584 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : sms_alerts_credit_card_numbers
2018-11-06 22:45:07.584 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : sms_alerts_for_credit_card
2018-11-06 22:45:07.584 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : sms_subscription
2018-11-06 22:45:07.584 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : staff_roles
2018-11-06 22:45:07.584 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : staff_user
2018-11-06 22:45:07.584 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : staff_user_save_log
2018-11-06 22:45:07.584 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : statement_frequency
2018-11-06 22:45:07.584 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : teller_queue
2018-11-06 22:45:07.584 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : teller_queue_history_details
2018-11-06 22:45:07.584 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : transaction_customer
2018-11-06 22:45:07.584 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : transaction_request
2018-11-06 22:45:07.584 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : view_users_log
2018-11-06 22:45:07.584 DEBUG 9956 --- [restartedMain] org.hibernate.mapping.Table              : No alter strings for table : withholding_fd_cd
2018-11-06 22:45:08.875 DEBUG 9956 --- [restartedMain] org.hibernate.SQL                        : alter table internet_banking_exclude_account_numbers add constraint FKnnojtmucbj2v6t6bd0u8htvp1 foreign key (internet_banking_id) references exclude_internet_account (exclude_internet_account_id)
2018-11-06 22:45:10.514  WARN 9956 --- [restartedMain] o.h.t.s.i.ExceptionHandlerLoggedImpl     : GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement

org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.2.17.Final.jar:5.2.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:559) [hibernate-core-5.2.17.Final.jar:5.2.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:504) [hibernate-core-5.2.17.Final.jar:5.2.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:433) [hibernate-core-5.2.17.Final.jar:5.2.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:249) [hibernate-core-5.2.17.Final.jar:5.2.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114) [hibernate-core-5.2.17.Final.jar:5.2.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183) [hibernate-core-5.2.17.Final.jar:5.2.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72) [hibernate-core-5.2.17.Final.jar:5.2.17.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:312) [hibernate-core-5.2.17.Final.jar:5.2.17.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462) [hibernate-core-5.2.17.Final.jar:5.2.17.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:892) [hibernate-core-5.2.17.Final.jar:5.2.17.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57) [spring-orm-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) [spring-orm-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390) [spring-orm-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377) [spring-orm-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) [spring-orm-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1758) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1695) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1089) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:859) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at com.spring.starter.NdbApplication.main(NdbApplication.java:16) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_171]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_171]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_171]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_171]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) ~[spring-boot-devtools-2.0.4.RELEASE.jar:2.0.4.RELEASE]
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`ndb`.`#sql-14ec_c2`, CONSTRAINT `FKnnojtmucbj2v6t6bd0u8htvp1` FOREIGN KEY (`internet_banking_id`) REFERENCES `exclude_internet_account` (`exclude_internet_account_id`))
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_171]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_171]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_171]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_171]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.Util.getInstance(Util.java:408) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2440) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.StatementImpl.executeInternal(StatementImpl.java:845) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:745) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-2.7.9.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-2.7.9.jar:na]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.2.17.Final.jar:5.2.17.Final]
	... 38 common frames omitted

2018-11-06 22:45:10.981 DEBUG 9956 --- [restartedMain] o.h.query.spi.NamedQueryRepository       : Checking 0 named HQL queries
2018-11-06 22:45:10.981 DEBUG 9956 --- [restartedMain] o.h.query.spi.NamedQueryRepository       : Checking 0 named SQL queries
2018-11-06 22:45:10.982 DEBUG 9956 --- [restartedMain] o.h.internal.SessionFactoryRegistry      : Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6e50da41
2018-11-06 22:45:10.982 DEBUG 9956 --- [restartedMain] o.h.internal.SessionFactoryRegistry      : Registering SessionFactory: 4306a8cf-c2dd-4c46-b05f-c6b536513340 (<unnamed>)
2018-11-06 22:45:10.982 DEBUG 9956 --- [restartedMain] o.h.internal.SessionFactoryRegistry      : Not binding SessionFactory to JNDI, no JNDI name configured
2018-11-06 22:45:11.514 DEBUG 9956 --- [restartedMain] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=false]
2018-11-06 22:45:11.627 DEBUG 9956 --- [restartedMain] o.h.h.i.QueryTranslatorFactoryInitiator  : QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@1cf7fb76
2018-11-06 22:45:11.627  INFO 9956 --- [restartedMain] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2018-11-06 22:45:11.642 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c FROM com.spring.starter.model.CSRQueue c WHERE c.hold = false and c.complete=false and c.queuePending =true ORDER BY c.queueNumIdentification
2018-11-06 22:45:11.646 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.648 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CSRQueue'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    +-[WHERE] Node: 'WHERE'
    |  \-[AND] Node: 'and'
    |     +-[AND] Node: 'and'
    |     |  +-[EQ] Node: '='
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'c'
    |     |  |  |  \-[IDENT] Node: 'hold'
    |     |  |  \-[FALSE] Node: 'false'
    |     |  \-[EQ] Node: '='
    |     |     +-[DOT] Node: '.'
    |     |     |  +-[IDENT] Node: 'c'
    |     |     |  \-[IDENT] Node: 'complete'
    |     |     \-[FALSE] Node: 'false'
    |     \-[EQ] Node: '='
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'c'
    |        |  \-[IDENT] Node: 'queuePending'
    |        \-[TRUE] Node: 'true'
    \-[ORDER] Node: 'ORDER'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'c'
          \-[IDENT] Node: 'queueNumIdentification'

2018-11-06 22:45:11.659 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:11.670 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CSRQueue (c) -> csrqueue0_
2018-11-06 22:45:11.671 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.673 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.673 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : hold -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:11.674 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.hold -> csrqueue0_.hold
2018-11-06 22:45:11.675 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.675 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : complete -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:11.675 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.complete -> csrqueue0_.complete
2018-11-06 22:45:11.675 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.675 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : queuePending -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:11.675 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.queuePending -> csrqueue0_.queue_pending
2018-11-06 22:45:11.676 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.676 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : queueNumIdentification -> org.hibernate.type.DoubleType@60e54c31
2018-11-06 22:45:11.676 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.queueNumIdentification -> csrqueue0_.queue_num_identification
2018-11-06 22:45:11.676 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:11.676 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} csrqueue0_.csrqueue_id ) ( FromClause{level=1} csr_queue csrqueue0_ ) ( WHERE ( and ( and ( = ( csrqueue0_.hold csrqueue0_.csrqueue_id hold ) false ) ( = ( csrqueue0_.complete csrqueue0_.csrqueue_id complete ) false ) ) ( = ( csrqueue0_.queue_pending csrqueue0_.csrqueue_id queuePending ) true ) ) ) ( ORDER ( csrqueue0_.queue_num_identification csrqueue0_.csrqueue_id queueNumIdentification ) ) )
2018-11-06 22:45:11.683 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [csr_queue csrqueue0_]
2018-11-06 22:45:11.683 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:11.683 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (csr_queue)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id as csrqueue1_27_' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
    |  \-[SQL_TOKEN] SqlFragment: 'csrqueue0_.comment as comment2_27_, csrqueue0_.complete as complete3_27_, csrqueue0_.customer_id as custome11_27_, csrqueue0_.hold as hold4_27_, csrqueue0_.queue_end_date as queue_en5_27_, csrqueue0_.queue_num_identification as queue_nu6_27_, csrqueue0_.queue_number as queue_nu7_27_, csrqueue0_.queue_pending as queue_pe8_27_, csrqueue0_.queue_reject as queue_re9_27_, csrqueue0_.queue_start_date as queue_s10_27_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[csrqueue0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'csr_queue csrqueue0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=csr_queue,tableAlias=csrqueue0_,origin=null,columns={,className=com.spring.starter.model.CSRQueue}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[AND] SqlNode: 'and'
    |     +-[AND] SqlNode: 'and'
    |     |  +-[EQ] BinaryLogicOperatorNode: '='
    |     |  |  +-[DOT] DotNode: 'csrqueue0_.hold' {propertyName=hold,dereferenceType=PRIMITIVE,getPropertyPath=hold,path=c.hold,tableAlias=csrqueue0_,className=com.spring.starter.model.CSRQueue,classAlias=c}
    |     |  |  |  +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
    |     |  |  |  \-[IDENT] IdentNode: 'hold' {originalText=hold}
    |     |  |  \-[FALSE] BooleanLiteralNode: 'false'
    |     |  \-[EQ] BinaryLogicOperatorNode: '='
    |     |     +-[DOT] DotNode: 'csrqueue0_.complete' {propertyName=complete,dereferenceType=PRIMITIVE,getPropertyPath=complete,path=c.complete,tableAlias=csrqueue0_,className=com.spring.starter.model.CSRQueue,classAlias=c}
    |     |     |  +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
    |     |     |  \-[IDENT] IdentNode: 'complete' {originalText=complete}
    |     |     \-[FALSE] BooleanLiteralNode: 'false'
    |     \-[EQ] BinaryLogicOperatorNode: '='
    |        +-[DOT] DotNode: 'csrqueue0_.queue_pending' {propertyName=queuePending,dereferenceType=PRIMITIVE,getPropertyPath=queuePending,path=c.queuePending,tableAlias=csrqueue0_,className=com.spring.starter.model.CSRQueue,classAlias=c}
    |        |  +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
    |        |  \-[IDENT] IdentNode: 'queuePending' {originalText=queuePending}
    |        \-[TRUE] BooleanLiteralNode: 'true'
    \-[ORDER] OrderByClause: 'ORDER'
       \-[DOT] DotNode: 'csrqueue0_.queue_num_identification' {propertyName=queueNumIdentification,dereferenceType=PRIMITIVE,getPropertyPath=queueNumIdentification,path=c.queueNumIdentification,tableAlias=csrqueue0_,className=com.spring.starter.model.CSRQueue,classAlias=c}
          +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
          \-[IDENT] IdentNode: 'queueNumIdentification' {originalText=queueNumIdentification}

2018-11-06 22:45:11.684 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.688 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c FROM com.spring.starter.model.CSRQueue c WHERE c.hold = false and c.complete=false and c.queuePending =true ORDER BY c.queueNumIdentification
2018-11-06 22:45:11.688 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select csrqueue0_.csrqueue_id as csrqueue1_27_, csrqueue0_.comment as comment2_27_, csrqueue0_.complete as complete3_27_, csrqueue0_.customer_id as custome11_27_, csrqueue0_.hold as hold4_27_, csrqueue0_.queue_end_date as queue_en5_27_, csrqueue0_.queue_num_identification as queue_nu6_27_, csrqueue0_.queue_number as queue_nu7_27_, csrqueue0_.queue_pending as queue_pe8_27_, csrqueue0_.queue_reject as queue_re9_27_, csrqueue0_.queue_start_date as queue_s10_27_ from csr_queue csrqueue0_ where csrqueue0_.hold=0 and csrqueue0_.complete=0 and csrqueue0_.queue_pending=1 order by csrqueue0_.queue_num_identification
2018-11-06 22:45:11.688 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.697 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c FROM com.spring.starter.model.CSRQueue c WHERE c.customer.customerId = ?1
2018-11-06 22:45:11.697 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.698 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CSRQueue'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'c'
          |  |  \-[IDENT] Node: 'customer'
          |  \-[IDENT] Node: 'customerId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:11.698 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:11.698 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CSRQueue (c) -> csrqueue0_
2018-11-06 22:45:11.698 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.698 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.698 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customer -> org.hibernate.type.ManyToOneType(com.spring.starter.model.Customer)
2018-11-06 22:45:11.698 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerId in com.spring.starter.model.CSRQueue does not require a join.
2018-11-06 22:45:11.699 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customer.customerId'
2018-11-06 22:45:11.699 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.customer -> csrqueue0_.customer_id
2018-11-06 22:45:11.699 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customer.customerId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:11.699 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.customer.customerId -> csrqueue0_.customer_id
2018-11-06 22:45:11.700 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:11.701 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} csrqueue0_.csrqueue_id ) ( FromClause{level=1} csr_queue csrqueue0_ ) ( WHERE ( = ( csrqueue0_.customer_id ( csrqueue0_.customer_id csrqueue0_.csrqueue_id customer ) customerId ) ? ) ) )
2018-11-06 22:45:11.701 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [csr_queue csrqueue0_]
2018-11-06 22:45:11.701 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:11.701 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (csr_queue)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id as csrqueue1_27_' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
    |  \-[SQL_TOKEN] SqlFragment: 'csrqueue0_.comment as comment2_27_, csrqueue0_.complete as complete3_27_, csrqueue0_.customer_id as custome11_27_, csrqueue0_.hold as hold4_27_, csrqueue0_.queue_end_date as queue_en5_27_, csrqueue0_.queue_num_identification as queue_nu6_27_, csrqueue0_.queue_number as queue_nu7_27_, csrqueue0_.queue_pending as queue_pe8_27_, csrqueue0_.queue_reject as queue_re9_27_, csrqueue0_.queue_start_date as queue_s10_27_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[csrqueue0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'csr_queue csrqueue0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=csr_queue,tableAlias=csrqueue0_,origin=null,columns={,className=com.spring.starter.model.CSRQueue}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'csrqueue0_.customer_id' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customer.customerId,path=c.customer.customerId,tableAlias=csrqueue0_,className=com.spring.starter.model.CSRQueue,classAlias=c}
          |  +-[DOT] DotNode: 'csrqueue0_.customer_id' {propertyName=customerId,dereferenceType=UNKNOWN,getPropertyPath=customer.customerId,path=c.customer,tableAlias=csrqueue0_,className=com.spring.starter.model.CSRQueue,classAlias=c}
          |  |  +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
          |  |  \-[IDENT] IdentNode: 'customer' {originalText=customer}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:11.701 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.701 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c FROM com.spring.starter.model.CSRQueue c WHERE c.customer.customerId = ?1
2018-11-06 22:45:11.701 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select csrqueue0_.csrqueue_id as csrqueue1_27_, csrqueue0_.comment as comment2_27_, csrqueue0_.complete as complete3_27_, csrqueue0_.customer_id as custome11_27_, csrqueue0_.hold as hold4_27_, csrqueue0_.queue_end_date as queue_en5_27_, csrqueue0_.queue_num_identification as queue_nu6_27_, csrqueue0_.queue_number as queue_nu7_27_, csrqueue0_.queue_pending as queue_pe8_27_, csrqueue0_.queue_reject as queue_re9_27_, csrqueue0_.queue_start_date as queue_s10_27_ from csr_queue csrqueue0_ where csrqueue0_.customer_id=?
2018-11-06 22:45:11.701 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.706 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c FROM com.spring.starter.model.CSRQueue c WHERE c.customer.customerId=?1
2018-11-06 22:45:11.706 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.707 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CSRQueue'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'c'
          |  |  \-[IDENT] Node: 'customer'
          |  \-[IDENT] Node: 'customerId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:11.707 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:11.707 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CSRQueue (c) -> csrqueue0_
2018-11-06 22:45:11.707 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.707 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.708 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customer -> org.hibernate.type.ManyToOneType(com.spring.starter.model.Customer)
2018-11-06 22:45:11.708 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerId in com.spring.starter.model.CSRQueue does not require a join.
2018-11-06 22:45:11.708 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customer.customerId'
2018-11-06 22:45:11.708 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.customer -> csrqueue0_.customer_id
2018-11-06 22:45:11.708 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customer.customerId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:11.708 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.customer.customerId -> csrqueue0_.customer_id
2018-11-06 22:45:11.708 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:11.709 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} csrqueue0_.csrqueue_id ) ( FromClause{level=1} csr_queue csrqueue0_ ) ( WHERE ( = ( csrqueue0_.customer_id ( csrqueue0_.customer_id csrqueue0_.csrqueue_id customer ) customerId ) ? ) ) )
2018-11-06 22:45:11.709 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [csr_queue csrqueue0_]
2018-11-06 22:45:11.709 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:11.709 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (csr_queue)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id as csrqueue1_27_' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
    |  \-[SQL_TOKEN] SqlFragment: 'csrqueue0_.comment as comment2_27_, csrqueue0_.complete as complete3_27_, csrqueue0_.customer_id as custome11_27_, csrqueue0_.hold as hold4_27_, csrqueue0_.queue_end_date as queue_en5_27_, csrqueue0_.queue_num_identification as queue_nu6_27_, csrqueue0_.queue_number as queue_nu7_27_, csrqueue0_.queue_pending as queue_pe8_27_, csrqueue0_.queue_reject as queue_re9_27_, csrqueue0_.queue_start_date as queue_s10_27_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[csrqueue0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'csr_queue csrqueue0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=csr_queue,tableAlias=csrqueue0_,origin=null,columns={,className=com.spring.starter.model.CSRQueue}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'csrqueue0_.customer_id' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customer.customerId,path=c.customer.customerId,tableAlias=csrqueue0_,className=com.spring.starter.model.CSRQueue,classAlias=c}
          |  +-[DOT] DotNode: 'csrqueue0_.customer_id' {propertyName=customerId,dereferenceType=UNKNOWN,getPropertyPath=customer.customerId,path=c.customer,tableAlias=csrqueue0_,className=com.spring.starter.model.CSRQueue,classAlias=c}
          |  |  +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
          |  |  \-[IDENT] IdentNode: 'customer' {originalText=customer}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:11.709 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.709 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c FROM com.spring.starter.model.CSRQueue c WHERE c.customer.customerId=?1
2018-11-06 22:45:11.709 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select csrqueue0_.csrqueue_id as csrqueue1_27_, csrqueue0_.comment as comment2_27_, csrqueue0_.complete as complete3_27_, csrqueue0_.customer_id as custome11_27_, csrqueue0_.hold as hold4_27_, csrqueue0_.queue_end_date as queue_en5_27_, csrqueue0_.queue_num_identification as queue_nu6_27_, csrqueue0_.queue_number as queue_nu7_27_, csrqueue0_.queue_pending as queue_pe8_27_, csrqueue0_.queue_reject as queue_re9_27_, csrqueue0_.queue_start_date as queue_s10_27_ from csr_queue csrqueue0_ where csrqueue0_.customer_id=?
2018-11-06 22:45:11.709 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.712 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c FROM com.spring.starter.model.CSRQueue c ORDER BY c.queueNumIdentification
2018-11-06 22:45:11.712 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.713 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CSRQueue'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[ORDER] Node: 'ORDER'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'c'
          \-[IDENT] Node: 'queueNumIdentification'

2018-11-06 22:45:11.713 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:11.713 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CSRQueue (c) -> csrqueue0_
2018-11-06 22:45:11.713 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.713 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.713 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : queueNumIdentification -> org.hibernate.type.DoubleType@60e54c31
2018-11-06 22:45:11.713 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.queueNumIdentification -> csrqueue0_.queue_num_identification
2018-11-06 22:45:11.713 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:11.713 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} csrqueue0_.csrqueue_id ) ( FromClause{level=1} csr_queue csrqueue0_ ) ( ORDER ( csrqueue0_.queue_num_identification csrqueue0_.csrqueue_id queueNumIdentification ) ) )
2018-11-06 22:45:11.714 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [csr_queue csrqueue0_]
2018-11-06 22:45:11.714 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:11.714 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (csr_queue)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id as csrqueue1_27_' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
    |  \-[SQL_TOKEN] SqlFragment: 'csrqueue0_.comment as comment2_27_, csrqueue0_.complete as complete3_27_, csrqueue0_.customer_id as custome11_27_, csrqueue0_.hold as hold4_27_, csrqueue0_.queue_end_date as queue_en5_27_, csrqueue0_.queue_num_identification as queue_nu6_27_, csrqueue0_.queue_number as queue_nu7_27_, csrqueue0_.queue_pending as queue_pe8_27_, csrqueue0_.queue_reject as queue_re9_27_, csrqueue0_.queue_start_date as queue_s10_27_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[csrqueue0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'csr_queue csrqueue0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=csr_queue,tableAlias=csrqueue0_,origin=null,columns={,className=com.spring.starter.model.CSRQueue}}
    \-[ORDER] OrderByClause: 'ORDER'
       \-[DOT] DotNode: 'csrqueue0_.queue_num_identification' {propertyName=queueNumIdentification,dereferenceType=PRIMITIVE,getPropertyPath=queueNumIdentification,path=c.queueNumIdentification,tableAlias=csrqueue0_,className=com.spring.starter.model.CSRQueue,classAlias=c}
          +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
          \-[IDENT] IdentNode: 'queueNumIdentification' {originalText=queueNumIdentification}

2018-11-06 22:45:11.718 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.718 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c FROM com.spring.starter.model.CSRQueue c ORDER BY c.queueNumIdentification
2018-11-06 22:45:11.718 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select csrqueue0_.csrqueue_id as csrqueue1_27_, csrqueue0_.comment as comment2_27_, csrqueue0_.complete as complete3_27_, csrqueue0_.customer_id as custome11_27_, csrqueue0_.hold as hold4_27_, csrqueue0_.queue_end_date as queue_en5_27_, csrqueue0_.queue_num_identification as queue_nu6_27_, csrqueue0_.queue_number as queue_nu7_27_, csrqueue0_.queue_pending as queue_pe8_27_, csrqueue0_.queue_reject as queue_re9_27_, csrqueue0_.queue_start_date as queue_s10_27_ from csr_queue csrqueue0_ order by csrqueue0_.queue_num_identification
2018-11-06 22:45:11.718 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.720 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT Count(c) FROM com.spring.starter.model.CSRQueue c 
2018-11-06 22:45:11.720 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.720 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'starter'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CSRQueue'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'SELECT'
          \-[COUNT] Node: 'Count'
             \-[IDENT] Node: 'c'

2018-11-06 22:45:11.721 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:11.721 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CSRQueue (c) -> csrqueue0_
2018-11-06 22:45:11.721 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.722 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:11.722 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} ( Count csrqueue0_.csrqueue_id ) ) ( FromClause{level=1} csr_queue csrqueue0_ ) )
2018-11-06 22:45:11.722 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [csr_queue csrqueue0_]
2018-11-06 22:45:11.722 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:11.723 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (csr_queue)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'Count'
    |  |  \-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[csrqueue0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'csr_queue csrqueue0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=csr_queue,tableAlias=csrqueue0_,origin=null,columns={,className=com.spring.starter.model.CSRQueue}}

2018-11-06 22:45:11.723 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.723 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT Count(c) FROM com.spring.starter.model.CSRQueue c 
2018-11-06 22:45:11.723 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select count(csrqueue0_.csrqueue_id) as col_0_0_ from csr_queue csrqueue0_
2018-11-06 22:45:11.723 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.725 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c FROM com.spring.starter.model.CSRQueue c WHERE c.queueNumber=?1
2018-11-06 22:45:11.725 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.725 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CSRQueue'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'queueNumber'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:11.726 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:11.726 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CSRQueue (c) -> csrqueue0_
2018-11-06 22:45:11.726 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.726 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.726 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : queueNumber -> org.hibernate.type.StringType@f620100
2018-11-06 22:45:11.726 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.queueNumber -> csrqueue0_.queue_number
2018-11-06 22:45:11.726 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:11.726 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} csrqueue0_.csrqueue_id ) ( FromClause{level=1} csr_queue csrqueue0_ ) ( WHERE ( = ( csrqueue0_.queue_number csrqueue0_.csrqueue_id queueNumber ) ? ) ) )
2018-11-06 22:45:11.726 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [csr_queue csrqueue0_]
2018-11-06 22:45:11.726 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:11.726 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (csr_queue)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id as csrqueue1_27_' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
    |  \-[SQL_TOKEN] SqlFragment: 'csrqueue0_.comment as comment2_27_, csrqueue0_.complete as complete3_27_, csrqueue0_.customer_id as custome11_27_, csrqueue0_.hold as hold4_27_, csrqueue0_.queue_end_date as queue_en5_27_, csrqueue0_.queue_num_identification as queue_nu6_27_, csrqueue0_.queue_number as queue_nu7_27_, csrqueue0_.queue_pending as queue_pe8_27_, csrqueue0_.queue_reject as queue_re9_27_, csrqueue0_.queue_start_date as queue_s10_27_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[csrqueue0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'csr_queue csrqueue0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=csr_queue,tableAlias=csrqueue0_,origin=null,columns={,className=com.spring.starter.model.CSRQueue}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'csrqueue0_.queue_number' {propertyName=queueNumber,dereferenceType=PRIMITIVE,getPropertyPath=queueNumber,path=c.queueNumber,tableAlias=csrqueue0_,className=com.spring.starter.model.CSRQueue,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
          |  \-[IDENT] IdentNode: 'queueNumber' {originalText=queueNumber}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@f620100}

2018-11-06 22:45:11.730 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.730 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c FROM com.spring.starter.model.CSRQueue c WHERE c.queueNumber=?1
2018-11-06 22:45:11.730 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select csrqueue0_.csrqueue_id as csrqueue1_27_, csrqueue0_.comment as comment2_27_, csrqueue0_.complete as complete3_27_, csrqueue0_.customer_id as custome11_27_, csrqueue0_.hold as hold4_27_, csrqueue0_.queue_end_date as queue_en5_27_, csrqueue0_.queue_num_identification as queue_nu6_27_, csrqueue0_.queue_number as queue_nu7_27_, csrqueue0_.queue_pending as queue_pe8_27_, csrqueue0_.queue_reject as queue_re9_27_, csrqueue0_.queue_start_date as queue_s10_27_ from csr_queue csrqueue0_ where csrqueue0_.queue_number=?
2018-11-06 22:45:11.730 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.732 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c.queueNumber FROM com.spring.starter.model.CSRQueue c WHERE c.customer.customerId=?1
2018-11-06 22:45:11.733 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.733 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CSRQueue'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'c'
    |        \-[IDENT] Node: 'queueNumber'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'c'
          |  |  \-[IDENT] Node: 'customer'
          |  \-[IDENT] Node: 'customerId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:11.733 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:11.733 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CSRQueue (c) -> csrqueue0_
2018-11-06 22:45:11.734 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.734 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : queueNumber -> org.hibernate.type.StringType@f620100
2018-11-06 22:45:11.734 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.queueNumber -> csrqueue0_.queue_number
2018-11-06 22:45:11.734 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.734 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customer -> org.hibernate.type.ManyToOneType(com.spring.starter.model.Customer)
2018-11-06 22:45:11.734 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerId in com.spring.starter.model.CSRQueue does not require a join.
2018-11-06 22:45:11.734 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customer.customerId'
2018-11-06 22:45:11.734 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.customer -> csrqueue0_.customer_id
2018-11-06 22:45:11.734 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customer.customerId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:11.734 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.customer.customerId -> csrqueue0_.customer_id
2018-11-06 22:45:11.735 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:11.735 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} ( csrqueue0_.queue_number csrqueue0_.csrqueue_id queueNumber ) ) ( FromClause{level=1} csr_queue csrqueue0_ ) ( WHERE ( = ( csrqueue0_.customer_id ( csrqueue0_.customer_id csrqueue0_.csrqueue_id customer ) customerId ) ? ) ) )
2018-11-06 22:45:11.735 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [csr_queue csrqueue0_]
2018-11-06 22:45:11.735 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:11.735 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (csr_queue)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'csrqueue0_.queue_number' {propertyName=queueNumber,dereferenceType=PRIMITIVE,getPropertyPath=queueNumber,path=c.queueNumber,tableAlias=csrqueue0_,className=com.spring.starter.model.CSRQueue,classAlias=c}
    |  |  +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
    |  |  \-[IDENT] IdentNode: 'queueNumber' {originalText=queueNumber}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[csrqueue0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'csr_queue csrqueue0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=csr_queue,tableAlias=csrqueue0_,origin=null,columns={,className=com.spring.starter.model.CSRQueue}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'csrqueue0_.customer_id' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customer.customerId,path=c.customer.customerId,tableAlias=csrqueue0_,className=com.spring.starter.model.CSRQueue,classAlias=c}
          |  +-[DOT] DotNode: 'csrqueue0_.customer_id' {propertyName=customerId,dereferenceType=UNKNOWN,getPropertyPath=customer.customerId,path=c.customer,tableAlias=csrqueue0_,className=com.spring.starter.model.CSRQueue,classAlias=c}
          |  |  +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
          |  |  \-[IDENT] IdentNode: 'customer' {originalText=customer}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:11.735 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.735 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c.queueNumber FROM com.spring.starter.model.CSRQueue c WHERE c.customer.customerId=?1
2018-11-06 22:45:11.735 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select csrqueue0_.queue_number as col_0_0_ from csr_queue csrqueue0_ where csrqueue0_.customer_id=?
2018-11-06 22:45:11.735 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.737 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c FROM com.spring.starter.model.CSRQueue c WHERE c.hold = false and c.complete=true and c.queuePending =false ORDER BY c.queueNumIdentification
2018-11-06 22:45:11.738 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.738 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CSRQueue'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    +-[WHERE] Node: 'WHERE'
    |  \-[AND] Node: 'and'
    |     +-[AND] Node: 'and'
    |     |  +-[EQ] Node: '='
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'c'
    |     |  |  |  \-[IDENT] Node: 'hold'
    |     |  |  \-[FALSE] Node: 'false'
    |     |  \-[EQ] Node: '='
    |     |     +-[DOT] Node: '.'
    |     |     |  +-[IDENT] Node: 'c'
    |     |     |  \-[IDENT] Node: 'complete'
    |     |     \-[TRUE] Node: 'true'
    |     \-[EQ] Node: '='
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'c'
    |        |  \-[IDENT] Node: 'queuePending'
    |        \-[FALSE] Node: 'false'
    \-[ORDER] Node: 'ORDER'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'c'
          \-[IDENT] Node: 'queueNumIdentification'

2018-11-06 22:45:11.738 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:11.738 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CSRQueue (c) -> csrqueue0_
2018-11-06 22:45:11.738 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.738 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.738 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : hold -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:11.738 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.hold -> csrqueue0_.hold
2018-11-06 22:45:11.738 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.738 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : complete -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:11.738 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.complete -> csrqueue0_.complete
2018-11-06 22:45:11.738 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.739 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : queuePending -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:11.740 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.queuePending -> csrqueue0_.queue_pending
2018-11-06 22:45:11.740 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.740 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : queueNumIdentification -> org.hibernate.type.DoubleType@60e54c31
2018-11-06 22:45:11.740 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.queueNumIdentification -> csrqueue0_.queue_num_identification
2018-11-06 22:45:11.740 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:11.740 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} csrqueue0_.csrqueue_id ) ( FromClause{level=1} csr_queue csrqueue0_ ) ( WHERE ( and ( and ( = ( csrqueue0_.hold csrqueue0_.csrqueue_id hold ) false ) ( = ( csrqueue0_.complete csrqueue0_.csrqueue_id complete ) true ) ) ( = ( csrqueue0_.queue_pending csrqueue0_.csrqueue_id queuePending ) false ) ) ) ( ORDER ( csrqueue0_.queue_num_identification csrqueue0_.csrqueue_id queueNumIdentification ) ) )
2018-11-06 22:45:11.740 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [csr_queue csrqueue0_]
2018-11-06 22:45:11.740 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:11.740 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (csr_queue)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id as csrqueue1_27_' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
    |  \-[SQL_TOKEN] SqlFragment: 'csrqueue0_.comment as comment2_27_, csrqueue0_.complete as complete3_27_, csrqueue0_.customer_id as custome11_27_, csrqueue0_.hold as hold4_27_, csrqueue0_.queue_end_date as queue_en5_27_, csrqueue0_.queue_num_identification as queue_nu6_27_, csrqueue0_.queue_number as queue_nu7_27_, csrqueue0_.queue_pending as queue_pe8_27_, csrqueue0_.queue_reject as queue_re9_27_, csrqueue0_.queue_start_date as queue_s10_27_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[csrqueue0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'csr_queue csrqueue0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=csr_queue,tableAlias=csrqueue0_,origin=null,columns={,className=com.spring.starter.model.CSRQueue}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[AND] SqlNode: 'and'
    |     +-[AND] SqlNode: 'and'
    |     |  +-[EQ] BinaryLogicOperatorNode: '='
    |     |  |  +-[DOT] DotNode: 'csrqueue0_.hold' {propertyName=hold,dereferenceType=PRIMITIVE,getPropertyPath=hold,path=c.hold,tableAlias=csrqueue0_,className=com.spring.starter.model.CSRQueue,classAlias=c}
    |     |  |  |  +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
    |     |  |  |  \-[IDENT] IdentNode: 'hold' {originalText=hold}
    |     |  |  \-[FALSE] BooleanLiteralNode: 'false'
    |     |  \-[EQ] BinaryLogicOperatorNode: '='
    |     |     +-[DOT] DotNode: 'csrqueue0_.complete' {propertyName=complete,dereferenceType=PRIMITIVE,getPropertyPath=complete,path=c.complete,tableAlias=csrqueue0_,className=com.spring.starter.model.CSRQueue,classAlias=c}
    |     |     |  +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
    |     |     |  \-[IDENT] IdentNode: 'complete' {originalText=complete}
    |     |     \-[TRUE] BooleanLiteralNode: 'true'
    |     \-[EQ] BinaryLogicOperatorNode: '='
    |        +-[DOT] DotNode: 'csrqueue0_.queue_pending' {propertyName=queuePending,dereferenceType=PRIMITIVE,getPropertyPath=queuePending,path=c.queuePending,tableAlias=csrqueue0_,className=com.spring.starter.model.CSRQueue,classAlias=c}
    |        |  +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
    |        |  \-[IDENT] IdentNode: 'queuePending' {originalText=queuePending}
    |        \-[FALSE] BooleanLiteralNode: 'false'
    \-[ORDER] OrderByClause: 'ORDER'
       \-[DOT] DotNode: 'csrqueue0_.queue_num_identification' {propertyName=queueNumIdentification,dereferenceType=PRIMITIVE,getPropertyPath=queueNumIdentification,path=c.queueNumIdentification,tableAlias=csrqueue0_,className=com.spring.starter.model.CSRQueue,classAlias=c}
          +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
          \-[IDENT] IdentNode: 'queueNumIdentification' {originalText=queueNumIdentification}

2018-11-06 22:45:11.742 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.742 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c FROM com.spring.starter.model.CSRQueue c WHERE c.hold = false and c.complete=true and c.queuePending =false ORDER BY c.queueNumIdentification
2018-11-06 22:45:11.742 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select csrqueue0_.csrqueue_id as csrqueue1_27_, csrqueue0_.comment as comment2_27_, csrqueue0_.complete as complete3_27_, csrqueue0_.customer_id as custome11_27_, csrqueue0_.hold as hold4_27_, csrqueue0_.queue_end_date as queue_en5_27_, csrqueue0_.queue_num_identification as queue_nu6_27_, csrqueue0_.queue_number as queue_nu7_27_, csrqueue0_.queue_pending as queue_pe8_27_, csrqueue0_.queue_reject as queue_re9_27_, csrqueue0_.queue_start_date as queue_s10_27_ from csr_queue csrqueue0_ where csrqueue0_.hold=0 and csrqueue0_.complete=1 and csrqueue0_.queue_pending=0 order by csrqueue0_.queue_num_identification
2018-11-06 22:45:11.742 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.744 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c FROM com.spring.starter.model.CSRQueue c WHERE c.hold = true and c.complete=false ORDER BY c.queueNumIdentification
2018-11-06 22:45:11.744 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.745 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CSRQueue'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    +-[WHERE] Node: 'WHERE'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'c'
    |     |  |  \-[IDENT] Node: 'hold'
    |     |  \-[TRUE] Node: 'true'
    |     \-[EQ] Node: '='
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'c'
    |        |  \-[IDENT] Node: 'complete'
    |        \-[FALSE] Node: 'false'
    \-[ORDER] Node: 'ORDER'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'c'
          \-[IDENT] Node: 'queueNumIdentification'

2018-11-06 22:45:11.745 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:11.745 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CSRQueue (c) -> csrqueue0_
2018-11-06 22:45:11.745 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.745 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.745 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : hold -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:11.745 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.hold -> csrqueue0_.hold
2018-11-06 22:45:11.745 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.745 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : complete -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:11.745 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.complete -> csrqueue0_.complete
2018-11-06 22:45:11.746 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> csrqueue0_.csrqueue_id
2018-11-06 22:45:11.746 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : queueNumIdentification -> org.hibernate.type.DoubleType@60e54c31
2018-11-06 22:45:11.746 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.queueNumIdentification -> csrqueue0_.queue_num_identification
2018-11-06 22:45:11.746 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:11.746 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} csrqueue0_.csrqueue_id ) ( FromClause{level=1} csr_queue csrqueue0_ ) ( WHERE ( and ( = ( csrqueue0_.hold csrqueue0_.csrqueue_id hold ) true ) ( = ( csrqueue0_.complete csrqueue0_.csrqueue_id complete ) false ) ) ) ( ORDER ( csrqueue0_.queue_num_identification csrqueue0_.csrqueue_id queueNumIdentification ) ) )
2018-11-06 22:45:11.746 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [csr_queue csrqueue0_]
2018-11-06 22:45:11.746 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:11.746 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (csr_queue)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id as csrqueue1_27_' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
    |  \-[SQL_TOKEN] SqlFragment: 'csrqueue0_.comment as comment2_27_, csrqueue0_.complete as complete3_27_, csrqueue0_.customer_id as custome11_27_, csrqueue0_.hold as hold4_27_, csrqueue0_.queue_end_date as queue_en5_27_, csrqueue0_.queue_num_identification as queue_nu6_27_, csrqueue0_.queue_number as queue_nu7_27_, csrqueue0_.queue_pending as queue_pe8_27_, csrqueue0_.queue_reject as queue_re9_27_, csrqueue0_.queue_start_date as queue_s10_27_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[csrqueue0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'csr_queue csrqueue0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=csr_queue,tableAlias=csrqueue0_,origin=null,columns={,className=com.spring.starter.model.CSRQueue}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[DOT] DotNode: 'csrqueue0_.hold' {propertyName=hold,dereferenceType=PRIMITIVE,getPropertyPath=hold,path=c.hold,tableAlias=csrqueue0_,className=com.spring.starter.model.CSRQueue,classAlias=c}
    |     |  |  +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
    |     |  |  \-[IDENT] IdentNode: 'hold' {originalText=hold}
    |     |  \-[TRUE] BooleanLiteralNode: 'true'
    |     \-[EQ] BinaryLogicOperatorNode: '='
    |        +-[DOT] DotNode: 'csrqueue0_.complete' {propertyName=complete,dereferenceType=PRIMITIVE,getPropertyPath=complete,path=c.complete,tableAlias=csrqueue0_,className=com.spring.starter.model.CSRQueue,classAlias=c}
    |        |  +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
    |        |  \-[IDENT] IdentNode: 'complete' {originalText=complete}
    |        \-[FALSE] BooleanLiteralNode: 'false'
    \-[ORDER] OrderByClause: 'ORDER'
       \-[DOT] DotNode: 'csrqueue0_.queue_num_identification' {propertyName=queueNumIdentification,dereferenceType=PRIMITIVE,getPropertyPath=queueNumIdentification,path=c.queueNumIdentification,tableAlias=csrqueue0_,className=com.spring.starter.model.CSRQueue,classAlias=c}
          +-[ALIAS_REF] IdentNode: 'csrqueue0_.csrqueue_id' {alias=c, className=com.spring.starter.model.CSRQueue, tableAlias=csrqueue0_}
          \-[IDENT] IdentNode: 'queueNumIdentification' {originalText=queueNumIdentification}

2018-11-06 22:45:11.746 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.746 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c FROM com.spring.starter.model.CSRQueue c WHERE c.hold = true and c.complete=false ORDER BY c.queueNumIdentification
2018-11-06 22:45:11.746 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select csrqueue0_.csrqueue_id as csrqueue1_27_, csrqueue0_.comment as comment2_27_, csrqueue0_.complete as complete3_27_, csrqueue0_.customer_id as custome11_27_, csrqueue0_.hold as hold4_27_, csrqueue0_.queue_end_date as queue_en5_27_, csrqueue0_.queue_num_identification as queue_nu6_27_, csrqueue0_.queue_number as queue_nu7_27_, csrqueue0_.queue_pending as queue_pe8_27_, csrqueue0_.queue_reject as queue_re9_27_, csrqueue0_.queue_start_date as queue_s10_27_ from csr_queue csrqueue0_ where csrqueue0_.hold=1 and csrqueue0_.complete=0 order by csrqueue0_.queue_num_identification
2018-11-06 22:45:11.747 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.760 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c FROM com.spring.starter.model.TellerQueue c WHERE c.hold = false and c.complete=true and c.queuePending =false ORDER BY c.queueNumIdentification
2018-11-06 22:45:11.761 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.761 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'TellerQueue'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    +-[WHERE] Node: 'WHERE'
    |  \-[AND] Node: 'and'
    |     +-[AND] Node: 'and'
    |     |  +-[EQ] Node: '='
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'c'
    |     |  |  |  \-[IDENT] Node: 'hold'
    |     |  |  \-[FALSE] Node: 'false'
    |     |  \-[EQ] Node: '='
    |     |     +-[DOT] Node: '.'
    |     |     |  +-[IDENT] Node: 'c'
    |     |     |  \-[IDENT] Node: 'complete'
    |     |     \-[TRUE] Node: 'true'
    |     \-[EQ] Node: '='
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'c'
    |        |  \-[IDENT] Node: 'queuePending'
    |        \-[FALSE] Node: 'false'
    \-[ORDER] Node: 'ORDER'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'c'
          \-[IDENT] Node: 'queueNumIdentification'

2018-11-06 22:45:11.761 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:11.762 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.TellerQueue (c) -> tellerqueu0_
2018-11-06 22:45:11.762 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.762 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.762 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : hold -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:11.762 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.hold -> tellerqueu0_.hold
2018-11-06 22:45:11.762 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.762 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : complete -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:11.762 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.complete -> tellerqueu0_.complete
2018-11-06 22:45:11.764 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.764 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : queuePending -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:11.764 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.queuePending -> tellerqueu0_.queue_pending
2018-11-06 22:45:11.764 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.764 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : queueNumIdentification -> org.hibernate.type.DoubleType@60e54c31
2018-11-06 22:45:11.765 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.queueNumIdentification -> tellerqueu0_.queue_num_identification
2018-11-06 22:45:11.765 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:11.765 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} tellerqueu0_.teler_queue_id ) ( FromClause{level=1} teller_queue tellerqueu0_ ) ( WHERE ( and ( and ( = ( tellerqueu0_.hold tellerqueu0_.teler_queue_id hold ) false ) ( = ( tellerqueu0_.complete tellerqueu0_.teler_queue_id complete ) true ) ) ( = ( tellerqueu0_.queue_pending tellerqueu0_.teler_queue_id queuePending ) false ) ) ) ( ORDER ( tellerqueu0_.queue_num_identification tellerqueu0_.teler_queue_id queueNumIdentification ) ) )
2018-11-06 22:45:11.765 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [teller_queue tellerqueu0_]
2018-11-06 22:45:11.765 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:11.765 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teller_queue)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id as teler_qu1_91_' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
    |  \-[SQL_TOKEN] SqlFragment: 'tellerqueu0_.comment as comment2_91_, tellerqueu0_.complete as complete3_91_, tellerqueu0_.hold as hold4_91_, tellerqueu0_.queue_end_date as queue_en5_91_, tellerqueu0_.queue_num_identification as queue_nu6_91_, tellerqueu0_.queue_number as queue_nu7_91_, tellerqueu0_.queue_pending as queue_pe8_91_, tellerqueu0_.queue_reject as queue_re9_91_, tellerqueu0_.queue_start_date as queue_s10_91_, tellerqueu0_.transaction_customer_id as transac11_91_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[tellerqueu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'teller_queue tellerqueu0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=teller_queue,tableAlias=tellerqueu0_,origin=null,columns={,className=com.spring.starter.model.TellerQueue}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[AND] SqlNode: 'and'
    |     +-[AND] SqlNode: 'and'
    |     |  +-[EQ] BinaryLogicOperatorNode: '='
    |     |  |  +-[DOT] DotNode: 'tellerqueu0_.hold' {propertyName=hold,dereferenceType=PRIMITIVE,getPropertyPath=hold,path=c.hold,tableAlias=tellerqueu0_,className=com.spring.starter.model.TellerQueue,classAlias=c}
    |     |  |  |  +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
    |     |  |  |  \-[IDENT] IdentNode: 'hold' {originalText=hold}
    |     |  |  \-[FALSE] BooleanLiteralNode: 'false'
    |     |  \-[EQ] BinaryLogicOperatorNode: '='
    |     |     +-[DOT] DotNode: 'tellerqueu0_.complete' {propertyName=complete,dereferenceType=PRIMITIVE,getPropertyPath=complete,path=c.complete,tableAlias=tellerqueu0_,className=com.spring.starter.model.TellerQueue,classAlias=c}
    |     |     |  +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
    |     |     |  \-[IDENT] IdentNode: 'complete' {originalText=complete}
    |     |     \-[TRUE] BooleanLiteralNode: 'true'
    |     \-[EQ] BinaryLogicOperatorNode: '='
    |        +-[DOT] DotNode: 'tellerqueu0_.queue_pending' {propertyName=queuePending,dereferenceType=PRIMITIVE,getPropertyPath=queuePending,path=c.queuePending,tableAlias=tellerqueu0_,className=com.spring.starter.model.TellerQueue,classAlias=c}
    |        |  +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
    |        |  \-[IDENT] IdentNode: 'queuePending' {originalText=queuePending}
    |        \-[FALSE] BooleanLiteralNode: 'false'
    \-[ORDER] OrderByClause: 'ORDER'
       \-[DOT] DotNode: 'tellerqueu0_.queue_num_identification' {propertyName=queueNumIdentification,dereferenceType=PRIMITIVE,getPropertyPath=queueNumIdentification,path=c.queueNumIdentification,tableAlias=tellerqueu0_,className=com.spring.starter.model.TellerQueue,classAlias=c}
          +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
          \-[IDENT] IdentNode: 'queueNumIdentification' {originalText=queueNumIdentification}

2018-11-06 22:45:11.765 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.766 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c FROM com.spring.starter.model.TellerQueue c WHERE c.hold = false and c.complete=true and c.queuePending =false ORDER BY c.queueNumIdentification
2018-11-06 22:45:11.766 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select tellerqueu0_.teler_queue_id as teler_qu1_91_, tellerqueu0_.comment as comment2_91_, tellerqueu0_.complete as complete3_91_, tellerqueu0_.hold as hold4_91_, tellerqueu0_.queue_end_date as queue_en5_91_, tellerqueu0_.queue_num_identification as queue_nu6_91_, tellerqueu0_.queue_number as queue_nu7_91_, tellerqueu0_.queue_pending as queue_pe8_91_, tellerqueu0_.queue_reject as queue_re9_91_, tellerqueu0_.queue_start_date as queue_s10_91_, tellerqueu0_.transaction_customer_id as transac11_91_ from teller_queue tellerqueu0_ where tellerqueu0_.hold=0 and tellerqueu0_.complete=1 and tellerqueu0_.queue_pending=0 order by tellerqueu0_.queue_num_identification
2018-11-06 22:45:11.766 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.768 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c FROM com.spring.starter.model.TellerQueue c WHERE c.transactionCustomer.transactionCustomerId=?1
2018-11-06 22:45:11.769 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.769 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'TellerQueue'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'c'
          |  |  \-[IDENT] Node: 'transactionCustomer'
          |  \-[IDENT] Node: 'transactionCustomerId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:11.769 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:11.769 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.TellerQueue (c) -> tellerqueu0_
2018-11-06 22:45:11.769 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.770 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.770 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : transactionCustomer -> org.hibernate.type.ManyToOneType(com.spring.starter.model.TransactionCustomer)
2018-11-06 22:45:11.770 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property transactionCustomerId in com.spring.starter.model.TellerQueue does not require a join.
2018-11-06 22:45:11.770 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'transactionCustomer.transactionCustomerId'
2018-11-06 22:45:11.770 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.transactionCustomer -> tellerqueu0_.transaction_customer_id
2018-11-06 22:45:11.770 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : transactionCustomer.transactionCustomerId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:11.770 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.transactionCustomer.transactionCustomerId -> tellerqueu0_.transaction_customer_id
2018-11-06 22:45:11.773 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:11.773 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} tellerqueu0_.teler_queue_id ) ( FromClause{level=1} teller_queue tellerqueu0_ ) ( WHERE ( = ( tellerqueu0_.transaction_customer_id ( tellerqueu0_.transaction_customer_id tellerqueu0_.teler_queue_id transactionCustomer ) transactionCustomerId ) ? ) ) )
2018-11-06 22:45:11.773 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [teller_queue tellerqueu0_]
2018-11-06 22:45:11.773 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:11.773 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teller_queue)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id as teler_qu1_91_' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
    |  \-[SQL_TOKEN] SqlFragment: 'tellerqueu0_.comment as comment2_91_, tellerqueu0_.complete as complete3_91_, tellerqueu0_.hold as hold4_91_, tellerqueu0_.queue_end_date as queue_en5_91_, tellerqueu0_.queue_num_identification as queue_nu6_91_, tellerqueu0_.queue_number as queue_nu7_91_, tellerqueu0_.queue_pending as queue_pe8_91_, tellerqueu0_.queue_reject as queue_re9_91_, tellerqueu0_.queue_start_date as queue_s10_91_, tellerqueu0_.transaction_customer_id as transac11_91_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[tellerqueu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'teller_queue tellerqueu0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=teller_queue,tableAlias=tellerqueu0_,origin=null,columns={,className=com.spring.starter.model.TellerQueue}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'tellerqueu0_.transaction_customer_id' {propertyName=transactionCustomerId,dereferenceType=PRIMITIVE,getPropertyPath=transactionCustomer.transactionCustomerId,path=c.transactionCustomer.transactionCustomerId,tableAlias=tellerqueu0_,className=com.spring.starter.model.TellerQueue,classAlias=c}
          |  +-[DOT] DotNode: 'tellerqueu0_.transaction_customer_id' {propertyName=transactionCustomerId,dereferenceType=UNKNOWN,getPropertyPath=transactionCustomer.transactionCustomerId,path=c.transactionCustomer,tableAlias=tellerqueu0_,className=com.spring.starter.model.TellerQueue,classAlias=c}
          |  |  +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
          |  |  \-[IDENT] IdentNode: 'transactionCustomer' {originalText=transactionCustomer}
          |  \-[IDENT] IdentNode: 'transactionCustomerId' {originalText=transactionCustomerId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:11.773 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.773 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c FROM com.spring.starter.model.TellerQueue c WHERE c.transactionCustomer.transactionCustomerId=?1
2018-11-06 22:45:11.774 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select tellerqueu0_.teler_queue_id as teler_qu1_91_, tellerqueu0_.comment as comment2_91_, tellerqueu0_.complete as complete3_91_, tellerqueu0_.hold as hold4_91_, tellerqueu0_.queue_end_date as queue_en5_91_, tellerqueu0_.queue_num_identification as queue_nu6_91_, tellerqueu0_.queue_number as queue_nu7_91_, tellerqueu0_.queue_pending as queue_pe8_91_, tellerqueu0_.queue_reject as queue_re9_91_, tellerqueu0_.queue_start_date as queue_s10_91_, tellerqueu0_.transaction_customer_id as transac11_91_ from teller_queue tellerqueu0_ where tellerqueu0_.transaction_customer_id=?
2018-11-06 22:45:11.774 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.775 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c FROM com.spring.starter.model.TellerQueue c WHERE c.hold = true and c.complete=false ORDER BY c.queueNumIdentification
2018-11-06 22:45:11.775 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.775 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'TellerQueue'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    +-[WHERE] Node: 'WHERE'
    |  \-[AND] Node: 'and'
    |     +-[EQ] Node: '='
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'c'
    |     |  |  \-[IDENT] Node: 'hold'
    |     |  \-[TRUE] Node: 'true'
    |     \-[EQ] Node: '='
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'c'
    |        |  \-[IDENT] Node: 'complete'
    |        \-[FALSE] Node: 'false'
    \-[ORDER] Node: 'ORDER'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'c'
          \-[IDENT] Node: 'queueNumIdentification'

2018-11-06 22:45:11.776 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:11.776 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.TellerQueue (c) -> tellerqueu0_
2018-11-06 22:45:11.776 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.776 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.776 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : hold -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:11.776 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.hold -> tellerqueu0_.hold
2018-11-06 22:45:11.776 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.776 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : complete -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:11.776 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.complete -> tellerqueu0_.complete
2018-11-06 22:45:11.776 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.780 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : queueNumIdentification -> org.hibernate.type.DoubleType@60e54c31
2018-11-06 22:45:11.780 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.queueNumIdentification -> tellerqueu0_.queue_num_identification
2018-11-06 22:45:11.780 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:11.780 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} tellerqueu0_.teler_queue_id ) ( FromClause{level=1} teller_queue tellerqueu0_ ) ( WHERE ( and ( = ( tellerqueu0_.hold tellerqueu0_.teler_queue_id hold ) true ) ( = ( tellerqueu0_.complete tellerqueu0_.teler_queue_id complete ) false ) ) ) ( ORDER ( tellerqueu0_.queue_num_identification tellerqueu0_.teler_queue_id queueNumIdentification ) ) )
2018-11-06 22:45:11.780 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [teller_queue tellerqueu0_]
2018-11-06 22:45:11.780 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:11.780 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teller_queue)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id as teler_qu1_91_' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
    |  \-[SQL_TOKEN] SqlFragment: 'tellerqueu0_.comment as comment2_91_, tellerqueu0_.complete as complete3_91_, tellerqueu0_.hold as hold4_91_, tellerqueu0_.queue_end_date as queue_en5_91_, tellerqueu0_.queue_num_identification as queue_nu6_91_, tellerqueu0_.queue_number as queue_nu7_91_, tellerqueu0_.queue_pending as queue_pe8_91_, tellerqueu0_.queue_reject as queue_re9_91_, tellerqueu0_.queue_start_date as queue_s10_91_, tellerqueu0_.transaction_customer_id as transac11_91_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[tellerqueu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'teller_queue tellerqueu0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=teller_queue,tableAlias=tellerqueu0_,origin=null,columns={,className=com.spring.starter.model.TellerQueue}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[AND] SqlNode: 'and'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[DOT] DotNode: 'tellerqueu0_.hold' {propertyName=hold,dereferenceType=PRIMITIVE,getPropertyPath=hold,path=c.hold,tableAlias=tellerqueu0_,className=com.spring.starter.model.TellerQueue,classAlias=c}
    |     |  |  +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
    |     |  |  \-[IDENT] IdentNode: 'hold' {originalText=hold}
    |     |  \-[TRUE] BooleanLiteralNode: 'true'
    |     \-[EQ] BinaryLogicOperatorNode: '='
    |        +-[DOT] DotNode: 'tellerqueu0_.complete' {propertyName=complete,dereferenceType=PRIMITIVE,getPropertyPath=complete,path=c.complete,tableAlias=tellerqueu0_,className=com.spring.starter.model.TellerQueue,classAlias=c}
    |        |  +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
    |        |  \-[IDENT] IdentNode: 'complete' {originalText=complete}
    |        \-[FALSE] BooleanLiteralNode: 'false'
    \-[ORDER] OrderByClause: 'ORDER'
       \-[DOT] DotNode: 'tellerqueu0_.queue_num_identification' {propertyName=queueNumIdentification,dereferenceType=PRIMITIVE,getPropertyPath=queueNumIdentification,path=c.queueNumIdentification,tableAlias=tellerqueu0_,className=com.spring.starter.model.TellerQueue,classAlias=c}
          +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
          \-[IDENT] IdentNode: 'queueNumIdentification' {originalText=queueNumIdentification}

2018-11-06 22:45:11.781 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.781 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c FROM com.spring.starter.model.TellerQueue c WHERE c.hold = true and c.complete=false ORDER BY c.queueNumIdentification
2018-11-06 22:45:11.781 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select tellerqueu0_.teler_queue_id as teler_qu1_91_, tellerqueu0_.comment as comment2_91_, tellerqueu0_.complete as complete3_91_, tellerqueu0_.hold as hold4_91_, tellerqueu0_.queue_end_date as queue_en5_91_, tellerqueu0_.queue_num_identification as queue_nu6_91_, tellerqueu0_.queue_number as queue_nu7_91_, tellerqueu0_.queue_pending as queue_pe8_91_, tellerqueu0_.queue_reject as queue_re9_91_, tellerqueu0_.queue_start_date as queue_s10_91_, tellerqueu0_.transaction_customer_id as transac11_91_ from teller_queue tellerqueu0_ where tellerqueu0_.hold=1 and tellerqueu0_.complete=0 order by tellerqueu0_.queue_num_identification
2018-11-06 22:45:11.781 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.782 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c FROM com.spring.starter.model.TellerQueue c WHERE c.hold = false and c.complete=false and c.queuePending =true ORDER BY c.queueNumIdentification
2018-11-06 22:45:11.782 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.783 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'TellerQueue'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    +-[WHERE] Node: 'WHERE'
    |  \-[AND] Node: 'and'
    |     +-[AND] Node: 'and'
    |     |  +-[EQ] Node: '='
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'c'
    |     |  |  |  \-[IDENT] Node: 'hold'
    |     |  |  \-[FALSE] Node: 'false'
    |     |  \-[EQ] Node: '='
    |     |     +-[DOT] Node: '.'
    |     |     |  +-[IDENT] Node: 'c'
    |     |     |  \-[IDENT] Node: 'complete'
    |     |     \-[FALSE] Node: 'false'
    |     \-[EQ] Node: '='
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'c'
    |        |  \-[IDENT] Node: 'queuePending'
    |        \-[TRUE] Node: 'true'
    \-[ORDER] Node: 'ORDER'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'c'
          \-[IDENT] Node: 'queueNumIdentification'

2018-11-06 22:45:11.783 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:11.783 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.TellerQueue (c) -> tellerqueu0_
2018-11-06 22:45:11.783 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.783 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.783 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : hold -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:11.783 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.hold -> tellerqueu0_.hold
2018-11-06 22:45:11.783 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.783 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : complete -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:11.783 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.complete -> tellerqueu0_.complete
2018-11-06 22:45:11.787 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.787 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : queuePending -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:11.787 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.queuePending -> tellerqueu0_.queue_pending
2018-11-06 22:45:11.787 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.788 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : queueNumIdentification -> org.hibernate.type.DoubleType@60e54c31
2018-11-06 22:45:11.788 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.queueNumIdentification -> tellerqueu0_.queue_num_identification
2018-11-06 22:45:11.788 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:11.788 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} tellerqueu0_.teler_queue_id ) ( FromClause{level=1} teller_queue tellerqueu0_ ) ( WHERE ( and ( and ( = ( tellerqueu0_.hold tellerqueu0_.teler_queue_id hold ) false ) ( = ( tellerqueu0_.complete tellerqueu0_.teler_queue_id complete ) false ) ) ( = ( tellerqueu0_.queue_pending tellerqueu0_.teler_queue_id queuePending ) true ) ) ) ( ORDER ( tellerqueu0_.queue_num_identification tellerqueu0_.teler_queue_id queueNumIdentification ) ) )
2018-11-06 22:45:11.788 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [teller_queue tellerqueu0_]
2018-11-06 22:45:11.788 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:11.788 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teller_queue)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id as teler_qu1_91_' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
    |  \-[SQL_TOKEN] SqlFragment: 'tellerqueu0_.comment as comment2_91_, tellerqueu0_.complete as complete3_91_, tellerqueu0_.hold as hold4_91_, tellerqueu0_.queue_end_date as queue_en5_91_, tellerqueu0_.queue_num_identification as queue_nu6_91_, tellerqueu0_.queue_number as queue_nu7_91_, tellerqueu0_.queue_pending as queue_pe8_91_, tellerqueu0_.queue_reject as queue_re9_91_, tellerqueu0_.queue_start_date as queue_s10_91_, tellerqueu0_.transaction_customer_id as transac11_91_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[tellerqueu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'teller_queue tellerqueu0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=teller_queue,tableAlias=tellerqueu0_,origin=null,columns={,className=com.spring.starter.model.TellerQueue}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[AND] SqlNode: 'and'
    |     +-[AND] SqlNode: 'and'
    |     |  +-[EQ] BinaryLogicOperatorNode: '='
    |     |  |  +-[DOT] DotNode: 'tellerqueu0_.hold' {propertyName=hold,dereferenceType=PRIMITIVE,getPropertyPath=hold,path=c.hold,tableAlias=tellerqueu0_,className=com.spring.starter.model.TellerQueue,classAlias=c}
    |     |  |  |  +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
    |     |  |  |  \-[IDENT] IdentNode: 'hold' {originalText=hold}
    |     |  |  \-[FALSE] BooleanLiteralNode: 'false'
    |     |  \-[EQ] BinaryLogicOperatorNode: '='
    |     |     +-[DOT] DotNode: 'tellerqueu0_.complete' {propertyName=complete,dereferenceType=PRIMITIVE,getPropertyPath=complete,path=c.complete,tableAlias=tellerqueu0_,className=com.spring.starter.model.TellerQueue,classAlias=c}
    |     |     |  +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
    |     |     |  \-[IDENT] IdentNode: 'complete' {originalText=complete}
    |     |     \-[FALSE] BooleanLiteralNode: 'false'
    |     \-[EQ] BinaryLogicOperatorNode: '='
    |        +-[DOT] DotNode: 'tellerqueu0_.queue_pending' {propertyName=queuePending,dereferenceType=PRIMITIVE,getPropertyPath=queuePending,path=c.queuePending,tableAlias=tellerqueu0_,className=com.spring.starter.model.TellerQueue,classAlias=c}
    |        |  +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
    |        |  \-[IDENT] IdentNode: 'queuePending' {originalText=queuePending}
    |        \-[TRUE] BooleanLiteralNode: 'true'
    \-[ORDER] OrderByClause: 'ORDER'
       \-[DOT] DotNode: 'tellerqueu0_.queue_num_identification' {propertyName=queueNumIdentification,dereferenceType=PRIMITIVE,getPropertyPath=queueNumIdentification,path=c.queueNumIdentification,tableAlias=tellerqueu0_,className=com.spring.starter.model.TellerQueue,classAlias=c}
          +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
          \-[IDENT] IdentNode: 'queueNumIdentification' {originalText=queueNumIdentification}

2018-11-06 22:45:11.789 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.789 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c FROM com.spring.starter.model.TellerQueue c WHERE c.hold = false and c.complete=false and c.queuePending =true ORDER BY c.queueNumIdentification
2018-11-06 22:45:11.789 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select tellerqueu0_.teler_queue_id as teler_qu1_91_, tellerqueu0_.comment as comment2_91_, tellerqueu0_.complete as complete3_91_, tellerqueu0_.hold as hold4_91_, tellerqueu0_.queue_end_date as queue_en5_91_, tellerqueu0_.queue_num_identification as queue_nu6_91_, tellerqueu0_.queue_number as queue_nu7_91_, tellerqueu0_.queue_pending as queue_pe8_91_, tellerqueu0_.queue_reject as queue_re9_91_, tellerqueu0_.queue_start_date as queue_s10_91_, tellerqueu0_.transaction_customer_id as transac11_91_ from teller_queue tellerqueu0_ where tellerqueu0_.hold=0 and tellerqueu0_.complete=0 and tellerqueu0_.queue_pending=1 order by tellerqueu0_.queue_num_identification
2018-11-06 22:45:11.789 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.790 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c FROM com.spring.starter.model.TellerQueue c WHERE c.queueNumber=?1
2018-11-06 22:45:11.791 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.791 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'TellerQueue'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'queueNumber'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:11.791 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:11.791 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.TellerQueue (c) -> tellerqueu0_
2018-11-06 22:45:11.791 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.791 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.791 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : queueNumber -> org.hibernate.type.StringType@f620100
2018-11-06 22:45:11.791 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.queueNumber -> tellerqueu0_.queue_number
2018-11-06 22:45:11.791 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:11.791 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} tellerqueu0_.teler_queue_id ) ( FromClause{level=1} teller_queue tellerqueu0_ ) ( WHERE ( = ( tellerqueu0_.queue_number tellerqueu0_.teler_queue_id queueNumber ) ? ) ) )
2018-11-06 22:45:11.791 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [teller_queue tellerqueu0_]
2018-11-06 22:45:11.791 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:11.791 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teller_queue)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id as teler_qu1_91_' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
    |  \-[SQL_TOKEN] SqlFragment: 'tellerqueu0_.comment as comment2_91_, tellerqueu0_.complete as complete3_91_, tellerqueu0_.hold as hold4_91_, tellerqueu0_.queue_end_date as queue_en5_91_, tellerqueu0_.queue_num_identification as queue_nu6_91_, tellerqueu0_.queue_number as queue_nu7_91_, tellerqueu0_.queue_pending as queue_pe8_91_, tellerqueu0_.queue_reject as queue_re9_91_, tellerqueu0_.queue_start_date as queue_s10_91_, tellerqueu0_.transaction_customer_id as transac11_91_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[tellerqueu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'teller_queue tellerqueu0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=teller_queue,tableAlias=tellerqueu0_,origin=null,columns={,className=com.spring.starter.model.TellerQueue}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'tellerqueu0_.queue_number' {propertyName=queueNumber,dereferenceType=PRIMITIVE,getPropertyPath=queueNumber,path=c.queueNumber,tableAlias=tellerqueu0_,className=com.spring.starter.model.TellerQueue,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
          |  \-[IDENT] IdentNode: 'queueNumber' {originalText=queueNumber}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@f620100}

2018-11-06 22:45:11.795 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.795 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c FROM com.spring.starter.model.TellerQueue c WHERE c.queueNumber=?1
2018-11-06 22:45:11.795 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select tellerqueu0_.teler_queue_id as teler_qu1_91_, tellerqueu0_.comment as comment2_91_, tellerqueu0_.complete as complete3_91_, tellerqueu0_.hold as hold4_91_, tellerqueu0_.queue_end_date as queue_en5_91_, tellerqueu0_.queue_num_identification as queue_nu6_91_, tellerqueu0_.queue_number as queue_nu7_91_, tellerqueu0_.queue_pending as queue_pe8_91_, tellerqueu0_.queue_reject as queue_re9_91_, tellerqueu0_.queue_start_date as queue_s10_91_, tellerqueu0_.transaction_customer_id as transac11_91_ from teller_queue tellerqueu0_ where tellerqueu0_.queue_number=?
2018-11-06 22:45:11.795 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.796 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c FROM com.spring.starter.model.TellerQueue c ORDER BY c.queueNumIdentification
2018-11-06 22:45:11.797 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.797 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'TellerQueue'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[ORDER] Node: 'ORDER'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'c'
          \-[IDENT] Node: 'queueNumIdentification'

2018-11-06 22:45:11.797 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:11.797 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.TellerQueue (c) -> tellerqueu0_
2018-11-06 22:45:11.797 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.797 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.797 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : queueNumIdentification -> org.hibernate.type.DoubleType@60e54c31
2018-11-06 22:45:11.797 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.queueNumIdentification -> tellerqueu0_.queue_num_identification
2018-11-06 22:45:11.797 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:11.797 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} tellerqueu0_.teler_queue_id ) ( FromClause{level=1} teller_queue tellerqueu0_ ) ( ORDER ( tellerqueu0_.queue_num_identification tellerqueu0_.teler_queue_id queueNumIdentification ) ) )
2018-11-06 22:45:11.797 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [teller_queue tellerqueu0_]
2018-11-06 22:45:11.798 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:11.798 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teller_queue)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id as teler_qu1_91_' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
    |  \-[SQL_TOKEN] SqlFragment: 'tellerqueu0_.comment as comment2_91_, tellerqueu0_.complete as complete3_91_, tellerqueu0_.hold as hold4_91_, tellerqueu0_.queue_end_date as queue_en5_91_, tellerqueu0_.queue_num_identification as queue_nu6_91_, tellerqueu0_.queue_number as queue_nu7_91_, tellerqueu0_.queue_pending as queue_pe8_91_, tellerqueu0_.queue_reject as queue_re9_91_, tellerqueu0_.queue_start_date as queue_s10_91_, tellerqueu0_.transaction_customer_id as transac11_91_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[tellerqueu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'teller_queue tellerqueu0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=teller_queue,tableAlias=tellerqueu0_,origin=null,columns={,className=com.spring.starter.model.TellerQueue}}
    \-[ORDER] OrderByClause: 'ORDER'
       \-[DOT] DotNode: 'tellerqueu0_.queue_num_identification' {propertyName=queueNumIdentification,dereferenceType=PRIMITIVE,getPropertyPath=queueNumIdentification,path=c.queueNumIdentification,tableAlias=tellerqueu0_,className=com.spring.starter.model.TellerQueue,classAlias=c}
          +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
          \-[IDENT] IdentNode: 'queueNumIdentification' {originalText=queueNumIdentification}

2018-11-06 22:45:11.798 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.798 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c FROM com.spring.starter.model.TellerQueue c ORDER BY c.queueNumIdentification
2018-11-06 22:45:11.798 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select tellerqueu0_.teler_queue_id as teler_qu1_91_, tellerqueu0_.comment as comment2_91_, tellerqueu0_.complete as complete3_91_, tellerqueu0_.hold as hold4_91_, tellerqueu0_.queue_end_date as queue_en5_91_, tellerqueu0_.queue_num_identification as queue_nu6_91_, tellerqueu0_.queue_number as queue_nu7_91_, tellerqueu0_.queue_pending as queue_pe8_91_, tellerqueu0_.queue_reject as queue_re9_91_, tellerqueu0_.queue_start_date as queue_s10_91_, tellerqueu0_.transaction_customer_id as transac11_91_ from teller_queue tellerqueu0_ order by tellerqueu0_.queue_num_identification
2018-11-06 22:45:11.798 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.801 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c FROM com.spring.starter.model.TellerQueue c WHERE c.transactionCustomer.transactionCustomerId = ?1
2018-11-06 22:45:11.801 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.801 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'TellerQueue'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'c'
          |  |  \-[IDENT] Node: 'transactionCustomer'
          |  \-[IDENT] Node: 'transactionCustomerId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:11.801 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:11.802 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.TellerQueue (c) -> tellerqueu0_
2018-11-06 22:45:11.803 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.803 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.803 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : transactionCustomer -> org.hibernate.type.ManyToOneType(com.spring.starter.model.TransactionCustomer)
2018-11-06 22:45:11.803 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property transactionCustomerId in com.spring.starter.model.TellerQueue does not require a join.
2018-11-06 22:45:11.803 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'transactionCustomer.transactionCustomerId'
2018-11-06 22:45:11.803 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.transactionCustomer -> tellerqueu0_.transaction_customer_id
2018-11-06 22:45:11.803 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : transactionCustomer.transactionCustomerId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:11.803 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.transactionCustomer.transactionCustomerId -> tellerqueu0_.transaction_customer_id
2018-11-06 22:45:11.804 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:11.804 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} tellerqueu0_.teler_queue_id ) ( FromClause{level=1} teller_queue tellerqueu0_ ) ( WHERE ( = ( tellerqueu0_.transaction_customer_id ( tellerqueu0_.transaction_customer_id tellerqueu0_.teler_queue_id transactionCustomer ) transactionCustomerId ) ? ) ) )
2018-11-06 22:45:11.804 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [teller_queue tellerqueu0_]
2018-11-06 22:45:11.804 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:11.804 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teller_queue)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id as teler_qu1_91_' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
    |  \-[SQL_TOKEN] SqlFragment: 'tellerqueu0_.comment as comment2_91_, tellerqueu0_.complete as complete3_91_, tellerqueu0_.hold as hold4_91_, tellerqueu0_.queue_end_date as queue_en5_91_, tellerqueu0_.queue_num_identification as queue_nu6_91_, tellerqueu0_.queue_number as queue_nu7_91_, tellerqueu0_.queue_pending as queue_pe8_91_, tellerqueu0_.queue_reject as queue_re9_91_, tellerqueu0_.queue_start_date as queue_s10_91_, tellerqueu0_.transaction_customer_id as transac11_91_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[tellerqueu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'teller_queue tellerqueu0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=teller_queue,tableAlias=tellerqueu0_,origin=null,columns={,className=com.spring.starter.model.TellerQueue}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'tellerqueu0_.transaction_customer_id' {propertyName=transactionCustomerId,dereferenceType=PRIMITIVE,getPropertyPath=transactionCustomer.transactionCustomerId,path=c.transactionCustomer.transactionCustomerId,tableAlias=tellerqueu0_,className=com.spring.starter.model.TellerQueue,classAlias=c}
          |  +-[DOT] DotNode: 'tellerqueu0_.transaction_customer_id' {propertyName=transactionCustomerId,dereferenceType=UNKNOWN,getPropertyPath=transactionCustomer.transactionCustomerId,path=c.transactionCustomer,tableAlias=tellerqueu0_,className=com.spring.starter.model.TellerQueue,classAlias=c}
          |  |  +-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
          |  |  \-[IDENT] IdentNode: 'transactionCustomer' {originalText=transactionCustomer}
          |  \-[IDENT] IdentNode: 'transactionCustomerId' {originalText=transactionCustomerId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:11.804 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.804 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c FROM com.spring.starter.model.TellerQueue c WHERE c.transactionCustomer.transactionCustomerId = ?1
2018-11-06 22:45:11.804 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select tellerqueu0_.teler_queue_id as teler_qu1_91_, tellerqueu0_.comment as comment2_91_, tellerqueu0_.complete as complete3_91_, tellerqueu0_.hold as hold4_91_, tellerqueu0_.queue_end_date as queue_en5_91_, tellerqueu0_.queue_num_identification as queue_nu6_91_, tellerqueu0_.queue_number as queue_nu7_91_, tellerqueu0_.queue_pending as queue_pe8_91_, tellerqueu0_.queue_reject as queue_re9_91_, tellerqueu0_.queue_start_date as queue_s10_91_, tellerqueu0_.transaction_customer_id as transac11_91_ from teller_queue tellerqueu0_ where tellerqueu0_.transaction_customer_id=?
2018-11-06 22:45:11.805 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.806 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT Count(c) FROM com.spring.starter.model.TellerQueue c
2018-11-06 22:45:11.806 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.806 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'starter'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'TellerQueue'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'SELECT'
          \-[COUNT] Node: 'Count'
             \-[IDENT] Node: 'c'

2018-11-06 22:45:11.806 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:11.806 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.TellerQueue (c) -> tellerqueu0_
2018-11-06 22:45:11.806 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> tellerqueu0_.teler_queue_id
2018-11-06 22:45:11.806 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:11.806 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} ( Count tellerqueu0_.teler_queue_id ) ) ( FromClause{level=1} teller_queue tellerqueu0_ ) )
2018-11-06 22:45:11.806 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [teller_queue tellerqueu0_]
2018-11-06 22:45:11.806 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:11.806 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teller_queue)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'Count'
    |  |  \-[ALIAS_REF] IdentNode: 'tellerqueu0_.teler_queue_id' {alias=c, className=com.spring.starter.model.TellerQueue, tableAlias=tellerqueu0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[tellerqueu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'teller_queue tellerqueu0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=teller_queue,tableAlias=tellerqueu0_,origin=null,columns={,className=com.spring.starter.model.TellerQueue}}

2018-11-06 22:45:11.807 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:11.807 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT Count(c) FROM com.spring.starter.model.TellerQueue c
2018-11-06 22:45:11.807 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select count(tellerqueu0_.teler_queue_id) as col_0_0_ from teller_queue tellerqueu0_
2018-11-06 22:45:11.807 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.017 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT cs FROM com.spring.starter.model.CustomerServiceRequest cs WHERE cs.softReject= true
2018-11-06 22:45:12.017 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.018 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerServiceRequest'
    |  |     \-[ALIAS] Node: 'cs'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'cs'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'cs'
          |  \-[IDENT] Node: 'softReject'
          \-[TRUE] Node: 'true'

2018-11-06 22:45:12.018 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.018 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CustomerServiceRequest (cs) -> customerse0_
2018-11-06 22:45:12.018 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customerse0_.customer_service_request_id
2018-11-06 22:45:12.018 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customerse0_.customer_service_request_id
2018-11-06 22:45:12.018 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : softReject -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:12.018 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs.softReject -> customerse0_.soft_reject
2018-11-06 22:45:12.019 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.019 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} customerse0_.customer_service_request_id ) ( FromClause{level=1} customer_service_request customerse0_ ) ( WHERE ( = ( customerse0_.soft_reject customerse0_.customer_service_request_id softReject ) true ) ) )
2018-11-06 22:45:12.019 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [customer_service_request customerse0_]
2018-11-06 22:45:12.019 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.019 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer_service_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerse0_.customer_service_request_id as customer1_33_' {alias=cs, className=com.spring.starter.model.CustomerServiceRequest, tableAlias=customerse0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerse0_.authorize as authoriz2_33_, customerse0_.customer_id as customer8_33_, customerse0_.request_complete_date as request_3_33_, customerse0_.request_date as request_4_33_, customerse0_.service_request_id as service_9_33_, customerse0_.soft_reject as soft_rej5_33_, customerse0_.status as status6_33_, customerse0_.url as url7_33_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cs], fromElementByTableAlias=[customerse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer_service_request customerse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cs,role=null,tableName=customer_service_request,tableAlias=customerse0_,origin=null,columns={,className=com.spring.starter.model.CustomerServiceRequest}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerse0_.soft_reject' {propertyName=softReject,dereferenceType=PRIMITIVE,getPropertyPath=softReject,path=cs.softReject,tableAlias=customerse0_,className=com.spring.starter.model.CustomerServiceRequest,classAlias=cs}
          |  +-[ALIAS_REF] IdentNode: 'customerse0_.customer_service_request_id' {alias=cs, className=com.spring.starter.model.CustomerServiceRequest, tableAlias=customerse0_}
          |  \-[IDENT] IdentNode: 'softReject' {originalText=softReject}
          \-[TRUE] BooleanLiteralNode: 'true'

2018-11-06 22:45:12.021 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.021 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT cs FROM com.spring.starter.model.CustomerServiceRequest cs WHERE cs.softReject= true
2018-11-06 22:45:12.021 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select customerse0_.customer_service_request_id as customer1_33_, customerse0_.authorize as authoriz2_33_, customerse0_.customer_id as customer8_33_, customerse0_.request_complete_date as request_3_33_, customerse0_.request_date as request_4_33_, customerse0_.service_request_id as service_9_33_, customerse0_.soft_reject as soft_rej5_33_, customerse0_.status as status6_33_, customerse0_.url as url7_33_ from customer_service_request customerse0_ where customerse0_.soft_reject=1
2018-11-06 22:45:12.021 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.023 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT cs FROM com.spring.starter.model.CustomerServiceRequest cs WHERE cs.customer.customerId = ?1 AND date(cs.requestDate)=?2
2018-11-06 22:45:12.024 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.024 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerServiceRequest'
    |  |     \-[ALIAS] Node: 'cs'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'cs'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'cs'
          |  |  |  \-[IDENT] Node: 'customer'
          |  |  \-[IDENT] Node: 'customerId'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'date'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'cs'
             |        \-[IDENT] Node: 'requestDate'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-11-06 22:45:12.024 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.024 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CustomerServiceRequest (cs) -> customerse0_
2018-11-06 22:45:12.024 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customerse0_.customer_service_request_id
2018-11-06 22:45:12.024 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customerse0_.customer_service_request_id
2018-11-06 22:45:12.024 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customer -> org.hibernate.type.ManyToOneType(com.spring.starter.model.Customer)
2018-11-06 22:45:12.024 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerId in com.spring.starter.model.CustomerServiceRequest does not require a join.
2018-11-06 22:45:12.024 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customer.customerId'
2018-11-06 22:45:12.024 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs.customer -> customerse0_.customer_id
2018-11-06 22:45:12.024 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customer.customerId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.027 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs.customer.customerId -> customerse0_.customer_id
2018-11-06 22:45:12.028 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customerse0_.customer_service_request_id
2018-11-06 22:45:12.028 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : requestDate -> org.hibernate.type.TimestampType@5f023e8d
2018-11-06 22:45:12.029 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs.requestDate -> customerse0_.request_date
2018-11-06 22:45:12.029 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.029 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} customerse0_.customer_service_request_id ) ( FromClause{level=1} customer_service_request customerse0_ ) ( WHERE ( AND ( = ( customerse0_.customer_id ( customerse0_.customer_id customerse0_.customer_service_request_id customer ) customerId ) ? ) ( = ( ( date ( exprList ( customerse0_.request_date customerse0_.customer_service_request_id requestDate ) ) ) ? ) ) ) )
2018-11-06 22:45:12.029 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [customer_service_request customerse0_]
2018-11-06 22:45:12.030 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.030 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer_service_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerse0_.customer_service_request_id as customer1_33_' {alias=cs, className=com.spring.starter.model.CustomerServiceRequest, tableAlias=customerse0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerse0_.authorize as authoriz2_33_, customerse0_.customer_id as customer8_33_, customerse0_.request_complete_date as request_3_33_, customerse0_.request_date as request_4_33_, customerse0_.service_request_id as service_9_33_, customerse0_.soft_reject as soft_rej5_33_, customerse0_.status as status6_33_, customerse0_.url as url7_33_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cs], fromElementByTableAlias=[customerse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer_service_request customerse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cs,role=null,tableName=customer_service_request,tableAlias=customerse0_,origin=null,columns={,className=com.spring.starter.model.CustomerServiceRequest}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customerse0_.customer_id' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customer.customerId,path=cs.customer.customerId,tableAlias=customerse0_,className=com.spring.starter.model.CustomerServiceRequest,classAlias=cs}
          |  |  +-[DOT] DotNode: 'customerse0_.customer_id' {propertyName=customerId,dereferenceType=UNKNOWN,getPropertyPath=customer.customerId,path=cs.customer,tableAlias=customerse0_,className=com.spring.starter.model.CustomerServiceRequest,classAlias=cs}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customerse0_.customer_service_request_id' {alias=cs, className=com.spring.starter.model.CustomerServiceRequest, tableAlias=customerse0_}
          |  |  |  \-[IDENT] IdentNode: 'customer' {originalText=customer}
          |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'date' {originalText=date}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerse0_.request_date' {propertyName=requestDate,dereferenceType=PRIMITIVE,getPropertyPath=requestDate,path=cs.requestDate,tableAlias=customerse0_,className=com.spring.starter.model.CustomerServiceRequest,classAlias=cs}
             |        +-[ALIAS_REF] IdentNode: 'customerse0_.customer_service_request_id' {alias=cs, className=com.spring.starter.model.CustomerServiceRequest, tableAlias=customerse0_}
             |        \-[IDENT] IdentNode: 'requestDate' {originalText=requestDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.DateType@15167eb1}

2018-11-06 22:45:12.033 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.034 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT cs FROM com.spring.starter.model.CustomerServiceRequest cs WHERE cs.customer.customerId = ?1 AND date(cs.requestDate)=?2
2018-11-06 22:45:12.034 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select customerse0_.customer_service_request_id as customer1_33_, customerse0_.authorize as authoriz2_33_, customerse0_.customer_id as customer8_33_, customerse0_.request_complete_date as request_3_33_, customerse0_.request_date as request_4_33_, customerse0_.service_request_id as service_9_33_, customerse0_.soft_reject as soft_rej5_33_, customerse0_.status as status6_33_, customerse0_.url as url7_33_ from customer_service_request customerse0_ where customerse0_.customer_id=? and date(customerse0_.request_date)=?
2018-11-06 22:45:12.034 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.036 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT cs FROM com.spring.starter.model.CustomerServiceRequest cs WHERE cs.customer.customerId=?1 and cs.status =false
2018-11-06 22:45:12.037 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.037 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerServiceRequest'
    |  |     \-[ALIAS] Node: 'cs'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'cs'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'cs'
          |  |  |  \-[IDENT] Node: 'customer'
          |  |  \-[IDENT] Node: 'customerId'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'cs'
             |  \-[IDENT] Node: 'status'
             \-[FALSE] Node: 'false'

2018-11-06 22:45:12.037 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.037 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CustomerServiceRequest (cs) -> customerse0_
2018-11-06 22:45:12.037 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customerse0_.customer_service_request_id
2018-11-06 22:45:12.037 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customerse0_.customer_service_request_id
2018-11-06 22:45:12.037 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customer -> org.hibernate.type.ManyToOneType(com.spring.starter.model.Customer)
2018-11-06 22:45:12.039 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerId in com.spring.starter.model.CustomerServiceRequest does not require a join.
2018-11-06 22:45:12.039 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customer.customerId'
2018-11-06 22:45:12.039 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs.customer -> customerse0_.customer_id
2018-11-06 22:45:12.039 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customer.customerId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.039 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs.customer.customerId -> customerse0_.customer_id
2018-11-06 22:45:12.039 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customerse0_.customer_service_request_id
2018-11-06 22:45:12.039 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : status -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:12.039 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs.status -> customerse0_.status
2018-11-06 22:45:12.039 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.039 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} customerse0_.customer_service_request_id ) ( FromClause{level=1} customer_service_request customerse0_ ) ( WHERE ( and ( = ( customerse0_.customer_id ( customerse0_.customer_id customerse0_.customer_service_request_id customer ) customerId ) ? ) ( = ( customerse0_.status customerse0_.customer_service_request_id status ) false ) ) ) )
2018-11-06 22:45:12.039 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [customer_service_request customerse0_]
2018-11-06 22:45:12.040 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.040 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer_service_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerse0_.customer_service_request_id as customer1_33_' {alias=cs, className=com.spring.starter.model.CustomerServiceRequest, tableAlias=customerse0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerse0_.authorize as authoriz2_33_, customerse0_.customer_id as customer8_33_, customerse0_.request_complete_date as request_3_33_, customerse0_.request_date as request_4_33_, customerse0_.service_request_id as service_9_33_, customerse0_.soft_reject as soft_rej5_33_, customerse0_.status as status6_33_, customerse0_.url as url7_33_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cs], fromElementByTableAlias=[customerse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer_service_request customerse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cs,role=null,tableName=customer_service_request,tableAlias=customerse0_,origin=null,columns={,className=com.spring.starter.model.CustomerServiceRequest}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customerse0_.customer_id' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customer.customerId,path=cs.customer.customerId,tableAlias=customerse0_,className=com.spring.starter.model.CustomerServiceRequest,classAlias=cs}
          |  |  +-[DOT] DotNode: 'customerse0_.customer_id' {propertyName=customerId,dereferenceType=UNKNOWN,getPropertyPath=customer.customerId,path=cs.customer,tableAlias=customerse0_,className=com.spring.starter.model.CustomerServiceRequest,classAlias=cs}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customerse0_.customer_service_request_id' {alias=cs, className=com.spring.starter.model.CustomerServiceRequest, tableAlias=customerse0_}
          |  |  |  \-[IDENT] IdentNode: 'customer' {originalText=customer}
          |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerse0_.status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=cs.status,tableAlias=customerse0_,className=com.spring.starter.model.CustomerServiceRequest,classAlias=cs}
             |  +-[ALIAS_REF] IdentNode: 'customerse0_.customer_service_request_id' {alias=cs, className=com.spring.starter.model.CustomerServiceRequest, tableAlias=customerse0_}
             |  \-[IDENT] IdentNode: 'status' {originalText=status}
             \-[FALSE] BooleanLiteralNode: 'false'

2018-11-06 22:45:12.040 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.040 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT cs FROM com.spring.starter.model.CustomerServiceRequest cs WHERE cs.customer.customerId=?1 and cs.status =false
2018-11-06 22:45:12.040 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select customerse0_.customer_service_request_id as customer1_33_, customerse0_.authorize as authoriz2_33_, customerse0_.customer_id as customer8_33_, customerse0_.request_complete_date as request_3_33_, customerse0_.request_date as request_4_33_, customerse0_.service_request_id as service_9_33_, customerse0_.soft_reject as soft_rej5_33_, customerse0_.status as status6_33_, customerse0_.url as url7_33_ from customer_service_request customerse0_ where customerse0_.customer_id=? and customerse0_.status=0
2018-11-06 22:45:12.041 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.043 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT cs FROM com.spring.starter.model.CustomerServiceRequest cs WHERE cs.customer.customerId = ?1
2018-11-06 22:45:12.043 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.043 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerServiceRequest'
    |  |     \-[ALIAS] Node: 'cs'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'cs'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'cs'
          |  |  \-[IDENT] Node: 'customer'
          |  \-[IDENT] Node: 'customerId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.043 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.044 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CustomerServiceRequest (cs) -> customerse0_
2018-11-06 22:45:12.044 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customerse0_.customer_service_request_id
2018-11-06 22:45:12.044 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customerse0_.customer_service_request_id
2018-11-06 22:45:12.044 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customer -> org.hibernate.type.ManyToOneType(com.spring.starter.model.Customer)
2018-11-06 22:45:12.044 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerId in com.spring.starter.model.CustomerServiceRequest does not require a join.
2018-11-06 22:45:12.044 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customer.customerId'
2018-11-06 22:45:12.044 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs.customer -> customerse0_.customer_id
2018-11-06 22:45:12.044 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customer.customerId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.044 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs.customer.customerId -> customerse0_.customer_id
2018-11-06 22:45:12.047 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.047 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} customerse0_.customer_service_request_id ) ( FromClause{level=1} customer_service_request customerse0_ ) ( WHERE ( = ( customerse0_.customer_id ( customerse0_.customer_id customerse0_.customer_service_request_id customer ) customerId ) ? ) ) )
2018-11-06 22:45:12.047 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [customer_service_request customerse0_]
2018-11-06 22:45:12.047 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.047 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer_service_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerse0_.customer_service_request_id as customer1_33_' {alias=cs, className=com.spring.starter.model.CustomerServiceRequest, tableAlias=customerse0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerse0_.authorize as authoriz2_33_, customerse0_.customer_id as customer8_33_, customerse0_.request_complete_date as request_3_33_, customerse0_.request_date as request_4_33_, customerse0_.service_request_id as service_9_33_, customerse0_.soft_reject as soft_rej5_33_, customerse0_.status as status6_33_, customerse0_.url as url7_33_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cs], fromElementByTableAlias=[customerse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer_service_request customerse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cs,role=null,tableName=customer_service_request,tableAlias=customerse0_,origin=null,columns={,className=com.spring.starter.model.CustomerServiceRequest}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerse0_.customer_id' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customer.customerId,path=cs.customer.customerId,tableAlias=customerse0_,className=com.spring.starter.model.CustomerServiceRequest,classAlias=cs}
          |  +-[DOT] DotNode: 'customerse0_.customer_id' {propertyName=customerId,dereferenceType=UNKNOWN,getPropertyPath=customer.customerId,path=cs.customer,tableAlias=customerse0_,className=com.spring.starter.model.CustomerServiceRequest,classAlias=cs}
          |  |  +-[ALIAS_REF] IdentNode: 'customerse0_.customer_service_request_id' {alias=cs, className=com.spring.starter.model.CustomerServiceRequest, tableAlias=customerse0_}
          |  |  \-[IDENT] IdentNode: 'customer' {originalText=customer}
          |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.047 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.047 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT cs FROM com.spring.starter.model.CustomerServiceRequest cs WHERE cs.customer.customerId = ?1
2018-11-06 22:45:12.047 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select customerse0_.customer_service_request_id as customer1_33_, customerse0_.authorize as authoriz2_33_, customerse0_.customer_id as customer8_33_, customerse0_.request_complete_date as request_3_33_, customerse0_.request_date as request_4_33_, customerse0_.service_request_id as service_9_33_, customerse0_.soft_reject as soft_rej5_33_, customerse0_.status as status6_33_, customerse0_.url as url7_33_ from customer_service_request customerse0_ where customerse0_.customer_id=?
2018-11-06 22:45:12.048 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.050 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT cs FROM com.spring.starter.model.CustomerServiceRequest cs WHERE cs.customer.customerId = ?1 and cs.softReject=false 
2018-11-06 22:45:12.050 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.050 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerServiceRequest'
    |  |     \-[ALIAS] Node: 'cs'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'cs'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'cs'
          |  |  |  \-[IDENT] Node: 'customer'
          |  |  \-[IDENT] Node: 'customerId'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'cs'
             |  \-[IDENT] Node: 'softReject'
             \-[FALSE] Node: 'false'

2018-11-06 22:45:12.050 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.050 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CustomerServiceRequest (cs) -> customerse0_
2018-11-06 22:45:12.050 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customerse0_.customer_service_request_id
2018-11-06 22:45:12.050 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customerse0_.customer_service_request_id
2018-11-06 22:45:12.050 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customer -> org.hibernate.type.ManyToOneType(com.spring.starter.model.Customer)
2018-11-06 22:45:12.050 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerId in com.spring.starter.model.CustomerServiceRequest does not require a join.
2018-11-06 22:45:12.051 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customer.customerId'
2018-11-06 22:45:12.051 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs.customer -> customerse0_.customer_id
2018-11-06 22:45:12.051 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customer.customerId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.054 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs.customer.customerId -> customerse0_.customer_id
2018-11-06 22:45:12.054 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customerse0_.customer_service_request_id
2018-11-06 22:45:12.054 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : softReject -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:12.054 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs.softReject -> customerse0_.soft_reject
2018-11-06 22:45:12.054 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.054 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} customerse0_.customer_service_request_id ) ( FromClause{level=1} customer_service_request customerse0_ ) ( WHERE ( and ( = ( customerse0_.customer_id ( customerse0_.customer_id customerse0_.customer_service_request_id customer ) customerId ) ? ) ( = ( customerse0_.soft_reject customerse0_.customer_service_request_id softReject ) false ) ) ) )
2018-11-06 22:45:12.054 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [customer_service_request customerse0_]
2018-11-06 22:45:12.054 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.054 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer_service_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerse0_.customer_service_request_id as customer1_33_' {alias=cs, className=com.spring.starter.model.CustomerServiceRequest, tableAlias=customerse0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerse0_.authorize as authoriz2_33_, customerse0_.customer_id as customer8_33_, customerse0_.request_complete_date as request_3_33_, customerse0_.request_date as request_4_33_, customerse0_.service_request_id as service_9_33_, customerse0_.soft_reject as soft_rej5_33_, customerse0_.status as status6_33_, customerse0_.url as url7_33_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cs], fromElementByTableAlias=[customerse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer_service_request customerse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cs,role=null,tableName=customer_service_request,tableAlias=customerse0_,origin=null,columns={,className=com.spring.starter.model.CustomerServiceRequest}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customerse0_.customer_id' {propertyName=customerId,dereferenceType=PRIMITIVE,getPropertyPath=customer.customerId,path=cs.customer.customerId,tableAlias=customerse0_,className=com.spring.starter.model.CustomerServiceRequest,classAlias=cs}
          |  |  +-[DOT] DotNode: 'customerse0_.customer_id' {propertyName=customerId,dereferenceType=UNKNOWN,getPropertyPath=customer.customerId,path=cs.customer,tableAlias=customerse0_,className=com.spring.starter.model.CustomerServiceRequest,classAlias=cs}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customerse0_.customer_service_request_id' {alias=cs, className=com.spring.starter.model.CustomerServiceRequest, tableAlias=customerse0_}
          |  |  |  \-[IDENT] IdentNode: 'customer' {originalText=customer}
          |  |  \-[IDENT] IdentNode: 'customerId' {originalText=customerId}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customerse0_.soft_reject' {propertyName=softReject,dereferenceType=PRIMITIVE,getPropertyPath=softReject,path=cs.softReject,tableAlias=customerse0_,className=com.spring.starter.model.CustomerServiceRequest,classAlias=cs}
             |  +-[ALIAS_REF] IdentNode: 'customerse0_.customer_service_request_id' {alias=cs, className=com.spring.starter.model.CustomerServiceRequest, tableAlias=customerse0_}
             |  \-[IDENT] IdentNode: 'softReject' {originalText=softReject}
             \-[FALSE] BooleanLiteralNode: 'false'

2018-11-06 22:45:12.055 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.055 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT cs FROM com.spring.starter.model.CustomerServiceRequest cs WHERE cs.customer.customerId = ?1 and cs.softReject=false 
2018-11-06 22:45:12.055 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select customerse0_.customer_service_request_id as customer1_33_, customerse0_.authorize as authoriz2_33_, customerse0_.customer_id as customer8_33_, customerse0_.request_complete_date as request_3_33_, customerse0_.request_date as request_4_33_, customerse0_.service_request_id as service_9_33_, customerse0_.soft_reject as soft_rej5_33_, customerse0_.status as status6_33_, customerse0_.url as url7_33_ from customer_service_request customerse0_ where customerse0_.customer_id=? and customerse0_.soft_reject=0
2018-11-06 22:45:12.055 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.057 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT cs FROM com.spring.starter.model.CustomerServiceRequest cs WHERE cs.softReject= true and date(cs.requestDate) =?1
2018-11-06 22:45:12.057 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.058 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerServiceRequest'
    |  |     \-[ALIAS] Node: 'cs'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'cs'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'cs'
          |  |  \-[IDENT] Node: 'softReject'
          |  \-[TRUE] Node: 'true'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'date'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'cs'
             |        \-[IDENT] Node: 'requestDate'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.058 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.058 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CustomerServiceRequest (cs) -> customerse0_
2018-11-06 22:45:12.058 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customerse0_.customer_service_request_id
2018-11-06 22:45:12.058 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customerse0_.customer_service_request_id
2018-11-06 22:45:12.058 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : softReject -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:12.058 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs.softReject -> customerse0_.soft_reject
2018-11-06 22:45:12.058 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customerse0_.customer_service_request_id
2018-11-06 22:45:12.058 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : requestDate -> org.hibernate.type.TimestampType@5f023e8d
2018-11-06 22:45:12.058 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs.requestDate -> customerse0_.request_date
2018-11-06 22:45:12.061 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.061 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} customerse0_.customer_service_request_id ) ( FromClause{level=1} customer_service_request customerse0_ ) ( WHERE ( and ( = ( customerse0_.soft_reject customerse0_.customer_service_request_id softReject ) true ) ( = ( ( date ( exprList ( customerse0_.request_date customerse0_.customer_service_request_id requestDate ) ) ) ? ) ) ) )
2018-11-06 22:45:12.061 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [customer_service_request customerse0_]
2018-11-06 22:45:12.061 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.061 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer_service_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerse0_.customer_service_request_id as customer1_33_' {alias=cs, className=com.spring.starter.model.CustomerServiceRequest, tableAlias=customerse0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerse0_.authorize as authoriz2_33_, customerse0_.customer_id as customer8_33_, customerse0_.request_complete_date as request_3_33_, customerse0_.request_date as request_4_33_, customerse0_.service_request_id as service_9_33_, customerse0_.soft_reject as soft_rej5_33_, customerse0_.status as status6_33_, customerse0_.url as url7_33_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cs], fromElementByTableAlias=[customerse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer_service_request customerse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cs,role=null,tableName=customer_service_request,tableAlias=customerse0_,origin=null,columns={,className=com.spring.starter.model.CustomerServiceRequest}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customerse0_.soft_reject' {propertyName=softReject,dereferenceType=PRIMITIVE,getPropertyPath=softReject,path=cs.softReject,tableAlias=customerse0_,className=com.spring.starter.model.CustomerServiceRequest,classAlias=cs}
          |  |  +-[ALIAS_REF] IdentNode: 'customerse0_.customer_service_request_id' {alias=cs, className=com.spring.starter.model.CustomerServiceRequest, tableAlias=customerse0_}
          |  |  \-[IDENT] IdentNode: 'softReject' {originalText=softReject}
          |  \-[TRUE] BooleanLiteralNode: 'true'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'date' {originalText=date}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customerse0_.request_date' {propertyName=requestDate,dereferenceType=PRIMITIVE,getPropertyPath=requestDate,path=cs.requestDate,tableAlias=customerse0_,className=com.spring.starter.model.CustomerServiceRequest,classAlias=cs}
             |        +-[ALIAS_REF] IdentNode: 'customerse0_.customer_service_request_id' {alias=cs, className=com.spring.starter.model.CustomerServiceRequest, tableAlias=customerse0_}
             |        \-[IDENT] IdentNode: 'requestDate' {originalText=requestDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.DateType@15167eb1}

2018-11-06 22:45:12.061 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.061 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT cs FROM com.spring.starter.model.CustomerServiceRequest cs WHERE cs.softReject= true and date(cs.requestDate) =?1
2018-11-06 22:45:12.061 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select customerse0_.customer_service_request_id as customer1_33_, customerse0_.authorize as authoriz2_33_, customerse0_.customer_id as customer8_33_, customerse0_.request_complete_date as request_3_33_, customerse0_.request_date as request_4_33_, customerse0_.service_request_id as service_9_33_, customerse0_.soft_reject as soft_rej5_33_, customerse0_.status as status6_33_, customerse0_.url as url7_33_ from customer_service_request customerse0_ where customerse0_.soft_reject=1 and date(customerse0_.request_date)=?
2018-11-06 22:45:12.062 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.076 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT adcr FROM com.spring.starter.model.AtmOrDebitCardRequest adcr WHERE adcr.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.076 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.076 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'AtmOrDebitCardRequest'
    |  |     \-[ALIAS] Node: 'adcr'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'adcr'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'adcr'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.076 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.077 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.AtmOrDebitCardRequest (adcr) -> atmordebit0_
2018-11-06 22:45:12.077 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : adcr -> atmordebit0_.atm_or_debit_request_id
2018-11-06 22:45:12.077 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : adcr -> atmordebit0_.atm_or_debit_request_id
2018-11-06 22:45:12.077 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:12.077 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.AtmOrDebitCardRequest does not require a join.
2018-11-06 22:45:12.077 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:12.077 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : adcr.customerServiceRequest -> atmordebit0_.customer_service_request_id
2018-11-06 22:45:12.077 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.077 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : adcr.customerServiceRequest.customerServiceRequestId -> atmordebit0_.customer_service_request_id
2018-11-06 22:45:12.080 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.080 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} atmordebit0_.atm_or_debit_request_id ) ( FromClause{level=1} atm_or_debit_card_request atmordebit0_ ) ( WHERE ( = ( atmordebit0_.customer_service_request_id ( atmordebit0_.customer_service_request_id atmordebit0_.atm_or_debit_request_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:12.080 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [atm_or_debit_card_request atmordebit0_]
2018-11-06 22:45:12.080 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.080 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (atm_or_debit_card_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'atmordebit0_.atm_or_debit_request_id as atm_or_d1_1_' {alias=adcr, className=com.spring.starter.model.AtmOrDebitCardRequest, tableAlias=atmordebit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'atmordebit0_.card_number as card_num2_1_, atmordebit0_.customer_service_request_id as customer5_1_, atmordebit0_.request_type as request_3_1_, atmordebit0_.soft_reject as soft_rej4_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[adcr], fromElementByTableAlias=[atmordebit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'atm_or_debit_card_request atmordebit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=adcr,role=null,tableName=atm_or_debit_card_request,tableAlias=atmordebit0_,origin=null,columns={,className=com.spring.starter.model.AtmOrDebitCardRequest}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'atmordebit0_.customer_service_request_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=adcr.customerServiceRequest.customerServiceRequestId,tableAlias=atmordebit0_,className=com.spring.starter.model.AtmOrDebitCardRequest,classAlias=adcr}
          |  +-[DOT] DotNode: 'atmordebit0_.customer_service_request_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=adcr.customerServiceRequest,tableAlias=atmordebit0_,className=com.spring.starter.model.AtmOrDebitCardRequest,classAlias=adcr}
          |  |  +-[ALIAS_REF] IdentNode: 'atmordebit0_.atm_or_debit_request_id' {alias=adcr, className=com.spring.starter.model.AtmOrDebitCardRequest, tableAlias=atmordebit0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.080 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.080 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT adcr FROM com.spring.starter.model.AtmOrDebitCardRequest adcr WHERE adcr.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.080 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select atmordebit0_.atm_or_debit_request_id as atm_or_d1_1_, atmordebit0_.card_number as card_num2_1_, atmordebit0_.customer_service_request_id as customer5_1_, atmordebit0_.request_type as request_3_1_, atmordebit0_.soft_reject as soft_rej4_1_ from atm_or_debit_card_request atmordebit0_ where atmordebit0_.customer_service_request_id=?
2018-11-06 22:45:12.080 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.095 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT rip FROM com.spring.starter.model.ReIssuePinRequest rip WHERE rip.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.095 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.096 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'ReIssuePinRequest'
    |  |     \-[ALIAS] Node: 'rip'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'rip'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'rip'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.096 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.096 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.ReIssuePinRequest (rip) -> reissuepin0_
2018-11-06 22:45:12.096 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : rip -> reissuepin0_.re_issue_pin_request_id
2018-11-06 22:45:12.096 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : rip -> reissuepin0_.re_issue_pin_request_id
2018-11-06 22:45:12.096 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:12.096 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.ReIssuePinRequest does not require a join.
2018-11-06 22:45:12.096 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:12.096 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : rip.customerServiceRequest -> reissuepin0_.customer_service_request_id
2018-11-06 22:45:12.096 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.096 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : rip.customerServiceRequest.customerServiceRequestId -> reissuepin0_.customer_service_request_id
2018-11-06 22:45:12.096 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.096 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} reissuepin0_.re_issue_pin_request_id ) ( FromClause{level=1} reissue_pin_request reissuepin0_ ) ( WHERE ( = ( reissuepin0_.customer_service_request_id ( reissuepin0_.customer_service_request_id reissuepin0_.re_issue_pin_request_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:12.097 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [reissue_pin_request reissuepin0_]
2018-11-06 22:45:12.097 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.097 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (reissue_pin_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'reissuepin0_.re_issue_pin_request_id as re_issue1_77_' {alias=rip, className=com.spring.starter.model.ReIssuePinRequest, tableAlias=reissuepin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'reissuepin0_.address as address2_77_, reissuepin0_.branch_id as branch_i7_77_, reissuepin0_.customer_service_request_id as customer8_77_, reissuepin0_.is_address as is_addre3_77_, reissuepin0_.is_branch as is_branc4_77_, reissuepin0_.is_curresponding_address as is_curre5_77_, reissuepin0_.soft_reject as soft_rej6_77_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[rip], fromElementByTableAlias=[reissuepin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'reissue_pin_request reissuepin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=rip,role=null,tableName=reissue_pin_request,tableAlias=reissuepin0_,origin=null,columns={,className=com.spring.starter.model.ReIssuePinRequest}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'reissuepin0_.customer_service_request_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=rip.customerServiceRequest.customerServiceRequestId,tableAlias=reissuepin0_,className=com.spring.starter.model.ReIssuePinRequest,classAlias=rip}
          |  +-[DOT] DotNode: 'reissuepin0_.customer_service_request_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=rip.customerServiceRequest,tableAlias=reissuepin0_,className=com.spring.starter.model.ReIssuePinRequest,classAlias=rip}
          |  |  +-[ALIAS_REF] IdentNode: 'reissuepin0_.re_issue_pin_request_id' {alias=rip, className=com.spring.starter.model.ReIssuePinRequest, tableAlias=reissuepin0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.097 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.097 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT rip FROM com.spring.starter.model.ReIssuePinRequest rip WHERE rip.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.097 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select reissuepin0_.re_issue_pin_request_id as re_issue1_77_, reissuepin0_.address as address2_77_, reissuepin0_.branch_id as branch_i7_77_, reissuepin0_.customer_service_request_id as customer8_77_, reissuepin0_.is_address as is_addre3_77_, reissuepin0_.is_branch as is_branc4_77_, reissuepin0_.is_curresponding_address as is_curre5_77_, reissuepin0_.soft_reject as soft_rej6_77_ from reissue_pin_request reissuepin0_ where reissuepin0_.customer_service_request_id=?
2018-11-06 22:45:12.097 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.112 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT s FROM com.spring.starter.model.SmsSubscription s WHERE s.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.112 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.112 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'SmsSubscription'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 's'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 's'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.112 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.113 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.SmsSubscription (s) -> smssubscri0_
2018-11-06 22:45:12.113 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : s -> smssubscri0_.subscription_id
2018-11-06 22:45:12.113 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : s -> smssubscri0_.subscription_id
2018-11-06 22:45:12.113 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:12.113 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.SmsSubscription does not require a join.
2018-11-06 22:45:12.113 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:12.113 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : s.customerServiceRequest -> smssubscri0_.customer_service_request_id
2018-11-06 22:45:12.113 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.113 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : s.customerServiceRequest.customerServiceRequestId -> smssubscri0_.customer_service_request_id
2018-11-06 22:45:12.114 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.114 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} smssubscri0_.subscription_id ) ( FromClause{level=1} sms_subscription smssubscri0_ ) ( WHERE ( = ( smssubscri0_.customer_service_request_id ( smssubscri0_.customer_service_request_id smssubscri0_.subscription_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:12.114 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [sms_subscription smssubscri0_]
2018-11-06 22:45:12.115 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.115 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (sms_subscription)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'smssubscri0_.subscription_id as subscrip1_86_' {alias=s, className=com.spring.starter.model.SmsSubscription, tableAlias=smssubscri0_}
    |  \-[SQL_TOKEN] SqlFragment: 'smssubscri0_.card_number as card_num2_86_, smssubscri0_.customer_service_request_id as customer5_86_, smssubscri0_.mobile_number as mobile_n3_86_, smssubscri0_.soft_reject as soft_rej4_86_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[smssubscri0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'sms_subscription smssubscri0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=sms_subscription,tableAlias=smssubscri0_,origin=null,columns={,className=com.spring.starter.model.SmsSubscription}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'smssubscri0_.customer_service_request_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=s.customerServiceRequest.customerServiceRequestId,tableAlias=smssubscri0_,className=com.spring.starter.model.SmsSubscription,classAlias=s}
          |  +-[DOT] DotNode: 'smssubscri0_.customer_service_request_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=s.customerServiceRequest,tableAlias=smssubscri0_,className=com.spring.starter.model.SmsSubscription,classAlias=s}
          |  |  +-[ALIAS_REF] IdentNode: 'smssubscri0_.subscription_id' {alias=s, className=com.spring.starter.model.SmsSubscription, tableAlias=smssubscri0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.115 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.115 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT s FROM com.spring.starter.model.SmsSubscription s WHERE s.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.115 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select smssubscri0_.subscription_id as subscrip1_86_, smssubscri0_.card_number as card_num2_86_, smssubscri0_.customer_service_request_id as customer5_86_, smssubscri0_.mobile_number as mobile_n3_86_, smssubscri0_.soft_reject as soft_rej4_86_ from sms_subscription smssubscri0_ where smssubscri0_.customer_service_request_id=?
2018-11-06 22:45:12.115 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.127 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT p FROM com.spring.starter.model.PosLimit p WHERE p.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.127 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.127 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'PosLimit'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'p'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.127 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.128 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.PosLimit (p) -> poslimit0_
2018-11-06 22:45:12.128 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : p -> poslimit0_.pos_limit_id
2018-11-06 22:45:12.128 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : p -> poslimit0_.pos_limit_id
2018-11-06 22:45:12.128 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:12.128 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.PosLimit does not require a join.
2018-11-06 22:45:12.128 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:12.128 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : p.customerServiceRequest -> poslimit0_.customer_service_request_id
2018-11-06 22:45:12.128 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.128 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : p.customerServiceRequest.customerServiceRequestId -> poslimit0_.customer_service_request_id
2018-11-06 22:45:12.130 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.130 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} poslimit0_.pos_limit_id ) ( FromClause{level=1} pos_limit poslimit0_ ) ( WHERE ( = ( poslimit0_.customer_service_request_id ( poslimit0_.customer_service_request_id poslimit0_.pos_limit_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:12.130 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [pos_limit poslimit0_]
2018-11-06 22:45:12.130 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.130 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (pos_limit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'poslimit0_.pos_limit_id as pos_limi1_72_' {alias=p, className=com.spring.starter.model.PosLimit, tableAlias=poslimit0_}
    |  \-[SQL_TOKEN] SqlFragment: 'poslimit0_.card_number as card_num2_72_, poslimit0_.customer_service_request_id as customer5_72_, poslimit0_.soft_reject as soft_rej3_72_, poslimit0_.value as value4_72_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[poslimit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'pos_limit poslimit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=pos_limit,tableAlias=poslimit0_,origin=null,columns={,className=com.spring.starter.model.PosLimit}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'poslimit0_.customer_service_request_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=p.customerServiceRequest.customerServiceRequestId,tableAlias=poslimit0_,className=com.spring.starter.model.PosLimit,classAlias=p}
          |  +-[DOT] DotNode: 'poslimit0_.customer_service_request_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=p.customerServiceRequest,tableAlias=poslimit0_,className=com.spring.starter.model.PosLimit,classAlias=p}
          |  |  +-[ALIAS_REF] IdentNode: 'poslimit0_.pos_limit_id' {alias=p, className=com.spring.starter.model.PosLimit, tableAlias=poslimit0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.130 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.130 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT p FROM com.spring.starter.model.PosLimit p WHERE p.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.130 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select poslimit0_.pos_limit_id as pos_limi1_72_, poslimit0_.card_number as card_num2_72_, poslimit0_.customer_service_request_id as customer5_72_, poslimit0_.soft_reject as soft_rej3_72_, poslimit0_.value as value4_72_ from pos_limit poslimit0_ where poslimit0_.customer_service_request_id=?
2018-11-06 22:45:12.130 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.144 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT la FROM com.spring.starter.model.LinkedAccount la WHERE la.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.144 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.144 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'LinkedAccount'
    |  |     \-[ALIAS] Node: 'la'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'la'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'la'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.144 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.144 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.LinkedAccount (la) -> linkedacco0_
2018-11-06 22:45:12.145 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : la -> linkedacco0_.linked_account_id
2018-11-06 22:45:12.145 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : la -> linkedacco0_.linked_account_id
2018-11-06 22:45:12.145 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:12.145 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.LinkedAccount does not require a join.
2018-11-06 22:45:12.145 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:12.145 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : la.customerServiceRequest -> linkedacco0_.customer_service_request_id
2018-11-06 22:45:12.145 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.145 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : la.customerServiceRequest.customerServiceRequestId -> linkedacco0_.customer_service_request_id
2018-11-06 22:45:12.147 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.147 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} linkedacco0_.linked_account_id ) ( FromClause{level=1} linked_account linkedacco0_ ) ( WHERE ( = ( linkedacco0_.customer_service_request_id ( linkedacco0_.customer_service_request_id linkedacco0_.linked_account_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:12.147 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [linked_account linkedacco0_]
2018-11-06 22:45:12.147 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.147 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (linked_account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'linkedacco0_.linked_account_id as linked_a1_65_' {alias=la, className=com.spring.starter.model.LinkedAccount, tableAlias=linkedacco0_}
    |  \-[SQL_TOKEN] SqlFragment: 'linkedacco0_.card_number as card_num2_65_, linkedacco0_.customer_service_request_id as customer6_65_, linkedacco0_.primary_account as primary_3_65_, linkedacco0_.secondary_account as secondar4_65_, linkedacco0_.soft_reject as soft_rej5_65_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[la], fromElementByTableAlias=[linkedacco0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'linked_account linkedacco0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=la,role=null,tableName=linked_account,tableAlias=linkedacco0_,origin=null,columns={,className=com.spring.starter.model.LinkedAccount}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'linkedacco0_.customer_service_request_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=la.customerServiceRequest.customerServiceRequestId,tableAlias=linkedacco0_,className=com.spring.starter.model.LinkedAccount,classAlias=la}
          |  +-[DOT] DotNode: 'linkedacco0_.customer_service_request_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=la.customerServiceRequest,tableAlias=linkedacco0_,className=com.spring.starter.model.LinkedAccount,classAlias=la}
          |  |  +-[ALIAS_REF] IdentNode: 'linkedacco0_.linked_account_id' {alias=la, className=com.spring.starter.model.LinkedAccount, tableAlias=linkedacco0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.147 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.147 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT la FROM com.spring.starter.model.LinkedAccount la WHERE la.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.147 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select linkedacco0_.linked_account_id as linked_a1_65_, linkedacco0_.card_number as card_num2_65_, linkedacco0_.customer_service_request_id as customer6_65_, linkedacco0_.primary_account as primary_3_65_, linkedacco0_.secondary_account as secondar4_65_, linkedacco0_.soft_reject as soft_rej5_65_ from linked_account linkedacco0_ where linkedacco0_.customer_service_request_id=?
2018-11-06 22:45:12.147 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.158 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT cpa FROM com.spring.starter.model.ChangePrimaryAccount cpa WHERE cpa.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.158 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.158 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'ChangePrimaryAccount'
    |  |     \-[ALIAS] Node: 'cpa'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'cpa'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'cpa'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.158 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.158 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.ChangePrimaryAccount (cpa) -> changeprim0_
2018-11-06 22:45:12.158 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cpa -> changeprim0_.change_primary_account_id
2018-11-06 22:45:12.158 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cpa -> changeprim0_.change_primary_account_id
2018-11-06 22:45:12.158 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:12.158 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.ChangePrimaryAccount does not require a join.
2018-11-06 22:45:12.158 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:12.158 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cpa.customerServiceRequest -> changeprim0_.customer_service_request_id
2018-11-06 22:45:12.159 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.159 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cpa.customerServiceRequest.customerServiceRequestId -> changeprim0_.customer_service_request_id
2018-11-06 22:45:12.159 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.159 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} changeprim0_.change_primary_account_id ) ( FromClause{level=1} change_primary_account changeprim0_ ) ( WHERE ( = ( changeprim0_.customer_service_request_id ( changeprim0_.customer_service_request_id changeprim0_.change_primary_account_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:12.159 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [change_primary_account changeprim0_]
2018-11-06 22:45:12.159 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.159 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (change_primary_account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'changeprim0_.change_primary_account_id as change_p1_22_' {alias=cpa, className=com.spring.starter.model.ChangePrimaryAccount, tableAlias=changeprim0_}
    |  \-[SQL_TOKEN] SqlFragment: 'changeprim0_.account_number as account_2_22_, changeprim0_.card_number as card_num3_22_, changeprim0_.customer_service_request_id as customer5_22_, changeprim0_.soft_reject as soft_rej4_22_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cpa], fromElementByTableAlias=[changeprim0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'change_primary_account changeprim0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cpa,role=null,tableName=change_primary_account,tableAlias=changeprim0_,origin=null,columns={,className=com.spring.starter.model.ChangePrimaryAccount}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'changeprim0_.customer_service_request_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=cpa.customerServiceRequest.customerServiceRequestId,tableAlias=changeprim0_,className=com.spring.starter.model.ChangePrimaryAccount,classAlias=cpa}
          |  +-[DOT] DotNode: 'changeprim0_.customer_service_request_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=cpa.customerServiceRequest,tableAlias=changeprim0_,className=com.spring.starter.model.ChangePrimaryAccount,classAlias=cpa}
          |  |  +-[ALIAS_REF] IdentNode: 'changeprim0_.change_primary_account_id' {alias=cpa, className=com.spring.starter.model.ChangePrimaryAccount, tableAlias=changeprim0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.159 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.159 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT cpa FROM com.spring.starter.model.ChangePrimaryAccount cpa WHERE cpa.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.159 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select changeprim0_.change_primary_account_id as change_p1_22_, changeprim0_.account_number as account_2_22_, changeprim0_.card_number as card_num3_22_, changeprim0_.customer_service_request_id as customer5_22_, changeprim0_.soft_reject as soft_rej4_22_ from change_primary_account changeprim0_ where changeprim0_.customer_service_request_id=?
2018-11-06 22:45:12.159 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.226 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT br FROM com.spring.starter.model.Branch br WHERE br.bank.mx_bank_code = :mx_bank_code
2018-11-06 22:45:12.229 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.229 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Branch'
    |  |     \-[ALIAS] Node: 'br'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'br'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'br'
          |  |  \-[IDENT] Node: 'bank'
          |  \-[IDENT] Node: 'mx_bank_code'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'mx_bank_code'

2018-11-06 22:45:12.229 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.229 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.Branch (br) -> branch0_
2018-11-06 22:45:12.229 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : br -> branch0_.branch_id
2018-11-06 22:45:12.229 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : br -> branch0_.branch_id
2018-11-06 22:45:12.230 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : bank -> org.hibernate.type.ManyToOneType(com.spring.starter.model.Bank)
2018-11-06 22:45:12.230 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property mx_bank_code in com.spring.starter.model.Branch does not require a join.
2018-11-06 22:45:12.230 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'bank.mx_bank_code'
2018-11-06 22:45:12.230 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : br.bank -> branch0_.bank_id
2018-11-06 22:45:12.230 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : bank.mx_bank_code -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.230 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : br.bank.mx_bank_code -> branch0_.bank_id
2018-11-06 22:45:12.230 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.230 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} branch0_.branch_id ) ( FromClause{level=1} branch branch0_ ) ( WHERE ( = ( branch0_.bank_id ( branch0_.bank_id branch0_.branch_id bank ) mx_bank_code ) ? ) ) )
2018-11-06 22:45:12.230 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [branch branch0_]
2018-11-06 22:45:12.230 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.230 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (branch)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'branch0_.branch_id as branch_i1_9_' {alias=br, className=com.spring.starter.model.Branch, tableAlias=branch0_}
    |  \-[SQL_TOKEN] SqlFragment: 'branch0_.bank_id as bank_id5_9_, branch0_.ceft as ceft2_9_, branch0_.mx_branch_code as mx_branc3_9_, branch0_.mx_branch_name as mx_branc4_9_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[br], fromElementByTableAlias=[branch0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'branch branch0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=br,role=null,tableName=branch,tableAlias=branch0_,origin=null,columns={,className=com.spring.starter.model.Branch}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'branch0_.bank_id' {propertyName=mx_bank_code,dereferenceType=PRIMITIVE,getPropertyPath=bank.mx_bank_code,path=br.bank.mx_bank_code,tableAlias=branch0_,className=com.spring.starter.model.Branch,classAlias=br}
          |  +-[DOT] DotNode: 'branch0_.bank_id' {propertyName=mx_bank_code,dereferenceType=UNKNOWN,getPropertyPath=bank.mx_bank_code,path=br.bank,tableAlias=branch0_,className=com.spring.starter.model.Branch,classAlias=br}
          |  |  +-[ALIAS_REF] IdentNode: 'branch0_.branch_id' {alias=br, className=com.spring.starter.model.Branch, tableAlias=branch0_}
          |  |  \-[IDENT] IdentNode: 'bank' {originalText=bank}
          |  \-[IDENT] IdentNode: 'mx_bank_code' {originalText=mx_bank_code}
          \-[NAMED_PARAM] ParameterNode: '?' {name=mx_bank_code, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.230 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.231 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT br FROM com.spring.starter.model.Branch br WHERE br.bank.mx_bank_code = :mx_bank_code
2018-11-06 22:45:12.231 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select branch0_.branch_id as branch_i1_9_, branch0_.bank_id as bank_id5_9_, branch0_.ceft as ceft2_9_, branch0_.mx_branch_code as mx_branc3_9_, branch0_.mx_branch_name as mx_branc4_9_ from branch branch0_ where branch0_.bank_id=?
2018-11-06 22:45:12.231 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.291 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT ef FROM com.spring.starter.model.EstatementFacility ef WHERE ef.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.292 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.292 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'EstatementFacility'
    |  |     \-[ALIAS] Node: 'ef'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'ef'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'ef'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.292 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.292 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.EstatementFacility (ef) -> estatement0_
2018-11-06 22:45:12.292 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ef -> estatement0_.estatement_facilityid
2018-11-06 22:45:12.293 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ef -> estatement0_.estatement_facilityid
2018-11-06 22:45:12.293 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:12.293 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.EstatementFacility does not require a join.
2018-11-06 22:45:12.293 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:12.293 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ef.customerServiceRequest -> estatement0_.csr_id
2018-11-06 22:45:12.293 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.293 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ef.customerServiceRequest.customerServiceRequestId -> estatement0_.csr_id
2018-11-06 22:45:12.294 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.294 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} estatement0_.estatement_facilityid ) ( FromClause{level=1} estatement_facility estatement0_ ) ( WHERE ( = ( estatement0_.csr_id ( estatement0_.csr_id estatement0_.estatement_facilityid customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:12.294 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [estatement_facility estatement0_]
2018-11-06 22:45:12.294 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.294 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (estatement_facility)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'estatement0_.estatement_facilityid as estateme1_40_' {alias=ef, className=com.spring.starter.model.EstatementFacility, tableAlias=estatement0_}
    |  \-[SQL_TOKEN] SqlFragment: 'estatement0_.activate_estatement as activate2_40_, estatement0_.cancel_estatement as cancel_e3_40_, estatement0_.csr_id as csr_id6_40_, estatement0_.email as email4_40_, estatement0_.soft_reject as soft_rej5_40_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[ef], fromElementByTableAlias=[estatement0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'estatement_facility estatement0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=ef,role=null,tableName=estatement_facility,tableAlias=estatement0_,origin=null,columns={,className=com.spring.starter.model.EstatementFacility}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'estatement0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=ef.customerServiceRequest.customerServiceRequestId,tableAlias=estatement0_,className=com.spring.starter.model.EstatementFacility,classAlias=ef}
          |  +-[DOT] DotNode: 'estatement0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=ef.customerServiceRequest,tableAlias=estatement0_,className=com.spring.starter.model.EstatementFacility,classAlias=ef}
          |  |  +-[ALIAS_REF] IdentNode: 'estatement0_.estatement_facilityid' {alias=ef, className=com.spring.starter.model.EstatementFacility, tableAlias=estatement0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.294 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.294 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT ef FROM com.spring.starter.model.EstatementFacility ef WHERE ef.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.294 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select estatement0_.estatement_facilityid as estateme1_40_, estatement0_.activate_estatement as activate2_40_, estatement0_.cancel_estatement as cancel_e3_40_, estatement0_.csr_id as csr_id6_40_, estatement0_.email as email4_40_, estatement0_.soft_reject as soft_rej5_40_ from estatement_facility estatement0_ where estatement0_.csr_id=?
2018-11-06 22:45:12.294 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.318 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT sf FROM com.spring.starter.model.StatementFrequency sf WHERE sf.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.318 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.318 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'StatementFrequency'
    |  |     \-[ALIAS] Node: 'sf'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'sf'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'sf'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.318 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.318 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.StatementFrequency (sf) -> statementf0_
2018-11-06 22:45:12.318 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : sf -> statementf0_.statement_frequency
2018-11-06 22:45:12.318 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : sf -> statementf0_.statement_frequency
2018-11-06 22:45:12.318 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:12.318 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.StatementFrequency does not require a join.
2018-11-06 22:45:12.319 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:12.319 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : sf.customerServiceRequest -> statementf0_.csr_id
2018-11-06 22:45:12.319 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.319 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : sf.customerServiceRequest.customerServiceRequestId -> statementf0_.csr_id
2018-11-06 22:45:12.323 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.323 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} statementf0_.statement_frequency ) ( FromClause{level=1} statement_frequency statementf0_ ) ( WHERE ( = ( statementf0_.csr_id ( statementf0_.csr_id statementf0_.statement_frequency customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:12.323 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [statement_frequency statementf0_]
2018-11-06 22:45:12.323 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.323 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (statement_frequency)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'statementf0_.statement_frequency as statemen1_90_' {alias=sf, className=com.spring.starter.model.StatementFrequency, tableAlias=statementf0_}
    |  \-[SQL_TOKEN] SqlFragment: 'statementf0_.account_no as account_2_90_, statementf0_.annually as annually3_90_, statementf0_.bi_annaully as bi_annau4_90_, statementf0_.csr_id as csr_id9_90_, statementf0_.daily as daily5_90_, statementf0_.monthly as monthly6_90_, statementf0_.quarterly as quarterl7_90_, statementf0_.soft_reject as soft_rej8_90_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[sf], fromElementByTableAlias=[statementf0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'statement_frequency statementf0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=sf,role=null,tableName=statement_frequency,tableAlias=statementf0_,origin=null,columns={,className=com.spring.starter.model.StatementFrequency}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'statementf0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=sf.customerServiceRequest.customerServiceRequestId,tableAlias=statementf0_,className=com.spring.starter.model.StatementFrequency,classAlias=sf}
          |  +-[DOT] DotNode: 'statementf0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=sf.customerServiceRequest,tableAlias=statementf0_,className=com.spring.starter.model.StatementFrequency,classAlias=sf}
          |  |  +-[ALIAS_REF] IdentNode: 'statementf0_.statement_frequency' {alias=sf, className=com.spring.starter.model.StatementFrequency, tableAlias=statementf0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.323 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.323 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT sf FROM com.spring.starter.model.StatementFrequency sf WHERE sf.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.324 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select statementf0_.statement_frequency as statemen1_90_, statementf0_.account_no as account_2_90_, statementf0_.annually as annually3_90_, statementf0_.bi_annaully as bi_annau4_90_, statementf0_.csr_id as csr_id9_90_, statementf0_.daily as daily5_90_, statementf0_.monthly as monthly6_90_, statementf0_.quarterly as quarterl7_90_, statementf0_.soft_reject as soft_rej8_90_ from statement_frequency statementf0_ where statementf0_.csr_id=?
2018-11-06 22:45:12.324 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.336 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT dpr FROM com.spring.starter.model.DuplicatePassBookRequest dpr WHERE dpr.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.336 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.336 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'DuplicatePassBookRequest'
    |  |     \-[ALIAS] Node: 'dpr'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'dpr'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'dpr'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.336 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.336 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.DuplicatePassBookRequest (dpr) -> duplicatep0_
2018-11-06 22:45:12.336 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : dpr -> duplicatep0_.duplicate_pass_book_request_id
2018-11-06 22:45:12.336 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : dpr -> duplicatep0_.duplicate_pass_book_request_id
2018-11-06 22:45:12.336 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:12.336 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.DuplicatePassBookRequest does not require a join.
2018-11-06 22:45:12.337 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:12.337 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : dpr.customerServiceRequest -> duplicatep0_.customer_service_request_id
2018-11-06 22:45:12.337 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.340 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : dpr.customerServiceRequest.customerServiceRequestId -> duplicatep0_.customer_service_request_id
2018-11-06 22:45:12.340 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.340 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} duplicatep0_.duplicate_pass_book_request_id ) ( FromClause{level=1} duplicate_pass_book_request duplicatep0_ ) ( WHERE ( = ( duplicatep0_.customer_service_request_id ( duplicatep0_.customer_service_request_id duplicatep0_.duplicate_pass_book_request_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:12.340 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [duplicate_pass_book_request duplicatep0_]
2018-11-06 22:45:12.340 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.340 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (duplicate_pass_book_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'duplicatep0_.duplicate_pass_book_request_id as duplicat1_36_' {alias=dpr, className=com.spring.starter.model.DuplicatePassBookRequest, tableAlias=duplicatep0_}
    |  \-[SQL_TOKEN] SqlFragment: 'duplicatep0_.account_number as account_2_36_, duplicatep0_.customer_service_request_id as customer4_36_, duplicatep0_.soft_reject as soft_rej3_36_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[dpr], fromElementByTableAlias=[duplicatep0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'duplicate_pass_book_request duplicatep0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=dpr,role=null,tableName=duplicate_pass_book_request,tableAlias=duplicatep0_,origin=null,columns={,className=com.spring.starter.model.DuplicatePassBookRequest}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'duplicatep0_.customer_service_request_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=dpr.customerServiceRequest.customerServiceRequestId,tableAlias=duplicatep0_,className=com.spring.starter.model.DuplicatePassBookRequest,classAlias=dpr}
          |  +-[DOT] DotNode: 'duplicatep0_.customer_service_request_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=dpr.customerServiceRequest,tableAlias=duplicatep0_,className=com.spring.starter.model.DuplicatePassBookRequest,classAlias=dpr}
          |  |  +-[ALIAS_REF] IdentNode: 'duplicatep0_.duplicate_pass_book_request_id' {alias=dpr, className=com.spring.starter.model.DuplicatePassBookRequest, tableAlias=duplicatep0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.341 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.341 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT dpr FROM com.spring.starter.model.DuplicatePassBookRequest dpr WHERE dpr.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.341 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select duplicatep0_.duplicate_pass_book_request_id as duplicat1_36_, duplicatep0_.account_number as account_2_36_, duplicatep0_.customer_service_request_id as customer4_36_, duplicatep0_.soft_reject as soft_rej3_36_ from duplicate_pass_book_request duplicatep0_ where duplicatep0_.customer_service_request_id=?
2018-11-06 22:45:12.341 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.352 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT asir FROM com.spring.starter.model.AccountStatementIssueRequest asir WHERE asir.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.352 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.352 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'AccountStatementIssueRequest'
    |  |     \-[ALIAS] Node: 'asir'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'asir'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'asir'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.353 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.353 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.AccountStatementIssueRequest (asir) -> accountsta0_
2018-11-06 22:45:12.353 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : asir -> accountsta0_.account_statement_issue_request_id
2018-11-06 22:45:12.353 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : asir -> accountsta0_.account_statement_issue_request_id
2018-11-06 22:45:12.353 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:12.353 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.AccountStatementIssueRequest does not require a join.
2018-11-06 22:45:12.353 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:12.353 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : asir.customerServiceRequest -> accountsta0_.customer_service_request_id
2018-11-06 22:45:12.353 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.353 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : asir.customerServiceRequest.customerServiceRequestId -> accountsta0_.customer_service_request_id
2018-11-06 22:45:12.353 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.353 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} accountsta0_.account_statement_issue_request_id ) ( FromClause{level=1} account_statement_issue_request accountsta0_ ) ( WHERE ( = ( accountsta0_.customer_service_request_id ( accountsta0_.customer_service_request_id accountsta0_.account_statement_issue_request_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:12.354 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [account_statement_issue_request accountsta0_]
2018-11-06 22:45:12.354 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.354 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (account_statement_issue_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'accountsta0_.account_statement_issue_request_id as account_1_0_' {alias=asir, className=com.spring.starter.model.AccountStatementIssueRequest, tableAlias=accountsta0_}
    |  \-[SQL_TOKEN] SqlFragment: 'accountsta0_.account_no as account_2_0_, accountsta0_.customer_service_request_id as customer7_0_, accountsta0_.from_date as from_dat3_0_, accountsta0_.nature_of_statement as nature_o4_0_, accountsta0_.soft_reject as soft_rej5_0_, accountsta0_.to_date as to_date6_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[asir], fromElementByTableAlias=[accountsta0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'account_statement_issue_request accountsta0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=asir,role=null,tableName=account_statement_issue_request,tableAlias=accountsta0_,origin=null,columns={,className=com.spring.starter.model.AccountStatementIssueRequest}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'accountsta0_.customer_service_request_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=asir.customerServiceRequest.customerServiceRequestId,tableAlias=accountsta0_,className=com.spring.starter.model.AccountStatementIssueRequest,classAlias=asir}
          |  +-[DOT] DotNode: 'accountsta0_.customer_service_request_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=asir.customerServiceRequest,tableAlias=accountsta0_,className=com.spring.starter.model.AccountStatementIssueRequest,classAlias=asir}
          |  |  +-[ALIAS_REF] IdentNode: 'accountsta0_.account_statement_issue_request_id' {alias=asir, className=com.spring.starter.model.AccountStatementIssueRequest, tableAlias=accountsta0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.354 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.354 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT asir FROM com.spring.starter.model.AccountStatementIssueRequest asir WHERE asir.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.354 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select accountsta0_.account_statement_issue_request_id as account_1_0_, accountsta0_.account_no as account_2_0_, accountsta0_.customer_service_request_id as customer7_0_, accountsta0_.from_date as from_dat3_0_, accountsta0_.nature_of_statement as nature_o4_0_, accountsta0_.soft_reject as soft_rej5_0_, accountsta0_.to_date as to_date6_0_ from account_statement_issue_request accountsta0_ where accountsta0_.customer_service_request_id=?
2018-11-06 22:45:12.354 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.367 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT adcr FROM com.spring.starter.model.PassbookRequest adcr WHERE adcr.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.367 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.367 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'PassbookRequest'
    |  |     \-[ALIAS] Node: 'adcr'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'adcr'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'adcr'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.367 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.368 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.PassbookRequest (adcr) -> passbookre0_
2018-11-06 22:45:12.368 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : adcr -> passbookre0_.passbook_request
2018-11-06 22:45:12.368 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : adcr -> passbookre0_.passbook_request
2018-11-06 22:45:12.368 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:12.368 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.PassbookRequest does not require a join.
2018-11-06 22:45:12.368 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:12.368 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : adcr.customerServiceRequest -> passbookre0_.customer_service_request_id
2018-11-06 22:45:12.368 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.368 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : adcr.customerServiceRequest.customerServiceRequestId -> passbookre0_.customer_service_request_id
2018-11-06 22:45:12.368 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.368 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} passbookre0_.passbook_request ) ( FromClause{level=1} pass_book_request passbookre0_ ) ( WHERE ( = ( passbookre0_.customer_service_request_id ( passbookre0_.customer_service_request_id passbookre0_.passbook_request customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:12.368 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [pass_book_request passbookre0_]
2018-11-06 22:45:12.368 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.368 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (pass_book_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'passbookre0_.passbook_request as passbook1_71_' {alias=adcr, className=com.spring.starter.model.PassbookRequest, tableAlias=passbookre0_}
    |  \-[SQL_TOKEN] SqlFragment: 'passbookre0_.account_number as account_2_71_, passbookre0_.customer_service_request_id as customer3_71_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[adcr], fromElementByTableAlias=[passbookre0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'pass_book_request passbookre0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=adcr,role=null,tableName=pass_book_request,tableAlias=passbookre0_,origin=null,columns={,className=com.spring.starter.model.PassbookRequest}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'passbookre0_.customer_service_request_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=adcr.customerServiceRequest.customerServiceRequestId,tableAlias=passbookre0_,className=com.spring.starter.model.PassbookRequest,classAlias=adcr}
          |  +-[DOT] DotNode: 'passbookre0_.customer_service_request_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=adcr.customerServiceRequest,tableAlias=passbookre0_,className=com.spring.starter.model.PassbookRequest,classAlias=adcr}
          |  |  +-[ALIAS_REF] IdentNode: 'passbookre0_.passbook_request' {alias=adcr, className=com.spring.starter.model.PassbookRequest, tableAlias=passbookre0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.369 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.369 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT adcr FROM com.spring.starter.model.PassbookRequest adcr WHERE adcr.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.369 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select passbookre0_.passbook_request as passbook1_71_, passbookre0_.account_number as account_2_71_, passbookre0_.customer_service_request_id as customer3_71_ from pass_book_request passbookre0_ where passbookre0_.customer_service_request_id=?
2018-11-06 22:45:12.369 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.395 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT bp FROM com.spring.starter.model.BillPayment bp WHERE bp.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:12.395 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.395 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'BillPayment'
    |  |     \-[ALIAS] Node: 'bp'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'bp'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'bp'
          |  |  \-[IDENT] Node: 'customerTransactionRequest'
          |  \-[IDENT] Node: 'customerTransactionRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.395 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.395 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.BillPayment (bp) -> billpaymen0_
2018-11-06 22:45:12.395 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : bp -> billpaymen0_.bill_payment_id
2018-11-06 22:45:12.395 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : bp -> billpaymen0_.bill_payment_id
2018-11-06 22:45:12.396 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerTransactionRequest)
2018-11-06 22:45:12.396 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerTransactionRequestId in com.spring.starter.model.BillPayment does not require a join.
2018-11-06 22:45:12.396 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerTransactionRequest.customerTransactionRequestId'
2018-11-06 22:45:12.396 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : bp.customerTransactionRequest -> billpaymen0_.customer_transaction_request_id
2018-11-06 22:45:12.396 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest.customerTransactionRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.396 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : bp.customerTransactionRequest.customerTransactionRequestId -> billpaymen0_.customer_transaction_request_id
2018-11-06 22:45:12.401 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.401 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} billpaymen0_.bill_payment_id ) ( FromClause{level=1} bill_payment billpaymen0_ ) ( WHERE ( = ( billpaymen0_.customer_transaction_request_id ( billpaymen0_.customer_transaction_request_id billpaymen0_.bill_payment_id customerTransactionRequest ) customerTransactionRequestId ) ? ) ) )
2018-11-06 22:45:12.401 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [bill_payment billpaymen0_]
2018-11-06 22:45:12.401 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.401 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (bill_payment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'billpaymen0_.bill_payment_id as bill_pay1_5_' {alias=bp, className=com.spring.starter.model.BillPayment, tableAlias=billpaymen0_}
    |  \-[SQL_TOKEN] SqlFragment: 'billpaymen0_.account_name as account_2_5_, billpaymen0_.benificiary_name as benifici3_5_, billpaymen0_.benificiary_tel_no as benifici4_5_, billpaymen0_.bill_payment_referance_id as bill_pa22_5_, billpaymen0_.branch_id as branch_23_5_, billpaymen0_.collection_account_no as collecti5_5_, billpaymen0_.currency_id as currenc24_5_, billpaymen0_.currency_is_cash as currency6_5_, billpaymen0_.currency_is_chaque as currency7_5_, billpaymen0_.customer_transaction_request_id as custome25_5_, billpaymen0_.date as date8_5_, billpaymen0_.request_complete_date as request_9_5_, billpaymen0_.signature_url as signatu10_5_, billpaymen0_.status as status11_5_, billpaymen0_.total as total12_5_, billpaymen0_.value_of100notes as value_o13_5_, billpaymen0_.value_of10notes as value_o14_5_, billpaymen0_.value_of2000notes as value_o15_5_, billpaymen0_.value_of20notes as value_o16_5_, billpaymen0_.value_of5000notes as value_o17_5_, billpaymen0_.value_of500notes as value_o18_5_, billpaymen0_.value_of50notes as value_o19_5_, billpaymen0_.value_ofcoins as value_o20_5_, billpaymen0_.valueof1000notes as valueof21_5_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[bp], fromElementByTableAlias=[billpaymen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'bill_payment billpaymen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=bp,role=null,tableName=bill_payment,tableAlias=billpaymen0_,origin=null,columns={,className=com.spring.starter.model.BillPayment}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'billpaymen0_.customer_transaction_request_id' {propertyName=customerTransactionRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=bp.customerTransactionRequest.customerTransactionRequestId,tableAlias=billpaymen0_,className=com.spring.starter.model.BillPayment,classAlias=bp}
          |  +-[DOT] DotNode: 'billpaymen0_.customer_transaction_request_id' {propertyName=customerTransactionRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=bp.customerTransactionRequest,tableAlias=billpaymen0_,className=com.spring.starter.model.BillPayment,classAlias=bp}
          |  |  +-[ALIAS_REF] IdentNode: 'billpaymen0_.bill_payment_id' {alias=bp, className=com.spring.starter.model.BillPayment, tableAlias=billpaymen0_}
          |  |  \-[IDENT] IdentNode: 'customerTransactionRequest' {originalText=customerTransactionRequest}
          |  \-[IDENT] IdentNode: 'customerTransactionRequestId' {originalText=customerTransactionRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.402 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.402 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT bp FROM com.spring.starter.model.BillPayment bp WHERE bp.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:12.402 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select billpaymen0_.bill_payment_id as bill_pay1_5_, billpaymen0_.account_name as account_2_5_, billpaymen0_.benificiary_name as benifici3_5_, billpaymen0_.benificiary_tel_no as benifici4_5_, billpaymen0_.bill_payment_referance_id as bill_pa22_5_, billpaymen0_.branch_id as branch_23_5_, billpaymen0_.collection_account_no as collecti5_5_, billpaymen0_.currency_id as currenc24_5_, billpaymen0_.currency_is_cash as currency6_5_, billpaymen0_.currency_is_chaque as currency7_5_, billpaymen0_.customer_transaction_request_id as custome25_5_, billpaymen0_.date as date8_5_, billpaymen0_.request_complete_date as request_9_5_, billpaymen0_.signature_url as signatu10_5_, billpaymen0_.status as status11_5_, billpaymen0_.total as total12_5_, billpaymen0_.value_of100notes as value_o13_5_, billpaymen0_.value_of10notes as value_o14_5_, billpaymen0_.value_of2000notes as value_o15_5_, billpaymen0_.value_of20notes as value_o16_5_, billpaymen0_.value_of5000notes as value_o17_5_, billpaymen0_.value_of500notes as value_o18_5_, billpaymen0_.value_of50notes as value_o19_5_, billpaymen0_.value_ofcoins as value_o20_5_, billpaymen0_.valueof1000notes as valueof21_5_ from bill_payment billpaymen0_ where billpaymen0_.customer_transaction_request_id=?
2018-11-06 22:45:12.402 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.414 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT cs FROM com.spring.starter.model.CustomerTransactionRequest cs WHERE cs.transactionCustomer.transactionCustomerId = ?1 AND date(cs.requestDate)=?2
2018-11-06 22:45:12.415 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.415 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerTransactionRequest'
    |  |     \-[ALIAS] Node: 'cs'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'cs'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'cs'
          |  |  |  \-[IDENT] Node: 'transactionCustomer'
          |  |  \-[IDENT] Node: 'transactionCustomerId'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'date'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'cs'
             |        \-[IDENT] Node: 'requestDate'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-11-06 22:45:12.415 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.415 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CustomerTransactionRequest (cs) -> customertr0_
2018-11-06 22:45:12.415 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.415 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.416 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : transactionCustomer -> org.hibernate.type.ManyToOneType(com.spring.starter.model.TransactionCustomer)
2018-11-06 22:45:12.416 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property transactionCustomerId in com.spring.starter.model.CustomerTransactionRequest does not require a join.
2018-11-06 22:45:12.416 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'transactionCustomer.transactionCustomerId'
2018-11-06 22:45:12.416 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs.transactionCustomer -> customertr0_.transaction_customer_id
2018-11-06 22:45:12.419 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : transactionCustomer.transactionCustomerId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.419 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs.transactionCustomer.transactionCustomerId -> customertr0_.transaction_customer_id
2018-11-06 22:45:12.419 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.419 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : requestDate -> org.hibernate.type.TimestampType@5f023e8d
2018-11-06 22:45:12.419 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs.requestDate -> customertr0_.request_date
2018-11-06 22:45:12.419 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.419 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} customertr0_.customer_transaction_request_id ) ( FromClause{level=1} customer_transaction_request customertr0_ ) ( WHERE ( AND ( = ( customertr0_.transaction_customer_id ( customertr0_.transaction_customer_id customertr0_.customer_transaction_request_id transactionCustomer ) transactionCustomerId ) ? ) ( = ( ( date ( exprList ( customertr0_.request_date customertr0_.customer_transaction_request_id requestDate ) ) ) ? ) ) ) )
2018-11-06 22:45:12.419 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [customer_transaction_request customertr0_]
2018-11-06 22:45:12.419 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.420 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer_transaction_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id as customer1_32_' {alias=cs, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customertr0_.authorize as authoriz2_32_, customertr0_.authorizer_data_transaction_request_id as authoriz9_32_, customertr0_.request_complete_date as request_3_32_, customertr0_.request_date as request_4_32_, customertr0_.soft_reject as soft_rej5_32_, customertr0_.status as status6_32_, customertr0_.status_message as status_m7_32_, customertr0_.transaction_customer_id as transac10_32_, customertr0_.transaction_request_id as transac11_32_, customertr0_.tt_number as tt_numbe8_32_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cs], fromElementByTableAlias=[customertr0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer_transaction_request customertr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cs,role=null,tableName=customer_transaction_request,tableAlias=customertr0_,origin=null,columns={,className=com.spring.starter.model.CustomerTransactionRequest}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customertr0_.transaction_customer_id' {propertyName=transactionCustomerId,dereferenceType=PRIMITIVE,getPropertyPath=transactionCustomer.transactionCustomerId,path=cs.transactionCustomer.transactionCustomerId,tableAlias=customertr0_,className=com.spring.starter.model.CustomerTransactionRequest,classAlias=cs}
          |  |  +-[DOT] DotNode: 'customertr0_.transaction_customer_id' {propertyName=transactionCustomerId,dereferenceType=UNKNOWN,getPropertyPath=transactionCustomer.transactionCustomerId,path=cs.transactionCustomer,tableAlias=customertr0_,className=com.spring.starter.model.CustomerTransactionRequest,classAlias=cs}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id' {alias=cs, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
          |  |  |  \-[IDENT] IdentNode: 'transactionCustomer' {originalText=transactionCustomer}
          |  |  \-[IDENT] IdentNode: 'transactionCustomerId' {originalText=transactionCustomerId}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'date' {originalText=date}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customertr0_.request_date' {propertyName=requestDate,dereferenceType=PRIMITIVE,getPropertyPath=requestDate,path=cs.requestDate,tableAlias=customertr0_,className=com.spring.starter.model.CustomerTransactionRequest,classAlias=cs}
             |        +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id' {alias=cs, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
             |        \-[IDENT] IdentNode: 'requestDate' {originalText=requestDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.DateType@15167eb1}

2018-11-06 22:45:12.420 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.420 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT cs FROM com.spring.starter.model.CustomerTransactionRequest cs WHERE cs.transactionCustomer.transactionCustomerId = ?1 AND date(cs.requestDate)=?2
2018-11-06 22:45:12.420 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select customertr0_.customer_transaction_request_id as customer1_32_, customertr0_.authorize as authoriz2_32_, customertr0_.authorizer_data_transaction_request_id as authoriz9_32_, customertr0_.request_complete_date as request_3_32_, customertr0_.request_date as request_4_32_, customertr0_.soft_reject as soft_rej5_32_, customertr0_.status as status6_32_, customertr0_.status_message as status_m7_32_, customertr0_.transaction_customer_id as transac10_32_, customertr0_.transaction_request_id as transac11_32_, customertr0_.tt_number as tt_numbe8_32_ from customer_transaction_request customertr0_ where customertr0_.transaction_customer_id=? and date(customertr0_.request_date)=?
2018-11-06 22:45:12.420 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.422 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT ctr FROM com.spring.starter.model.CustomerTransactionRequest ctr WHERE ctr.authorize = true and date(ctr.requestDate) =:date
2018-11-06 22:45:12.422 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.423 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerTransactionRequest'
    |  |     \-[ALIAS] Node: 'ctr'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'ctr'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'ctr'
          |  |  \-[IDENT] Node: 'authorize'
          |  \-[TRUE] Node: 'true'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'date'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'ctr'
             |        \-[IDENT] Node: 'requestDate'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'date'

2018-11-06 22:45:12.423 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.423 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CustomerTransactionRequest (ctr) -> customertr0_
2018-11-06 22:45:12.423 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.423 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.423 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : authorize -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:12.423 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr.authorize -> customertr0_.authorize
2018-11-06 22:45:12.423 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.423 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : requestDate -> org.hibernate.type.TimestampType@5f023e8d
2018-11-06 22:45:12.423 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr.requestDate -> customertr0_.request_date
2018-11-06 22:45:12.426 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.426 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} customertr0_.customer_transaction_request_id ) ( FromClause{level=1} customer_transaction_request customertr0_ ) ( WHERE ( and ( = ( customertr0_.authorize customertr0_.customer_transaction_request_id authorize ) true ) ( = ( ( date ( exprList ( customertr0_.request_date customertr0_.customer_transaction_request_id requestDate ) ) ) ? ) ) ) )
2018-11-06 22:45:12.426 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [customer_transaction_request customertr0_]
2018-11-06 22:45:12.426 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.426 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer_transaction_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id as customer1_32_' {alias=ctr, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customertr0_.authorize as authoriz2_32_, customertr0_.authorizer_data_transaction_request_id as authoriz9_32_, customertr0_.request_complete_date as request_3_32_, customertr0_.request_date as request_4_32_, customertr0_.soft_reject as soft_rej5_32_, customertr0_.status as status6_32_, customertr0_.status_message as status_m7_32_, customertr0_.transaction_customer_id as transac10_32_, customertr0_.transaction_request_id as transac11_32_, customertr0_.tt_number as tt_numbe8_32_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[ctr], fromElementByTableAlias=[customertr0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer_transaction_request customertr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=ctr,role=null,tableName=customer_transaction_request,tableAlias=customertr0_,origin=null,columns={,className=com.spring.starter.model.CustomerTransactionRequest}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customertr0_.authorize' {propertyName=authorize,dereferenceType=PRIMITIVE,getPropertyPath=authorize,path=ctr.authorize,tableAlias=customertr0_,className=com.spring.starter.model.CustomerTransactionRequest,classAlias=ctr}
          |  |  +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id' {alias=ctr, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
          |  |  \-[IDENT] IdentNode: 'authorize' {originalText=authorize}
          |  \-[TRUE] BooleanLiteralNode: 'true'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'date' {originalText=date}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'customertr0_.request_date' {propertyName=requestDate,dereferenceType=PRIMITIVE,getPropertyPath=requestDate,path=ctr.requestDate,tableAlias=customertr0_,className=com.spring.starter.model.CustomerTransactionRequest,classAlias=ctr}
             |        +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id' {alias=ctr, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
             |        \-[IDENT] IdentNode: 'requestDate' {originalText=requestDate}
             \-[NAMED_PARAM] ParameterNode: '?' {name=date, expectedType=org.hibernate.type.DateType@15167eb1}

2018-11-06 22:45:12.426 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.426 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT ctr FROM com.spring.starter.model.CustomerTransactionRequest ctr WHERE ctr.authorize = true and date(ctr.requestDate) =:date
2018-11-06 22:45:12.427 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select customertr0_.customer_transaction_request_id as customer1_32_, customertr0_.authorize as authoriz2_32_, customertr0_.authorizer_data_transaction_request_id as authoriz9_32_, customertr0_.request_complete_date as request_3_32_, customertr0_.request_date as request_4_32_, customertr0_.soft_reject as soft_rej5_32_, customertr0_.status as status6_32_, customertr0_.status_message as status_m7_32_, customertr0_.transaction_customer_id as transac10_32_, customertr0_.transaction_request_id as transac11_32_, customertr0_.tt_number as tt_numbe8_32_ from customer_transaction_request customertr0_ where customertr0_.authorize=1 and date(customertr0_.request_date)=?
2018-11-06 22:45:12.427 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.429 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT cs FROM com.spring.starter.model.CustomerTransactionRequest cs WHERE date(cs.requestDate)=?1
2018-11-06 22:45:12.429 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.429 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerTransactionRequest'
    |  |     \-[ALIAS] Node: 'cs'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'cs'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'date'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'cs'
          |        \-[IDENT] Node: 'requestDate'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.429 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.429 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CustomerTransactionRequest (cs) -> customertr0_
2018-11-06 22:45:12.429 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.429 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.430 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : requestDate -> org.hibernate.type.TimestampType@5f023e8d
2018-11-06 22:45:12.430 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs.requestDate -> customertr0_.request_date
2018-11-06 22:45:12.430 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.430 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} customertr0_.customer_transaction_request_id ) ( FromClause{level=1} customer_transaction_request customertr0_ ) ( WHERE ( = ( ( date ( exprList ( customertr0_.request_date customertr0_.customer_transaction_request_id requestDate ) ) ) ? ) ) )
2018-11-06 22:45:12.430 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [customer_transaction_request customertr0_]
2018-11-06 22:45:12.430 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.431 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer_transaction_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id as customer1_32_' {alias=cs, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customertr0_.authorize as authoriz2_32_, customertr0_.authorizer_data_transaction_request_id as authoriz9_32_, customertr0_.request_complete_date as request_3_32_, customertr0_.request_date as request_4_32_, customertr0_.soft_reject as soft_rej5_32_, customertr0_.status as status6_32_, customertr0_.status_message as status_m7_32_, customertr0_.transaction_customer_id as transac10_32_, customertr0_.transaction_request_id as transac11_32_, customertr0_.tt_number as tt_numbe8_32_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cs], fromElementByTableAlias=[customertr0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer_transaction_request customertr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cs,role=null,tableName=customer_transaction_request,tableAlias=customertr0_,origin=null,columns={,className=com.spring.starter.model.CustomerTransactionRequest}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'date' {originalText=date}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'customertr0_.request_date' {propertyName=requestDate,dereferenceType=PRIMITIVE,getPropertyPath=requestDate,path=cs.requestDate,tableAlias=customertr0_,className=com.spring.starter.model.CustomerTransactionRequest,classAlias=cs}
          |        +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id' {alias=cs, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
          |        \-[IDENT] IdentNode: 'requestDate' {originalText=requestDate}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.DateType@15167eb1}

2018-11-06 22:45:12.431 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.431 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT cs FROM com.spring.starter.model.CustomerTransactionRequest cs WHERE date(cs.requestDate)=?1
2018-11-06 22:45:12.431 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select customertr0_.customer_transaction_request_id as customer1_32_, customertr0_.authorize as authoriz2_32_, customertr0_.authorizer_data_transaction_request_id as authoriz9_32_, customertr0_.request_complete_date as request_3_32_, customertr0_.request_date as request_4_32_, customertr0_.soft_reject as soft_rej5_32_, customertr0_.status as status6_32_, customertr0_.status_message as status_m7_32_, customertr0_.transaction_customer_id as transac10_32_, customertr0_.transaction_request_id as transac11_32_, customertr0_.tt_number as tt_numbe8_32_ from customer_transaction_request customertr0_ where date(customertr0_.request_date)=?
2018-11-06 22:45:12.431 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.433 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT ctr FROM com.spring.starter.model.CustomerTransactionRequest ctr WHERE ctr.authorize = true
2018-11-06 22:45:12.433 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.433 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerTransactionRequest'
    |  |     \-[ALIAS] Node: 'ctr'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'ctr'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'ctr'
          |  \-[IDENT] Node: 'authorize'
          \-[TRUE] Node: 'true'

2018-11-06 22:45:12.433 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.433 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CustomerTransactionRequest (ctr) -> customertr0_
2018-11-06 22:45:12.433 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.433 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.433 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : authorize -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:12.434 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr.authorize -> customertr0_.authorize
2018-11-06 22:45:12.434 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.434 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} customertr0_.customer_transaction_request_id ) ( FromClause{level=1} customer_transaction_request customertr0_ ) ( WHERE ( = ( customertr0_.authorize customertr0_.customer_transaction_request_id authorize ) true ) ) )
2018-11-06 22:45:12.434 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [customer_transaction_request customertr0_]
2018-11-06 22:45:12.434 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.434 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer_transaction_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id as customer1_32_' {alias=ctr, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customertr0_.authorize as authoriz2_32_, customertr0_.authorizer_data_transaction_request_id as authoriz9_32_, customertr0_.request_complete_date as request_3_32_, customertr0_.request_date as request_4_32_, customertr0_.soft_reject as soft_rej5_32_, customertr0_.status as status6_32_, customertr0_.status_message as status_m7_32_, customertr0_.transaction_customer_id as transac10_32_, customertr0_.transaction_request_id as transac11_32_, customertr0_.tt_number as tt_numbe8_32_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[ctr], fromElementByTableAlias=[customertr0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer_transaction_request customertr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=ctr,role=null,tableName=customer_transaction_request,tableAlias=customertr0_,origin=null,columns={,className=com.spring.starter.model.CustomerTransactionRequest}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customertr0_.authorize' {propertyName=authorize,dereferenceType=PRIMITIVE,getPropertyPath=authorize,path=ctr.authorize,tableAlias=customertr0_,className=com.spring.starter.model.CustomerTransactionRequest,classAlias=ctr}
          |  +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id' {alias=ctr, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
          |  \-[IDENT] IdentNode: 'authorize' {originalText=authorize}
          \-[TRUE] BooleanLiteralNode: 'true'

2018-11-06 22:45:12.435 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.435 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT ctr FROM com.spring.starter.model.CustomerTransactionRequest ctr WHERE ctr.authorize = true
2018-11-06 22:45:12.435 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select customertr0_.customer_transaction_request_id as customer1_32_, customertr0_.authorize as authoriz2_32_, customertr0_.authorizer_data_transaction_request_id as authoriz9_32_, customertr0_.request_complete_date as request_3_32_, customertr0_.request_date as request_4_32_, customertr0_.soft_reject as soft_rej5_32_, customertr0_.status as status6_32_, customertr0_.status_message as status_m7_32_, customertr0_.transaction_customer_id as transac10_32_, customertr0_.transaction_request_id as transac11_32_, customertr0_.tt_number as tt_numbe8_32_ from customer_transaction_request customertr0_ where customertr0_.authorize=1
2018-11-06 22:45:12.435 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.437 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT ctr FROM com.spring.starter.model.CustomerTransactionRequest ctr WHERE date(ctr.requestDate) =:date AND ctr.status = false
2018-11-06 22:45:12.437 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.437 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerTransactionRequest'
    |  |     \-[ALIAS] Node: 'ctr'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'ctr'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[METHOD_CALL] Node: '('
          |  |  +-[IDENT] Node: 'date'
          |  |  \-[EXPR_LIST] Node: 'exprList'
          |  |     \-[DOT] Node: '.'
          |  |        +-[IDENT] Node: 'ctr'
          |  |        \-[IDENT] Node: 'requestDate'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'date'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'ctr'
             |  \-[IDENT] Node: 'status'
             \-[FALSE] Node: 'false'

2018-11-06 22:45:12.437 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.437 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CustomerTransactionRequest (ctr) -> customertr0_
2018-11-06 22:45:12.437 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.437 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.437 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : requestDate -> org.hibernate.type.TimestampType@5f023e8d
2018-11-06 22:45:12.438 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr.requestDate -> customertr0_.request_date
2018-11-06 22:45:12.438 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.438 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : status -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:12.438 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr.status -> customertr0_.status
2018-11-06 22:45:12.438 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.438 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} customertr0_.customer_transaction_request_id ) ( FromClause{level=1} customer_transaction_request customertr0_ ) ( WHERE ( AND ( = ( ( date ( exprList ( customertr0_.request_date customertr0_.customer_transaction_request_id requestDate ) ) ) ? ) ( = ( customertr0_.status customertr0_.customer_transaction_request_id status ) false ) ) ) )
2018-11-06 22:45:12.438 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [customer_transaction_request customertr0_]
2018-11-06 22:45:12.439 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.439 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer_transaction_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id as customer1_32_' {alias=ctr, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customertr0_.authorize as authoriz2_32_, customertr0_.authorizer_data_transaction_request_id as authoriz9_32_, customertr0_.request_complete_date as request_3_32_, customertr0_.request_date as request_4_32_, customertr0_.soft_reject as soft_rej5_32_, customertr0_.status as status6_32_, customertr0_.status_message as status_m7_32_, customertr0_.transaction_customer_id as transac10_32_, customertr0_.transaction_request_id as transac11_32_, customertr0_.tt_number as tt_numbe8_32_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[ctr], fromElementByTableAlias=[customertr0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer_transaction_request customertr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=ctr,role=null,tableName=customer_transaction_request,tableAlias=customertr0_,origin=null,columns={,className=com.spring.starter.model.CustomerTransactionRequest}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[METHOD_CALL] MethodNode: '('
          |  |  +-[METHOD_NAME] IdentNode: 'date' {originalText=date}
          |  |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     \-[DOT] DotNode: 'customertr0_.request_date' {propertyName=requestDate,dereferenceType=PRIMITIVE,getPropertyPath=requestDate,path=ctr.requestDate,tableAlias=customertr0_,className=com.spring.starter.model.CustomerTransactionRequest,classAlias=ctr}
          |  |        +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id' {alias=ctr, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
          |  |        \-[IDENT] IdentNode: 'requestDate' {originalText=requestDate}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=date, expectedType=org.hibernate.type.DateType@15167eb1}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customertr0_.status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=ctr.status,tableAlias=customertr0_,className=com.spring.starter.model.CustomerTransactionRequest,classAlias=ctr}
             |  +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id' {alias=ctr, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
             |  \-[IDENT] IdentNode: 'status' {originalText=status}
             \-[FALSE] BooleanLiteralNode: 'false'

2018-11-06 22:45:12.439 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.439 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT ctr FROM com.spring.starter.model.CustomerTransactionRequest ctr WHERE date(ctr.requestDate) =:date AND ctr.status = false
2018-11-06 22:45:12.439 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select customertr0_.customer_transaction_request_id as customer1_32_, customertr0_.authorize as authoriz2_32_, customertr0_.authorizer_data_transaction_request_id as authoriz9_32_, customertr0_.request_complete_date as request_3_32_, customertr0_.request_date as request_4_32_, customertr0_.soft_reject as soft_rej5_32_, customertr0_.status as status6_32_, customertr0_.status_message as status_m7_32_, customertr0_.transaction_customer_id as transac10_32_, customertr0_.transaction_request_id as transac11_32_, customertr0_.tt_number as tt_numbe8_32_ from customer_transaction_request customertr0_ where date(customertr0_.request_date)=? and customertr0_.status=0
2018-11-06 22:45:12.439 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.441 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT cs FROM com.spring.starter.model.CustomerTransactionRequest cs WHERE cs.transactionCustomer.transactionCustomerId = ?1
2018-11-06 22:45:12.442 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.442 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerTransactionRequest'
    |  |     \-[ALIAS] Node: 'cs'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'cs'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'cs'
          |  |  \-[IDENT] Node: 'transactionCustomer'
          |  \-[IDENT] Node: 'transactionCustomerId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.442 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.442 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CustomerTransactionRequest (cs) -> customertr0_
2018-11-06 22:45:12.442 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.443 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.443 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : transactionCustomer -> org.hibernate.type.ManyToOneType(com.spring.starter.model.TransactionCustomer)
2018-11-06 22:45:12.443 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property transactionCustomerId in com.spring.starter.model.CustomerTransactionRequest does not require a join.
2018-11-06 22:45:12.443 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'transactionCustomer.transactionCustomerId'
2018-11-06 22:45:12.443 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs.transactionCustomer -> customertr0_.transaction_customer_id
2018-11-06 22:45:12.443 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : transactionCustomer.transactionCustomerId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.443 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cs.transactionCustomer.transactionCustomerId -> customertr0_.transaction_customer_id
2018-11-06 22:45:12.443 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.447 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} customertr0_.customer_transaction_request_id ) ( FromClause{level=1} customer_transaction_request customertr0_ ) ( WHERE ( = ( customertr0_.transaction_customer_id ( customertr0_.transaction_customer_id customertr0_.customer_transaction_request_id transactionCustomer ) transactionCustomerId ) ? ) ) )
2018-11-06 22:45:12.447 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [customer_transaction_request customertr0_]
2018-11-06 22:45:12.447 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.447 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer_transaction_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id as customer1_32_' {alias=cs, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customertr0_.authorize as authoriz2_32_, customertr0_.authorizer_data_transaction_request_id as authoriz9_32_, customertr0_.request_complete_date as request_3_32_, customertr0_.request_date as request_4_32_, customertr0_.soft_reject as soft_rej5_32_, customertr0_.status as status6_32_, customertr0_.status_message as status_m7_32_, customertr0_.transaction_customer_id as transac10_32_, customertr0_.transaction_request_id as transac11_32_, customertr0_.tt_number as tt_numbe8_32_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cs], fromElementByTableAlias=[customertr0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer_transaction_request customertr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cs,role=null,tableName=customer_transaction_request,tableAlias=customertr0_,origin=null,columns={,className=com.spring.starter.model.CustomerTransactionRequest}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customertr0_.transaction_customer_id' {propertyName=transactionCustomerId,dereferenceType=PRIMITIVE,getPropertyPath=transactionCustomer.transactionCustomerId,path=cs.transactionCustomer.transactionCustomerId,tableAlias=customertr0_,className=com.spring.starter.model.CustomerTransactionRequest,classAlias=cs}
          |  +-[DOT] DotNode: 'customertr0_.transaction_customer_id' {propertyName=transactionCustomerId,dereferenceType=UNKNOWN,getPropertyPath=transactionCustomer.transactionCustomerId,path=cs.transactionCustomer,tableAlias=customertr0_,className=com.spring.starter.model.CustomerTransactionRequest,classAlias=cs}
          |  |  +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id' {alias=cs, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
          |  |  \-[IDENT] IdentNode: 'transactionCustomer' {originalText=transactionCustomer}
          |  \-[IDENT] IdentNode: 'transactionCustomerId' {originalText=transactionCustomerId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.447 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.447 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT cs FROM com.spring.starter.model.CustomerTransactionRequest cs WHERE cs.transactionCustomer.transactionCustomerId = ?1
2018-11-06 22:45:12.447 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select customertr0_.customer_transaction_request_id as customer1_32_, customertr0_.authorize as authoriz2_32_, customertr0_.authorizer_data_transaction_request_id as authoriz9_32_, customertr0_.request_complete_date as request_3_32_, customertr0_.request_date as request_4_32_, customertr0_.soft_reject as soft_rej5_32_, customertr0_.status as status6_32_, customertr0_.status_message as status_m7_32_, customertr0_.transaction_customer_id as transac10_32_, customertr0_.transaction_request_id as transac11_32_, customertr0_.tt_number as tt_numbe8_32_ from customer_transaction_request customertr0_ where customertr0_.transaction_customer_id=?
2018-11-06 22:45:12.448 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.450 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT ctr FROM com.spring.starter.model.CustomerTransactionRequest ctr WHERE ctr.authorize = true and ctr.transactionCustomer.transactionCustomerId = ?1 
2018-11-06 22:45:12.450 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.450 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerTransactionRequest'
    |  |     \-[ALIAS] Node: 'ctr'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'ctr'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'ctr'
          |  |  \-[IDENT] Node: 'authorize'
          |  \-[TRUE] Node: 'true'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'ctr'
             |  |  \-[IDENT] Node: 'transactionCustomer'
             |  \-[IDENT] Node: 'transactionCustomerId'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.451 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.451 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CustomerTransactionRequest (ctr) -> customertr0_
2018-11-06 22:45:12.451 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.451 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.451 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : authorize -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:12.451 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr.authorize -> customertr0_.authorize
2018-11-06 22:45:12.451 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.451 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : transactionCustomer -> org.hibernate.type.ManyToOneType(com.spring.starter.model.TransactionCustomer)
2018-11-06 22:45:12.451 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property transactionCustomerId in com.spring.starter.model.CustomerTransactionRequest does not require a join.
2018-11-06 22:45:12.454 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'transactionCustomer.transactionCustomerId'
2018-11-06 22:45:12.454 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr.transactionCustomer -> customertr0_.transaction_customer_id
2018-11-06 22:45:12.454 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : transactionCustomer.transactionCustomerId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.454 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr.transactionCustomer.transactionCustomerId -> customertr0_.transaction_customer_id
2018-11-06 22:45:12.454 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.454 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} customertr0_.customer_transaction_request_id ) ( FromClause{level=1} customer_transaction_request customertr0_ ) ( WHERE ( and ( = ( customertr0_.authorize customertr0_.customer_transaction_request_id authorize ) true ) ( = ( customertr0_.transaction_customer_id ( customertr0_.transaction_customer_id customertr0_.customer_transaction_request_id transactionCustomer ) transactionCustomerId ) ? ) ) ) )
2018-11-06 22:45:12.454 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [customer_transaction_request customertr0_]
2018-11-06 22:45:12.454 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.455 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer_transaction_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id as customer1_32_' {alias=ctr, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customertr0_.authorize as authoriz2_32_, customertr0_.authorizer_data_transaction_request_id as authoriz9_32_, customertr0_.request_complete_date as request_3_32_, customertr0_.request_date as request_4_32_, customertr0_.soft_reject as soft_rej5_32_, customertr0_.status as status6_32_, customertr0_.status_message as status_m7_32_, customertr0_.transaction_customer_id as transac10_32_, customertr0_.transaction_request_id as transac11_32_, customertr0_.tt_number as tt_numbe8_32_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[ctr], fromElementByTableAlias=[customertr0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer_transaction_request customertr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=ctr,role=null,tableName=customer_transaction_request,tableAlias=customertr0_,origin=null,columns={,className=com.spring.starter.model.CustomerTransactionRequest}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customertr0_.authorize' {propertyName=authorize,dereferenceType=PRIMITIVE,getPropertyPath=authorize,path=ctr.authorize,tableAlias=customertr0_,className=com.spring.starter.model.CustomerTransactionRequest,classAlias=ctr}
          |  |  +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id' {alias=ctr, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
          |  |  \-[IDENT] IdentNode: 'authorize' {originalText=authorize}
          |  \-[TRUE] BooleanLiteralNode: 'true'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customertr0_.transaction_customer_id' {propertyName=transactionCustomerId,dereferenceType=PRIMITIVE,getPropertyPath=transactionCustomer.transactionCustomerId,path=ctr.transactionCustomer.transactionCustomerId,tableAlias=customertr0_,className=com.spring.starter.model.CustomerTransactionRequest,classAlias=ctr}
             |  +-[DOT] DotNode: 'customertr0_.transaction_customer_id' {propertyName=transactionCustomerId,dereferenceType=UNKNOWN,getPropertyPath=transactionCustomer.transactionCustomerId,path=ctr.transactionCustomer,tableAlias=customertr0_,className=com.spring.starter.model.CustomerTransactionRequest,classAlias=ctr}
             |  |  +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id' {alias=ctr, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
             |  |  \-[IDENT] IdentNode: 'transactionCustomer' {originalText=transactionCustomer}
             |  \-[IDENT] IdentNode: 'transactionCustomerId' {originalText=transactionCustomerId}
             \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.455 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.455 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT ctr FROM com.spring.starter.model.CustomerTransactionRequest ctr WHERE ctr.authorize = true and ctr.transactionCustomer.transactionCustomerId = ?1 
2018-11-06 22:45:12.455 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select customertr0_.customer_transaction_request_id as customer1_32_, customertr0_.authorize as authoriz2_32_, customertr0_.authorizer_data_transaction_request_id as authoriz9_32_, customertr0_.request_complete_date as request_3_32_, customertr0_.request_date as request_4_32_, customertr0_.soft_reject as soft_rej5_32_, customertr0_.status as status6_32_, customertr0_.status_message as status_m7_32_, customertr0_.transaction_customer_id as transac10_32_, customertr0_.transaction_request_id as transac11_32_, customertr0_.tt_number as tt_numbe8_32_ from customer_transaction_request customertr0_ where customertr0_.authorize=1 and customertr0_.transaction_customer_id=?
2018-11-06 22:45:12.455 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.457 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT ctr FROM com.spring.starter.model.CustomerTransactionRequest ctr WHERE ctr.transactionCustomer.transactionCustomerId =?1 and ctr.status =false
2018-11-06 22:45:12.458 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.458 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerTransactionRequest'
    |  |     \-[ALIAS] Node: 'ctr'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'ctr'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'ctr'
          |  |  |  \-[IDENT] Node: 'transactionCustomer'
          |  |  \-[IDENT] Node: 'transactionCustomerId'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'ctr'
             |  \-[IDENT] Node: 'status'
             \-[FALSE] Node: 'false'

2018-11-06 22:45:12.458 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.458 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CustomerTransactionRequest (ctr) -> customertr0_
2018-11-06 22:45:12.458 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.458 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.458 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : transactionCustomer -> org.hibernate.type.ManyToOneType(com.spring.starter.model.TransactionCustomer)
2018-11-06 22:45:12.458 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property transactionCustomerId in com.spring.starter.model.CustomerTransactionRequest does not require a join.
2018-11-06 22:45:12.458 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'transactionCustomer.transactionCustomerId'
2018-11-06 22:45:12.458 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr.transactionCustomer -> customertr0_.transaction_customer_id
2018-11-06 22:45:12.459 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : transactionCustomer.transactionCustomerId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.461 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr.transactionCustomer.transactionCustomerId -> customertr0_.transaction_customer_id
2018-11-06 22:45:12.461 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr -> customertr0_.customer_transaction_request_id
2018-11-06 22:45:12.461 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : status -> org.hibernate.type.BooleanType@68bf1d5c
2018-11-06 22:45:12.461 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ctr.status -> customertr0_.status
2018-11-06 22:45:12.461 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.461 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} customertr0_.customer_transaction_request_id ) ( FromClause{level=1} customer_transaction_request customertr0_ ) ( WHERE ( and ( = ( customertr0_.transaction_customer_id ( customertr0_.transaction_customer_id customertr0_.customer_transaction_request_id transactionCustomer ) transactionCustomerId ) ? ) ( = ( customertr0_.status customertr0_.customer_transaction_request_id status ) false ) ) ) )
2018-11-06 22:45:12.461 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [customer_transaction_request customertr0_]
2018-11-06 22:45:12.461 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.461 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer_transaction_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id as customer1_32_' {alias=ctr, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customertr0_.authorize as authoriz2_32_, customertr0_.authorizer_data_transaction_request_id as authoriz9_32_, customertr0_.request_complete_date as request_3_32_, customertr0_.request_date as request_4_32_, customertr0_.soft_reject as soft_rej5_32_, customertr0_.status as status6_32_, customertr0_.status_message as status_m7_32_, customertr0_.transaction_customer_id as transac10_32_, customertr0_.transaction_request_id as transac11_32_, customertr0_.tt_number as tt_numbe8_32_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[ctr], fromElementByTableAlias=[customertr0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer_transaction_request customertr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=ctr,role=null,tableName=customer_transaction_request,tableAlias=customertr0_,origin=null,columns={,className=com.spring.starter.model.CustomerTransactionRequest}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'customertr0_.transaction_customer_id' {propertyName=transactionCustomerId,dereferenceType=PRIMITIVE,getPropertyPath=transactionCustomer.transactionCustomerId,path=ctr.transactionCustomer.transactionCustomerId,tableAlias=customertr0_,className=com.spring.starter.model.CustomerTransactionRequest,classAlias=ctr}
          |  |  +-[DOT] DotNode: 'customertr0_.transaction_customer_id' {propertyName=transactionCustomerId,dereferenceType=UNKNOWN,getPropertyPath=transactionCustomer.transactionCustomerId,path=ctr.transactionCustomer,tableAlias=customertr0_,className=com.spring.starter.model.CustomerTransactionRequest,classAlias=ctr}
          |  |  |  +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id' {alias=ctr, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
          |  |  |  \-[IDENT] IdentNode: 'transactionCustomer' {originalText=transactionCustomer}
          |  |  \-[IDENT] IdentNode: 'transactionCustomerId' {originalText=transactionCustomerId}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customertr0_.status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=ctr.status,tableAlias=customertr0_,className=com.spring.starter.model.CustomerTransactionRequest,classAlias=ctr}
             |  +-[ALIAS_REF] IdentNode: 'customertr0_.customer_transaction_request_id' {alias=ctr, className=com.spring.starter.model.CustomerTransactionRequest, tableAlias=customertr0_}
             |  \-[IDENT] IdentNode: 'status' {originalText=status}
             \-[FALSE] BooleanLiteralNode: 'false'

2018-11-06 22:45:12.462 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.462 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT ctr FROM com.spring.starter.model.CustomerTransactionRequest ctr WHERE ctr.transactionCustomer.transactionCustomerId =?1 and ctr.status =false
2018-11-06 22:45:12.462 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select customertr0_.customer_transaction_request_id as customer1_32_, customertr0_.authorize as authoriz2_32_, customertr0_.authorizer_data_transaction_request_id as authoriz9_32_, customertr0_.request_complete_date as request_3_32_, customertr0_.request_date as request_4_32_, customertr0_.soft_reject as soft_rej5_32_, customertr0_.status as status6_32_, customertr0_.status_message as status_m7_32_, customertr0_.transaction_customer_id as transac10_32_, customertr0_.transaction_request_id as transac11_32_, customertr0_.tt_number as tt_numbe8_32_ from customer_transaction_request customertr0_ where customertr0_.transaction_customer_id=? and customertr0_.status=0
2018-11-06 22:45:12.462 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.514 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c FROM com.spring.starter.model.Currency c WHERE c.currency =?1
2018-11-06 22:45:12.514 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.514 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Currency'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'currency'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.514 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.515 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.Currency (c) -> currency0_
2018-11-06 22:45:12.515 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> currency0_.currency_id
2018-11-06 22:45:12.515 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> currency0_.currency_id
2018-11-06 22:45:12.515 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : currency -> org.hibernate.type.StringType@f620100
2018-11-06 22:45:12.515 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.currency -> currency0_.currency
2018-11-06 22:45:12.515 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.515 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} currency0_.currency_id ) ( FromClause{level=1} currency currency0_ ) ( WHERE ( = ( currency0_.currency currency0_.currency_id currency ) ? ) ) )
2018-11-06 22:45:12.515 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [currency currency0_]
2018-11-06 22:45:12.515 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.515 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (currency)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'currency0_.currency_id as currency1_29_' {alias=c, className=com.spring.starter.model.Currency, tableAlias=currency0_}
    |  \-[SQL_TOKEN] SqlFragment: 'currency0_.currency as currency2_29_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[currency0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'currency currency0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=currency,tableAlias=currency0_,origin=null,columns={,className=com.spring.starter.model.Currency}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'currency0_.currency' {propertyName=currency,dereferenceType=PRIMITIVE,getPropertyPath=currency,path=c.currency,tableAlias=currency0_,className=com.spring.starter.model.Currency,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'currency0_.currency_id' {alias=c, className=com.spring.starter.model.Currency, tableAlias=currency0_}
          |  \-[IDENT] IdentNode: 'currency' {originalText=currency}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@f620100}

2018-11-06 22:45:12.517 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.517 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c FROM com.spring.starter.model.Currency c WHERE c.currency =?1
2018-11-06 22:45:12.517 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select currency0_.currency_id as currency1_29_, currency0_.currency as currency2_29_ from currency currency0_ where currency0_.currency=?
2018-11-06 22:45:12.517 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.519 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c FROM com.spring.starter.model.Currency c WHERE c.currency =:currency
2018-11-06 22:45:12.519 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.519 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Currency'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'currency'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'currency'

2018-11-06 22:45:12.519 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.519 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.Currency (c) -> currency0_
2018-11-06 22:45:12.519 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> currency0_.currency_id
2018-11-06 22:45:12.519 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> currency0_.currency_id
2018-11-06 22:45:12.519 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : currency -> org.hibernate.type.StringType@f620100
2018-11-06 22:45:12.520 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.currency -> currency0_.currency
2018-11-06 22:45:12.520 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.520 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} currency0_.currency_id ) ( FromClause{level=1} currency currency0_ ) ( WHERE ( = ( currency0_.currency currency0_.currency_id currency ) ? ) ) )
2018-11-06 22:45:12.520 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [currency currency0_]
2018-11-06 22:45:12.520 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.520 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (currency)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'currency0_.currency_id as currency1_29_' {alias=c, className=com.spring.starter.model.Currency, tableAlias=currency0_}
    |  \-[SQL_TOKEN] SqlFragment: 'currency0_.currency as currency2_29_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[currency0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'currency currency0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=currency,tableAlias=currency0_,origin=null,columns={,className=com.spring.starter.model.Currency}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'currency0_.currency' {propertyName=currency,dereferenceType=PRIMITIVE,getPropertyPath=currency,path=c.currency,tableAlias=currency0_,className=com.spring.starter.model.Currency,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'currency0_.currency_id' {alias=c, className=com.spring.starter.model.Currency, tableAlias=currency0_}
          |  \-[IDENT] IdentNode: 'currency' {originalText=currency}
          \-[NAMED_PARAM] ParameterNode: '?' {name=currency, expectedType=org.hibernate.type.StringType@f620100}

2018-11-06 22:45:12.523 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.523 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c FROM com.spring.starter.model.Currency c WHERE c.currency =:currency
2018-11-06 22:45:12.523 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select currency0_.currency_id as currency1_29_, currency0_.currency as currency2_29_ from currency currency0_ where currency0_.currency=?
2018-11-06 22:45:12.523 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.576 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT cd FROM com.spring.starter.model.CashDeposit cd WHERE cd.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:12.576 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.576 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CashDeposit'
    |  |     \-[ALIAS] Node: 'cd'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'cd'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'cd'
          |  |  \-[IDENT] Node: 'customerTransactionRequest'
          |  \-[IDENT] Node: 'customerTransactionRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.576 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.576 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CashDeposit (cd) -> cashdeposi0_
2018-11-06 22:45:12.576 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cd -> cashdeposi0_.cash_deposit_id
2018-11-06 22:45:12.576 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cd -> cashdeposi0_.cash_deposit_id
2018-11-06 22:45:12.576 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerTransactionRequest)
2018-11-06 22:45:12.576 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerTransactionRequestId in com.spring.starter.model.CashDeposit does not require a join.
2018-11-06 22:45:12.577 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerTransactionRequest.customerTransactionRequestId'
2018-11-06 22:45:12.577 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cd.customerTransactionRequest -> cashdeposi0_.customer_transaction_request_id
2018-11-06 22:45:12.577 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest.customerTransactionRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.577 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cd.customerTransactionRequest.customerTransactionRequestId -> cashdeposi0_.customer_transaction_request_id
2018-11-06 22:45:12.577 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.577 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} cashdeposi0_.cash_deposit_id ) ( FromClause{level=1} cash_deposit cashdeposi0_ ) ( WHERE ( = ( cashdeposi0_.customer_transaction_request_id ( cashdeposi0_.customer_transaction_request_id cashdeposi0_.cash_deposit_id customerTransactionRequest ) customerTransactionRequestId ) ? ) ) )
2018-11-06 22:45:12.577 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [cash_deposit cashdeposi0_]
2018-11-06 22:45:12.577 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.577 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cash_deposit)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cashdeposi0_.cash_deposit_id as cash_dep1_10_' {alias=cd, className=com.spring.starter.model.CashDeposit, tableAlias=cashdeposi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cashdeposi0_.account_holder_name as account_2_10_, cashdeposi0_.account_number as account_3_10_, cashdeposi0_.address as address4_10_, cashdeposi0_.ammount_in_words as ammount_5_10_, cashdeposi0_.cash_deposit_break_down_id as cash_de24_10_, cashdeposi0_.currency_id as currenc25_10_, cashdeposi0_.customer_transaction_request_id as custome26_10_, cashdeposi0_.date as date6_10_, cashdeposi0_.identification as identifi7_10_, cashdeposi0_.name_of_depositor as name_of_8_10_, cashdeposi0_.phone_number_and_extn as phone_nu9_10_, cashdeposi0_.purpose_of_deposit as purpose10_10_, cashdeposi0_.request_complete_date as request11_10_, cashdeposi0_.signature_url as signatu12_10_, cashdeposi0_.status as status13_10_, cashdeposi0_.total as total14_10_, cashdeposi0_.value_of100notes as value_o15_10_, cashdeposi0_.value_of10notes as value_o16_10_, cashdeposi0_.value_of2000notes as value_o17_10_, cashdeposi0_.value_of20notes as value_o18_10_, cashdeposi0_.value_of5000notes as value_o19_10_, cashdeposi0_.value_of500notes as value_o20_10_, cashdeposi0_.value_of50notes as value_o21_10_, cashdeposi0_.value_ofcoins as value_o22_10_, cashdeposi0_.valueof1000notes as valueof23_10_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cd], fromElementByTableAlias=[cashdeposi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'cash_deposit cashdeposi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cd,role=null,tableName=cash_deposit,tableAlias=cashdeposi0_,origin=null,columns={,className=com.spring.starter.model.CashDeposit}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'cashdeposi0_.customer_transaction_request_id' {propertyName=customerTransactionRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=cd.customerTransactionRequest.customerTransactionRequestId,tableAlias=cashdeposi0_,className=com.spring.starter.model.CashDeposit,classAlias=cd}
          |  +-[DOT] DotNode: 'cashdeposi0_.customer_transaction_request_id' {propertyName=customerTransactionRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=cd.customerTransactionRequest,tableAlias=cashdeposi0_,className=com.spring.starter.model.CashDeposit,classAlias=cd}
          |  |  +-[ALIAS_REF] IdentNode: 'cashdeposi0_.cash_deposit_id' {alias=cd, className=com.spring.starter.model.CashDeposit, tableAlias=cashdeposi0_}
          |  |  \-[IDENT] IdentNode: 'customerTransactionRequest' {originalText=customerTransactionRequest}
          |  \-[IDENT] IdentNode: 'customerTransactionRequestId' {originalText=customerTransactionRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.578 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.579 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT cd FROM com.spring.starter.model.CashDeposit cd WHERE cd.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:12.579 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select cashdeposi0_.cash_deposit_id as cash_dep1_10_, cashdeposi0_.account_holder_name as account_2_10_, cashdeposi0_.account_number as account_3_10_, cashdeposi0_.address as address4_10_, cashdeposi0_.ammount_in_words as ammount_5_10_, cashdeposi0_.cash_deposit_break_down_id as cash_de24_10_, cashdeposi0_.currency_id as currenc25_10_, cashdeposi0_.customer_transaction_request_id as custome26_10_, cashdeposi0_.date as date6_10_, cashdeposi0_.identification as identifi7_10_, cashdeposi0_.name_of_depositor as name_of_8_10_, cashdeposi0_.phone_number_and_extn as phone_nu9_10_, cashdeposi0_.purpose_of_deposit as purpose10_10_, cashdeposi0_.request_complete_date as request11_10_, cashdeposi0_.signature_url as signatu12_10_, cashdeposi0_.status as status13_10_, cashdeposi0_.total as total14_10_, cashdeposi0_.value_of100notes as value_o15_10_, cashdeposi0_.value_of10notes as value_o16_10_, cashdeposi0_.value_of2000notes as value_o17_10_, cashdeposi0_.value_of20notes as value_o18_10_, cashdeposi0_.value_of5000notes as value_o19_10_, cashdeposi0_.value_of500notes as value_o20_10_, cashdeposi0_.value_of50notes as value_o21_10_, cashdeposi0_.value_ofcoins as value_o22_10_, cashdeposi0_.valueof1000notes as valueof23_10_ from cash_deposit cashdeposi0_ where cashdeposi0_.customer_transaction_request_id=?
2018-11-06 22:45:12.579 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.596 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT a FROM com.spring.starter.model.CashDepositUpdateRecords a WHERE a.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:12.597 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.597 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CashDepositUpdateRecords'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'a'
          |  |  \-[IDENT] Node: 'customerTransactionRequest'
          |  \-[IDENT] Node: 'customerTransactionRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.597 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.597 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CashDepositUpdateRecords (a) -> cashdeposi0_
2018-11-06 22:45:12.597 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : a -> cashdeposi0_.cash_deposit_update_records_id
2018-11-06 22:45:12.597 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : a -> cashdeposi0_.cash_deposit_update_records_id
2018-11-06 22:45:12.597 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerTransactionRequest)
2018-11-06 22:45:12.597 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerTransactionRequestId in com.spring.starter.model.CashDepositUpdateRecords does not require a join.
2018-11-06 22:45:12.597 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerTransactionRequest.customerTransactionRequestId'
2018-11-06 22:45:12.597 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : a.customerTransactionRequest -> cashdeposi0_.customer_transactions_request_id
2018-11-06 22:45:12.598 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest.customerTransactionRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.598 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : a.customerTransactionRequest.customerTransactionRequestId -> cashdeposi0_.customer_transactions_request_id
2018-11-06 22:45:12.598 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.598 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} cashdeposi0_.cash_deposit_update_records_id ) ( FromClause{level=1} cash_deposit_update_records cashdeposi0_ ) ( WHERE ( = ( cashdeposi0_.customer_transactions_request_id ( cashdeposi0_.customer_transactions_request_id cashdeposi0_.cash_deposit_update_records_id customerTransactionRequest ) customerTransactionRequestId ) ? ) ) )
2018-11-06 22:45:12.598 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [cash_deposit_update_records cashdeposi0_]
2018-11-06 22:45:12.598 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.598 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cash_deposit_update_records)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cashdeposi0_.cash_deposit_update_records_id as cash_dep1_14_' {alias=a, className=com.spring.starter.model.CashDepositUpdateRecords, tableAlias=cashdeposi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cashdeposi0_.comment as comment2_14_, cashdeposi0_.customer_transactions_request_id as customer4_14_, cashdeposi0_.signature_url as signatur3_14_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[cashdeposi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'cash_deposit_update_records cashdeposi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=cash_deposit_update_records,tableAlias=cashdeposi0_,origin=null,columns={,className=com.spring.starter.model.CashDepositUpdateRecords}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'cashdeposi0_.customer_transactions_request_id' {propertyName=customerTransactionRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=a.customerTransactionRequest.customerTransactionRequestId,tableAlias=cashdeposi0_,className=com.spring.starter.model.CashDepositUpdateRecords,classAlias=a}
          |  +-[DOT] DotNode: 'cashdeposi0_.customer_transactions_request_id' {propertyName=customerTransactionRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=a.customerTransactionRequest,tableAlias=cashdeposi0_,className=com.spring.starter.model.CashDepositUpdateRecords,classAlias=a}
          |  |  +-[ALIAS_REF] IdentNode: 'cashdeposi0_.cash_deposit_update_records_id' {alias=a, className=com.spring.starter.model.CashDepositUpdateRecords, tableAlias=cashdeposi0_}
          |  |  \-[IDENT] IdentNode: 'customerTransactionRequest' {originalText=customerTransactionRequest}
          |  \-[IDENT] IdentNode: 'customerTransactionRequestId' {originalText=customerTransactionRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.598 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.598 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT a FROM com.spring.starter.model.CashDepositUpdateRecords a WHERE a.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:12.598 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select cashdeposi0_.cash_deposit_update_records_id as cash_dep1_14_, cashdeposi0_.comment as comment2_14_, cashdeposi0_.customer_transactions_request_id as customer4_14_, cashdeposi0_.signature_url as signatur3_14_ from cash_deposit_update_records cashdeposi0_ where cashdeposi0_.customer_transactions_request_id=?
2018-11-06 22:45:12.598 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.620 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT b FROM com.spring.starter.model.CashDepositBreakDown b WHERE b.cashDeposit.cashDepositId =:cashDepositId
2018-11-06 22:45:12.620 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.621 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CashDepositBreakDown'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'b'
          |  |  \-[IDENT] Node: 'cashDeposit'
          |  \-[IDENT] Node: 'cashDepositId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'cashDepositId'

2018-11-06 22:45:12.621 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.621 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CashDepositBreakDown (b) -> cashdeposi0_
2018-11-06 22:45:12.621 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b -> cashdeposi0_.cash_deposit_break_down_id
2018-11-06 22:45:12.621 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b -> cashdeposi0_.cash_deposit_break_down_id
2018-11-06 22:45:12.621 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : cashDeposit -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CashDeposit)
2018-11-06 22:45:12.621 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property cashDepositId in com.spring.starter.model.CashDepositBreakDown does not require a join.
2018-11-06 22:45:12.621 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'cashDeposit.cashDepositId'
2018-11-06 22:45:12.621 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b.cashDeposit -> cashdeposi0_.cash_deposit_id
2018-11-06 22:45:12.621 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : cashDeposit.cashDepositId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.621 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b.cashDeposit.cashDepositId -> cashdeposi0_.cash_deposit_id
2018-11-06 22:45:12.621 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.621 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} cashdeposi0_.cash_deposit_break_down_id ) ( FromClause{level=1} cash_deposit_break_down cashdeposi0_ ) ( WHERE ( = ( cashdeposi0_.cash_deposit_id ( cashdeposi0_.cash_deposit_id cashdeposi0_.cash_deposit_break_down_id cashDeposit ) cashDepositId ) ? ) ) )
2018-11-06 22:45:12.622 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [cash_deposit_break_down cashdeposi0_]
2018-11-06 22:45:12.622 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.622 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cash_deposit_break_down)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cashdeposi0_.cash_deposit_break_down_id as cash_dep1_11_' {alias=b, className=com.spring.starter.model.CashDepositBreakDown, tableAlias=cashdeposi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cashdeposi0_.amount as amount2_11_, cashdeposi0_.cash_deposit_id as cash_de13_11_, cashdeposi0_.comment as comment3_11_, cashdeposi0_.value_of100notes as value_of4_11_, cashdeposi0_.value_of10notes as value_of5_11_, cashdeposi0_.value_of2000notes as value_of6_11_, cashdeposi0_.value_of20notes as value_of7_11_, cashdeposi0_.value_of5000notes as value_of8_11_, cashdeposi0_.value_of500notes as value_of9_11_, cashdeposi0_.value_of50notes as value_o10_11_, cashdeposi0_.value_ofcoins as value_o11_11_, cashdeposi0_.valueof1000notes as valueof12_11_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[cashdeposi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'cash_deposit_break_down cashdeposi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=cash_deposit_break_down,tableAlias=cashdeposi0_,origin=null,columns={,className=com.spring.starter.model.CashDepositBreakDown}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'cashdeposi0_.cash_deposit_id' {propertyName=cashDepositId,dereferenceType=PRIMITIVE,getPropertyPath=cashDeposit.cashDepositId,path=b.cashDeposit.cashDepositId,tableAlias=cashdeposi0_,className=com.spring.starter.model.CashDepositBreakDown,classAlias=b}
          |  +-[DOT] DotNode: 'cashdeposi0_.cash_deposit_id' {propertyName=cashDepositId,dereferenceType=UNKNOWN,getPropertyPath=cashDeposit.cashDepositId,path=b.cashDeposit,tableAlias=cashdeposi0_,className=com.spring.starter.model.CashDepositBreakDown,classAlias=b}
          |  |  +-[ALIAS_REF] IdentNode: 'cashdeposi0_.cash_deposit_break_down_id' {alias=b, className=com.spring.starter.model.CashDepositBreakDown, tableAlias=cashdeposi0_}
          |  |  \-[IDENT] IdentNode: 'cashDeposit' {originalText=cashDeposit}
          |  \-[IDENT] IdentNode: 'cashDepositId' {originalText=cashDepositId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=cashDepositId, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.622 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.622 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT b FROM com.spring.starter.model.CashDepositBreakDown b WHERE b.cashDeposit.cashDepositId =:cashDepositId
2018-11-06 22:45:12.622 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select cashdeposi0_.cash_deposit_break_down_id as cash_dep1_11_, cashdeposi0_.amount as amount2_11_, cashdeposi0_.cash_deposit_id as cash_de13_11_, cashdeposi0_.comment as comment3_11_, cashdeposi0_.value_of100notes as value_of4_11_, cashdeposi0_.value_of10notes as value_of5_11_, cashdeposi0_.value_of2000notes as value_of6_11_, cashdeposi0_.value_of20notes as value_of7_11_, cashdeposi0_.value_of5000notes as value_of8_11_, cashdeposi0_.value_of500notes as value_of9_11_, cashdeposi0_.value_of50notes as value_o10_11_, cashdeposi0_.value_ofcoins as value_o11_11_, cashdeposi0_.valueof1000notes as valueof12_11_ from cash_deposit_break_down cashdeposi0_ where cashdeposi0_.cash_deposit_id=?
2018-11-06 22:45:12.624 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.651 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT cw FROM com.spring.starter.model.CashWithdrawal cw WHERE cw.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:12.651 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.651 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CashWithdrawal'
    |  |     \-[ALIAS] Node: 'cw'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'cw'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'cw'
          |  |  \-[IDENT] Node: 'customerTransactionRequest'
          |  \-[IDENT] Node: 'customerTransactionRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.651 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.652 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CashWithdrawal (cw) -> cashwithdr0_
2018-11-06 22:45:12.652 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cw -> cashwithdr0_.cash_withdrawal_id
2018-11-06 22:45:12.652 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cw -> cashwithdr0_.cash_withdrawal_id
2018-11-06 22:45:12.652 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerTransactionRequest)
2018-11-06 22:45:12.652 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerTransactionRequestId in com.spring.starter.model.CashWithdrawal does not require a join.
2018-11-06 22:45:12.652 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerTransactionRequest.customerTransactionRequestId'
2018-11-06 22:45:12.652 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cw.customerTransactionRequest -> cashwithdr0_.customer_transaction_request_id
2018-11-06 22:45:12.652 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest.customerTransactionRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.652 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cw.customerTransactionRequest.customerTransactionRequestId -> cashwithdr0_.customer_transaction_request_id
2018-11-06 22:45:12.653 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.653 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} cashwithdr0_.cash_withdrawal_id ) ( FromClause{level=1} cash_withdrawal cashwithdr0_ ) ( WHERE ( = ( cashwithdr0_.customer_transaction_request_id ( cashwithdr0_.customer_transaction_request_id cashwithdr0_.cash_withdrawal_id customerTransactionRequest ) customerTransactionRequestId ) ? ) ) )
2018-11-06 22:45:12.653 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [cash_withdrawal cashwithdr0_]
2018-11-06 22:45:12.653 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.653 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cash_withdrawal)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cashwithdr0_.cash_withdrawal_id as cash_wit1_15_' {alias=cw, className=com.spring.starter.model.CashWithdrawal, tableAlias=cashwithdr0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cashwithdr0_.account_holder as account_2_15_, cashwithdr0_.account_no as account_3_15_, cashwithdr0_.amount as amount4_15_, cashwithdr0_.amount_in_words as amount_i5_15_, cashwithdr0_.branch_id as branch_12_15_, cashwithdr0_.cash_with_drawal_break_downid as cash_wi13_15_, cashwithdr0_.currency as currency6_15_, cashwithdr0_.customer_transaction_request_id as custome14_15_, cashwithdr0_.date as date7_15_, cashwithdr0_.identity as identity8_15_, cashwithdr0_.request_complete_date as request_9_15_, cashwithdr0_.signature_url as signatu10_15_, cashwithdr0_.status as status11_15_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cw], fromElementByTableAlias=[cashwithdr0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'cash_withdrawal cashwithdr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cw,role=null,tableName=cash_withdrawal,tableAlias=cashwithdr0_,origin=null,columns={,className=com.spring.starter.model.CashWithdrawal}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'cashwithdr0_.customer_transaction_request_id' {propertyName=customerTransactionRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=cw.customerTransactionRequest.customerTransactionRequestId,tableAlias=cashwithdr0_,className=com.spring.starter.model.CashWithdrawal,classAlias=cw}
          |  +-[DOT] DotNode: 'cashwithdr0_.customer_transaction_request_id' {propertyName=customerTransactionRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=cw.customerTransactionRequest,tableAlias=cashwithdr0_,className=com.spring.starter.model.CashWithdrawal,classAlias=cw}
          |  |  +-[ALIAS_REF] IdentNode: 'cashwithdr0_.cash_withdrawal_id' {alias=cw, className=com.spring.starter.model.CashWithdrawal, tableAlias=cashwithdr0_}
          |  |  \-[IDENT] IdentNode: 'customerTransactionRequest' {originalText=customerTransactionRequest}
          |  \-[IDENT] IdentNode: 'customerTransactionRequestId' {originalText=customerTransactionRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.653 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.653 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT cw FROM com.spring.starter.model.CashWithdrawal cw WHERE cw.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:12.654 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select cashwithdr0_.cash_withdrawal_id as cash_wit1_15_, cashwithdr0_.account_holder as account_2_15_, cashwithdr0_.account_no as account_3_15_, cashwithdr0_.amount as amount4_15_, cashwithdr0_.amount_in_words as amount_i5_15_, cashwithdr0_.branch_id as branch_12_15_, cashwithdr0_.cash_with_drawal_break_downid as cash_wi13_15_, cashwithdr0_.currency as currency6_15_, cashwithdr0_.customer_transaction_request_id as custome14_15_, cashwithdr0_.date as date7_15_, cashwithdr0_.identity as identity8_15_, cashwithdr0_.request_complete_date as request_9_15_, cashwithdr0_.signature_url as signatu10_15_, cashwithdr0_.status as status11_15_ from cash_withdrawal cashwithdr0_ where cashwithdr0_.customer_transaction_request_id=?
2018-11-06 22:45:12.654 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.688 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT cwrp FROM com.spring.starter.model.CashWithdrawalUpdateRecords cwrp WHERE cwrp.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:12.688 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.688 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CashWithdrawalUpdateRecords'
    |  |     \-[ALIAS] Node: 'cwrp'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'cwrp'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'cwrp'
          |  |  \-[IDENT] Node: 'customerTransactionRequest'
          |  \-[IDENT] Node: 'customerTransactionRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.688 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.688 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CashWithdrawalUpdateRecords (cwrp) -> cashwithdr0_
2018-11-06 22:45:12.689 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cwrp -> cashwithdr0_.cash_withdrawal_update_records_id
2018-11-06 22:45:12.689 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cwrp -> cashwithdr0_.cash_withdrawal_update_records_id
2018-11-06 22:45:12.689 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerTransactionRequest)
2018-11-06 22:45:12.689 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerTransactionRequestId in com.spring.starter.model.CashWithdrawalUpdateRecords does not require a join.
2018-11-06 22:45:12.689 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerTransactionRequest.customerTransactionRequestId'
2018-11-06 22:45:12.689 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cwrp.customerTransactionRequest -> cashwithdr0_.customer_transactions_request_id
2018-11-06 22:45:12.689 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest.customerTransactionRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.691 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cwrp.customerTransactionRequest.customerTransactionRequestId -> cashwithdr0_.customer_transactions_request_id
2018-11-06 22:45:12.691 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.691 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} cashwithdr0_.cash_withdrawal_update_records_id ) ( FromClause{level=1} cash_withdrawal_update_records cashwithdr0_ ) ( WHERE ( = ( cashwithdr0_.customer_transactions_request_id ( cashwithdr0_.customer_transactions_request_id cashwithdr0_.cash_withdrawal_update_records_id customerTransactionRequest ) customerTransactionRequestId ) ? ) ) )
2018-11-06 22:45:12.692 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [cash_withdrawal_update_records cashwithdr0_]
2018-11-06 22:45:12.692 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.692 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cash_withdrawal_update_records)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cashwithdr0_.cash_withdrawal_update_records_id as cash_wit1_19_' {alias=cwrp, className=com.spring.starter.model.CashWithdrawalUpdateRecords, tableAlias=cashwithdr0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cashwithdr0_.comment as comment2_19_, cashwithdr0_.customer_transactions_request_id as customer4_19_, cashwithdr0_.signature_url as signatur3_19_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cwrp], fromElementByTableAlias=[cashwithdr0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'cash_withdrawal_update_records cashwithdr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cwrp,role=null,tableName=cash_withdrawal_update_records,tableAlias=cashwithdr0_,origin=null,columns={,className=com.spring.starter.model.CashWithdrawalUpdateRecords}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'cashwithdr0_.customer_transactions_request_id' {propertyName=customerTransactionRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=cwrp.customerTransactionRequest.customerTransactionRequestId,tableAlias=cashwithdr0_,className=com.spring.starter.model.CashWithdrawalUpdateRecords,classAlias=cwrp}
          |  +-[DOT] DotNode: 'cashwithdr0_.customer_transactions_request_id' {propertyName=customerTransactionRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=cwrp.customerTransactionRequest,tableAlias=cashwithdr0_,className=com.spring.starter.model.CashWithdrawalUpdateRecords,classAlias=cwrp}
          |  |  +-[ALIAS_REF] IdentNode: 'cashwithdr0_.cash_withdrawal_update_records_id' {alias=cwrp, className=com.spring.starter.model.CashWithdrawalUpdateRecords, tableAlias=cashwithdr0_}
          |  |  \-[IDENT] IdentNode: 'customerTransactionRequest' {originalText=customerTransactionRequest}
          |  \-[IDENT] IdentNode: 'customerTransactionRequestId' {originalText=customerTransactionRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.692 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.693 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT cwrp FROM com.spring.starter.model.CashWithdrawalUpdateRecords cwrp WHERE cwrp.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:12.693 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select cashwithdr0_.cash_withdrawal_update_records_id as cash_wit1_19_, cashwithdr0_.comment as comment2_19_, cashwithdr0_.customer_transactions_request_id as customer4_19_, cashwithdr0_.signature_url as signatur3_19_ from cash_withdrawal_update_records cashwithdr0_ where cashwithdr0_.customer_transactions_request_id=?
2018-11-06 22:45:12.693 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.705 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT b FROM com.spring.starter.model.CashWithDrawalBreakDown b WHERE b.cashWithdrawal.cashWithdrawalId =:cashWithdrawalId
2018-11-06 22:45:12.705 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.706 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CashWithDrawalBreakDown'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'b'
          |  |  \-[IDENT] Node: 'cashWithdrawal'
          |  \-[IDENT] Node: 'cashWithdrawalId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'cashWithdrawalId'

2018-11-06 22:45:12.706 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.706 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CashWithDrawalBreakDown (b) -> cashwithdr0_
2018-11-06 22:45:12.706 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b -> cashwithdr0_.cash_with_drawal_break_down_id
2018-11-06 22:45:12.706 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b -> cashwithdr0_.cash_with_drawal_break_down_id
2018-11-06 22:45:12.706 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : cashWithdrawal -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CashWithdrawal)
2018-11-06 22:45:12.706 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property cashWithdrawalId in com.spring.starter.model.CashWithDrawalBreakDown does not require a join.
2018-11-06 22:45:12.706 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'cashWithdrawal.cashWithdrawalId'
2018-11-06 22:45:12.706 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b.cashWithdrawal -> cashwithdr0_.bill_payment_id
2018-11-06 22:45:12.706 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : cashWithdrawal.cashWithdrawalId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.706 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b.cashWithdrawal.cashWithdrawalId -> cashwithdr0_.bill_payment_id
2018-11-06 22:45:12.706 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.706 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} cashwithdr0_.cash_with_drawal_break_down_id ) ( FromClause{level=1} cash_withdrawal_break_down cashwithdr0_ ) ( WHERE ( = ( cashwithdr0_.bill_payment_id ( cashwithdr0_.bill_payment_id cashwithdr0_.cash_with_drawal_break_down_id cashWithdrawal ) cashWithdrawalId ) ? ) ) )
2018-11-06 22:45:12.707 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [cash_withdrawal_break_down cashwithdr0_]
2018-11-06 22:45:12.707 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.707 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cash_withdrawal_break_down)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cashwithdr0_.cash_with_drawal_break_down_id as cash_wit1_16_' {alias=b, className=com.spring.starter.model.CashWithDrawalBreakDown, tableAlias=cashwithdr0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cashwithdr0_.ammount as ammount2_16_, cashwithdr0_.bill_payment_id as bill_pa13_16_, cashwithdr0_.comment as comment3_16_, cashwithdr0_.value_of100notes as value_of4_16_, cashwithdr0_.value_of10notes as value_of5_16_, cashwithdr0_.value_of2000notes as value_of6_16_, cashwithdr0_.value_of20notes as value_of7_16_, cashwithdr0_.value_of5000notes as value_of8_16_, cashwithdr0_.value_of500notes as value_of9_16_, cashwithdr0_.value_of50notes as value_o10_16_, cashwithdr0_.value_ofcoins as value_o11_16_, cashwithdr0_.valueof1000notes as valueof12_16_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[cashwithdr0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'cash_withdrawal_break_down cashwithdr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=cash_withdrawal_break_down,tableAlias=cashwithdr0_,origin=null,columns={,className=com.spring.starter.model.CashWithDrawalBreakDown}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'cashwithdr0_.bill_payment_id' {propertyName=cashWithdrawalId,dereferenceType=PRIMITIVE,getPropertyPath=cashWithdrawal.cashWithdrawalId,path=b.cashWithdrawal.cashWithdrawalId,tableAlias=cashwithdr0_,className=com.spring.starter.model.CashWithDrawalBreakDown,classAlias=b}
          |  +-[DOT] DotNode: 'cashwithdr0_.bill_payment_id' {propertyName=cashWithdrawalId,dereferenceType=UNKNOWN,getPropertyPath=cashWithdrawal.cashWithdrawalId,path=b.cashWithdrawal,tableAlias=cashwithdr0_,className=com.spring.starter.model.CashWithDrawalBreakDown,classAlias=b}
          |  |  +-[ALIAS_REF] IdentNode: 'cashwithdr0_.cash_with_drawal_break_down_id' {alias=b, className=com.spring.starter.model.CashWithDrawalBreakDown, tableAlias=cashwithdr0_}
          |  |  \-[IDENT] IdentNode: 'cashWithdrawal' {originalText=cashWithdrawal}
          |  \-[IDENT] IdentNode: 'cashWithdrawalId' {originalText=cashWithdrawalId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=cashWithdrawalId, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.707 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.707 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT b FROM com.spring.starter.model.CashWithDrawalBreakDown b WHERE b.cashWithdrawal.cashWithdrawalId =:cashWithdrawalId
2018-11-06 22:45:12.707 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select cashwithdr0_.cash_with_drawal_break_down_id as cash_wit1_16_, cashwithdr0_.ammount as ammount2_16_, cashwithdr0_.bill_payment_id as bill_pa13_16_, cashwithdr0_.comment as comment3_16_, cashwithdr0_.value_of100notes as value_of4_16_, cashwithdr0_.value_of10notes as value_of5_16_, cashwithdr0_.value_of2000notes as value_of6_16_, cashwithdr0_.value_of20notes as value_of7_16_, cashwithdr0_.value_of5000notes as value_of8_16_, cashwithdr0_.value_of500notes as value_of9_16_, cashwithdr0_.value_of50notes as value_o10_16_, cashwithdr0_.value_ofcoins as value_o11_16_, cashwithdr0_.valueof1000notes as valueof12_16_ from cash_withdrawal_break_down cashwithdr0_ where cashwithdr0_.bill_payment_id=?
2018-11-06 22:45:12.708 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.734 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT cpm FROM com.spring.starter.model.ChangePermanentMail cpm WHERE cpm.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.734 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.734 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'ChangePermanentMail'
    |  |     \-[ALIAS] Node: 'cpm'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'cpm'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'cpm'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.734 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.734 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.ChangePermanentMail (cpm) -> changeperm0_
2018-11-06 22:45:12.735 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cpm -> changeperm0_.change_permanent_mail_id
2018-11-06 22:45:12.735 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cpm -> changeperm0_.change_permanent_mail_id
2018-11-06 22:45:12.735 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:12.735 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.ChangePermanentMail does not require a join.
2018-11-06 22:45:12.735 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:12.735 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cpm.customerServiceRequest -> changeperm0_.csr_id
2018-11-06 22:45:12.735 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.735 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cpm.customerServiceRequest.customerServiceRequestId -> changeperm0_.csr_id
2018-11-06 22:45:12.738 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.738 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} changeperm0_.change_permanent_mail_id ) ( FromClause{level=1} change_permanent_mail changeperm0_ ) ( WHERE ( = ( changeperm0_.csr_id ( changeperm0_.csr_id changeperm0_.change_permanent_mail_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:12.738 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [change_permanent_mail changeperm0_]
2018-11-06 22:45:12.738 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.738 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (change_permanent_mail)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'changeperm0_.change_permanent_mail_id as change_p1_21_' {alias=cpm, className=com.spring.starter.model.ChangePermanentMail, tableAlias=changeperm0_}
    |  \-[SQL_TOKEN] SqlFragment: 'changeperm0_.city as city2_21_, changeperm0_.country as country3_21_, changeperm0_.csr_id as csr_id12_21_, changeperm0_.document_type as document4_21_, changeperm0_.document_url as document5_21_, changeperm0_.issuing_authority as issuing_6_21_, changeperm0_.new_permanent_address as new_perm7_21_, changeperm0_.place_of_issue as place_of8_21_, changeperm0_.postal_code as postal_c9_21_, changeperm0_.soft_reject as soft_re10_21_, changeperm0_.state_or_province as state_o11_21_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cpm], fromElementByTableAlias=[changeperm0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'change_permanent_mail changeperm0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cpm,role=null,tableName=change_permanent_mail,tableAlias=changeperm0_,origin=null,columns={,className=com.spring.starter.model.ChangePermanentMail}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'changeperm0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=cpm.customerServiceRequest.customerServiceRequestId,tableAlias=changeperm0_,className=com.spring.starter.model.ChangePermanentMail,classAlias=cpm}
          |  +-[DOT] DotNode: 'changeperm0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=cpm.customerServiceRequest,tableAlias=changeperm0_,className=com.spring.starter.model.ChangePermanentMail,classAlias=cpm}
          |  |  +-[ALIAS_REF] IdentNode: 'changeperm0_.change_permanent_mail_id' {alias=cpm, className=com.spring.starter.model.ChangePermanentMail, tableAlias=changeperm0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.738 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.738 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT cpm FROM com.spring.starter.model.ChangePermanentMail cpm WHERE cpm.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.738 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select changeperm0_.change_permanent_mail_id as change_p1_21_, changeperm0_.city as city2_21_, changeperm0_.country as country3_21_, changeperm0_.csr_id as csr_id12_21_, changeperm0_.document_type as document4_21_, changeperm0_.document_url as document5_21_, changeperm0_.issuing_authority as issuing_6_21_, changeperm0_.new_permanent_address as new_perm7_21_, changeperm0_.place_of_issue as place_of8_21_, changeperm0_.postal_code as postal_c9_21_, changeperm0_.soft_reject as soft_re10_21_, changeperm0_.state_or_province as state_o11_21_ from change_permanent_mail changeperm0_ where changeperm0_.csr_id=?
2018-11-06 22:45:12.739 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.756 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT cp FROM com.spring.starter.model.CrediitCardPeyment cp WHERE cp.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:12.756 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.756 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CrediitCardPeyment'
    |  |     \-[ALIAS] Node: 'cp'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'cp'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'cp'
          |  |  \-[IDENT] Node: 'customerTransactionRequest'
          |  \-[IDENT] Node: 'customerTransactionRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.757 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.757 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CrediitCardPeyment (cp) -> crediitcar0_
2018-11-06 22:45:12.757 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cp -> crediitcar0_.crediit_card_peyment_id
2018-11-06 22:45:12.757 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cp -> crediitcar0_.crediit_card_peyment_id
2018-11-06 22:45:12.757 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerTransactionRequest)
2018-11-06 22:45:12.757 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerTransactionRequestId in com.spring.starter.model.CrediitCardPeyment does not require a join.
2018-11-06 22:45:12.757 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerTransactionRequest.customerTransactionRequestId'
2018-11-06 22:45:12.757 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cp.customerTransactionRequest -> crediitcar0_.customer_transaction_request_id
2018-11-06 22:45:12.757 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest.customerTransactionRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.761 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cp.customerTransactionRequest.customerTransactionRequestId -> crediitcar0_.customer_transaction_request_id
2018-11-06 22:45:12.761 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.761 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} crediitcar0_.crediit_card_peyment_id ) ( FromClause{level=1} crediit_card_peyment crediitcar0_ ) ( WHERE ( = ( crediitcar0_.customer_transaction_request_id ( crediitcar0_.customer_transaction_request_id crediitcar0_.crediit_card_peyment_id customerTransactionRequest ) customerTransactionRequestId ) ? ) ) )
2018-11-06 22:45:12.761 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [crediit_card_peyment crediitcar0_]
2018-11-06 22:45:12.761 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.761 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (crediit_card_peyment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'crediitcar0_.crediit_card_peyment_id as crediit_1_24_' {alias=cp, className=com.spring.starter.model.CrediitCardPeyment, tableAlias=crediitcar0_}
    |  \-[SQL_TOKEN] SqlFragment: 'crediitcar0_.ammount as ammount2_24_, crediitcar0_.bank_id as bank_id20_24_, crediitcar0_.branch_id as branch_21_24_, crediitcar0_.chequenumber as chequenu3_24_, crediitcar0_.credit_card_payment_break_down_id as credit_22_24_, crediitcar0_.customer_transaction_request_id as custome23_24_, crediitcar0_.date as date4_24_, crediitcar0_.paymennt_method as paymennt5_24_, crediitcar0_.request_complete_date as request_6_24_, crediitcar0_.signature_url as signatur7_24_, crediitcar0_.status as status8_24_, crediitcar0_.telephone_number as telephon9_24_, crediitcar0_.total as total10_24_, crediitcar0_.value_of100notes as value_o11_24_, crediitcar0_.value_of10notes as value_o12_24_, crediitcar0_.value_of2000notes as value_o13_24_, crediitcar0_.value_of20notes as value_o14_24_, crediitcar0_.value_of5000notes as value_o15_24_, crediitcar0_.value_of500notes as value_o16_24_, crediitcar0_.value_of50notes as value_o17_24_, crediitcar0_.value_ofcoins as value_o18_24_, crediitcar0_.valueof1000notes as valueof19_24_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cp], fromElementByTableAlias=[crediitcar0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'crediit_card_peyment crediitcar0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cp,role=null,tableName=crediit_card_peyment,tableAlias=crediitcar0_,origin=null,columns={,className=com.spring.starter.model.CrediitCardPeyment}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'crediitcar0_.customer_transaction_request_id' {propertyName=customerTransactionRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=cp.customerTransactionRequest.customerTransactionRequestId,tableAlias=crediitcar0_,className=com.spring.starter.model.CrediitCardPeyment,classAlias=cp}
          |  +-[DOT] DotNode: 'crediitcar0_.customer_transaction_request_id' {propertyName=customerTransactionRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=cp.customerTransactionRequest,tableAlias=crediitcar0_,className=com.spring.starter.model.CrediitCardPeyment,classAlias=cp}
          |  |  +-[ALIAS_REF] IdentNode: 'crediitcar0_.crediit_card_peyment_id' {alias=cp, className=com.spring.starter.model.CrediitCardPeyment, tableAlias=crediitcar0_}
          |  |  \-[IDENT] IdentNode: 'customerTransactionRequest' {originalText=customerTransactionRequest}
          |  \-[IDENT] IdentNode: 'customerTransactionRequestId' {originalText=customerTransactionRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.762 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.762 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT cp FROM com.spring.starter.model.CrediitCardPeyment cp WHERE cp.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:12.762 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select crediitcar0_.crediit_card_peyment_id as crediit_1_24_, crediitcar0_.ammount as ammount2_24_, crediitcar0_.bank_id as bank_id20_24_, crediitcar0_.branch_id as branch_21_24_, crediitcar0_.chequenumber as chequenu3_24_, crediitcar0_.credit_card_payment_break_down_id as credit_22_24_, crediitcar0_.customer_transaction_request_id as custome23_24_, crediitcar0_.date as date4_24_, crediitcar0_.paymennt_method as paymennt5_24_, crediitcar0_.request_complete_date as request_6_24_, crediitcar0_.signature_url as signatur7_24_, crediitcar0_.status as status8_24_, crediitcar0_.telephone_number as telephon9_24_, crediitcar0_.total as total10_24_, crediitcar0_.value_of100notes as value_o11_24_, crediitcar0_.value_of10notes as value_o12_24_, crediitcar0_.value_of2000notes as value_o13_24_, crediitcar0_.value_of20notes as value_o14_24_, crediitcar0_.value_of5000notes as value_o15_24_, crediitcar0_.value_of500notes as value_o16_24_, crediitcar0_.value_of50notes as value_o17_24_, crediitcar0_.value_ofcoins as value_o18_24_, crediitcar0_.valueof1000notes as valueof19_24_ from crediit_card_peyment crediitcar0_ where crediitcar0_.customer_transaction_request_id=?
2018-11-06 22:45:12.762 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.773 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT b FROM com.spring.starter.model.CreditCardPaymentBreakDown b WHERE b.crediitCardPeyment.crediitCardPeymentId =:crediitCardPeymentId
2018-11-06 22:45:12.773 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.774 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CreditCardPaymentBreakDown'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'b'
          |  |  \-[IDENT] Node: 'crediitCardPeyment'
          |  \-[IDENT] Node: 'crediitCardPeymentId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'crediitCardPeymentId'

2018-11-06 22:45:12.774 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.774 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CreditCardPaymentBreakDown (b) -> creditcard0_
2018-11-06 22:45:12.774 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b -> creditcard0_.credit_card_payment_break_down_id
2018-11-06 22:45:12.774 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b -> creditcard0_.credit_card_payment_break_down_id
2018-11-06 22:45:12.774 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : crediitCardPeyment -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CrediitCardPeyment)
2018-11-06 22:45:12.774 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property crediitCardPeymentId in com.spring.starter.model.CreditCardPaymentBreakDown does not require a join.
2018-11-06 22:45:12.774 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'crediitCardPeyment.crediitCardPeymentId'
2018-11-06 22:45:12.774 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b.crediitCardPeyment -> creditcard0_.crediit_card_peyment_id
2018-11-06 22:45:12.774 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : crediitCardPeyment.crediitCardPeymentId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.774 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b.crediitCardPeyment.crediitCardPeymentId -> creditcard0_.crediit_card_peyment_id
2018-11-06 22:45:12.778 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.778 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} creditcard0_.credit_card_payment_break_down_id ) ( FromClause{level=1} credit_card_payment_break_down creditcard0_ ) ( WHERE ( = ( creditcard0_.crediit_card_peyment_id ( creditcard0_.crediit_card_peyment_id creditcard0_.credit_card_payment_break_down_id crediitCardPeyment ) crediitCardPeymentId ) ? ) ) )
2018-11-06 22:45:12.778 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [credit_card_payment_break_down creditcard0_]
2018-11-06 22:45:12.778 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.778 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (credit_card_payment_break_down)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'creditcard0_.credit_card_payment_break_down_id as credit_c1_25_' {alias=b, className=com.spring.starter.model.CreditCardPaymentBreakDown, tableAlias=creditcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'creditcard0_.amount as amount2_25_, creditcard0_.comment as comment3_25_, creditcard0_.crediit_card_peyment_id as crediit13_25_, creditcard0_.value_of100notes as value_of4_25_, creditcard0_.value_of10notes as value_of5_25_, creditcard0_.value_of2000notes as value_of6_25_, creditcard0_.value_of20notes as value_of7_25_, creditcard0_.value_of5000notes as value_of8_25_, creditcard0_.value_of500notes as value_of9_25_, creditcard0_.value_of50notes as value_o10_25_, creditcard0_.value_ofcoins as value_o11_25_, creditcard0_.valueof1000notes as valueof12_25_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[creditcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'credit_card_payment_break_down creditcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=credit_card_payment_break_down,tableAlias=creditcard0_,origin=null,columns={,className=com.spring.starter.model.CreditCardPaymentBreakDown}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'creditcard0_.crediit_card_peyment_id' {propertyName=crediitCardPeymentId,dereferenceType=PRIMITIVE,getPropertyPath=crediitCardPeyment.crediitCardPeymentId,path=b.crediitCardPeyment.crediitCardPeymentId,tableAlias=creditcard0_,className=com.spring.starter.model.CreditCardPaymentBreakDown,classAlias=b}
          |  +-[DOT] DotNode: 'creditcard0_.crediit_card_peyment_id' {propertyName=crediitCardPeymentId,dereferenceType=UNKNOWN,getPropertyPath=crediitCardPeyment.crediitCardPeymentId,path=b.crediitCardPeyment,tableAlias=creditcard0_,className=com.spring.starter.model.CreditCardPaymentBreakDown,classAlias=b}
          |  |  +-[ALIAS_REF] IdentNode: 'creditcard0_.credit_card_payment_break_down_id' {alias=b, className=com.spring.starter.model.CreditCardPaymentBreakDown, tableAlias=creditcard0_}
          |  |  \-[IDENT] IdentNode: 'crediitCardPeyment' {originalText=crediitCardPeyment}
          |  \-[IDENT] IdentNode: 'crediitCardPeymentId' {originalText=crediitCardPeymentId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=crediitCardPeymentId, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.778 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.778 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT b FROM com.spring.starter.model.CreditCardPaymentBreakDown b WHERE b.crediitCardPeyment.crediitCardPeymentId =:crediitCardPeymentId
2018-11-06 22:45:12.778 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select creditcard0_.credit_card_payment_break_down_id as credit_c1_25_, creditcard0_.amount as amount2_25_, creditcard0_.comment as comment3_25_, creditcard0_.crediit_card_peyment_id as crediit13_25_, creditcard0_.value_of100notes as value_of4_25_, creditcard0_.value_of10notes as value_of5_25_, creditcard0_.value_of2000notes as value_of6_25_, creditcard0_.value_of20notes as value_of7_25_, creditcard0_.value_of5000notes as value_of8_25_, creditcard0_.value_of500notes as value_of9_25_, creditcard0_.value_of50notes as value_o10_25_, creditcard0_.value_ofcoins as value_o11_25_, creditcard0_.valueof1000notes as valueof12_25_ from credit_card_payment_break_down creditcard0_ where creditcard0_.crediit_card_peyment_id=?
2018-11-06 22:45:12.779 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.835 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c FROM com.spring.starter.model.Customer c WHERE c.identification=?1
2018-11-06 22:45:12.835 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.836 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'identification'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.836 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.836 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.Customer (c) -> customer0_
2018-11-06 22:45:12.836 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> customer0_.customer_id
2018-11-06 22:45:12.836 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> customer0_.customer_id
2018-11-06 22:45:12.836 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : identification -> org.hibernate.type.StringType@f620100
2018-11-06 22:45:12.836 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.identification -> customer0_.identification
2018-11-06 22:45:12.836 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.836 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} customer0_.customer_id ) ( FromClause{level=1} customer customer0_ ) ( WHERE ( = ( customer0_.identification customer0_.customer_id identification ) ? ) ) )
2018-11-06 22:45:12.836 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [customer customer0_]
2018-11-06 22:45:12.836 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.836 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.customer_id as customer1_30_' {alias=c, className=com.spring.starter.model.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.date as date2_30_, customer0_.identification as identifi3_30_, customer0_.mobile_no as mobile_n4_30_, customer0_.name as name5_30_, customer0_.status as status6_30_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=com.spring.starter.model.Customer}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.identification' {propertyName=identification,dereferenceType=PRIMITIVE,getPropertyPath=identification,path=c.identification,tableAlias=customer0_,className=com.spring.starter.model.Customer,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'customer0_.customer_id' {alias=c, className=com.spring.starter.model.Customer, tableAlias=customer0_}
          |  \-[IDENT] IdentNode: 'identification' {originalText=identification}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@f620100}

2018-11-06 22:45:12.837 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.837 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c FROM com.spring.starter.model.Customer c WHERE c.identification=?1
2018-11-06 22:45:12.837 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select customer0_.customer_id as customer1_30_, customer0_.date as date2_30_, customer0_.identification as identifi3_30_, customer0_.mobile_no as mobile_n4_30_, customer0_.name as name5_30_, customer0_.status as status6_30_ from customer customer0_ where customer0_.identification=?
2018-11-06 22:45:12.837 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.839 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c FROM com.spring.starter.model.Customer c WHERE date(c.date)=?1 and c.status = 0
2018-11-06 22:45:12.839 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.839 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Customer'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[METHOD_CALL] Node: '('
          |  |  +-[IDENT] Node: 'date'
          |  |  \-[EXPR_LIST] Node: 'exprList'
          |  |     \-[DOT] Node: '.'
          |  |        +-[IDENT] Node: 'c'
          |  |        \-[IDENT] Node: 'date'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'c'
             |  \-[IDENT] Node: 'status'
             \-[NUM_INT] Node: '0'

2018-11-06 22:45:12.839 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.839 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.Customer (c) -> customer0_
2018-11-06 22:45:12.839 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> customer0_.customer_id
2018-11-06 22:45:12.840 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> customer0_.customer_id
2018-11-06 22:45:12.840 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : date -> org.hibernate.type.TimestampType@5f023e8d
2018-11-06 22:45:12.840 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.date -> customer0_.date
2018-11-06 22:45:12.840 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> customer0_.customer_id
2018-11-06 22:45:12.840 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : status -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.840 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.status -> customer0_.status
2018-11-06 22:45:12.840 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.844 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} customer0_.customer_id ) ( FromClause{level=1} customer customer0_ ) ( WHERE ( and ( = ( ( date ( exprList ( customer0_.date customer0_.customer_id date ) ) ) ? ) ( = ( customer0_.status customer0_.customer_id status ) 0 ) ) ) )
2018-11-06 22:45:12.844 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [customer customer0_]
2018-11-06 22:45:12.844 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.844 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.customer_id as customer1_30_' {alias=c, className=com.spring.starter.model.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.date as date2_30_, customer0_.identification as identifi3_30_, customer0_.mobile_no as mobile_n4_30_, customer0_.name as name5_30_, customer0_.status as status6_30_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=customer,tableAlias=customer0_,origin=null,columns={,className=com.spring.starter.model.Customer}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[METHOD_CALL] MethodNode: '('
          |  |  +-[METHOD_NAME] IdentNode: 'date' {originalText=date}
          |  |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     \-[DOT] DotNode: 'customer0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=c.date,tableAlias=customer0_,className=com.spring.starter.model.Customer,classAlias=c}
          |  |        +-[ALIAS_REF] IdentNode: 'customer0_.customer_id' {alias=c, className=com.spring.starter.model.Customer, tableAlias=customer0_}
          |  |        \-[IDENT] IdentNode: 'date' {originalText=date}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.DateType@15167eb1}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'customer0_.status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=c.status,tableAlias=customer0_,className=com.spring.starter.model.Customer,classAlias=c}
             |  +-[ALIAS_REF] IdentNode: 'customer0_.customer_id' {alias=c, className=com.spring.starter.model.Customer, tableAlias=customer0_}
             |  \-[IDENT] IdentNode: 'status' {originalText=status}
             \-[NUM_INT] LiteralNode: '0'

2018-11-06 22:45:12.844 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.844 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c FROM com.spring.starter.model.Customer c WHERE date(c.date)=?1 and c.status = 0
2018-11-06 22:45:12.844 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select customer0_.customer_id as customer1_30_, customer0_.date as date2_30_, customer0_.identification as identifi3_30_, customer0_.mobile_no as mobile_n4_30_, customer0_.name as name5_30_, customer0_.status as status6_30_ from customer customer0_ where date(customer0_.date)=? and customer0_.status=0
2018-11-06 22:45:12.844 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.879 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT if FROM com.spring.starter.model.IdentificationForm if WHERE if.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.879 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.879 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'IdentificationForm'
    |  |     \-[ALIAS] Node: 'if'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'if'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'if'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.879 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.879 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.IdentificationForm (if) -> identifica0_
2018-11-06 22:45:12.879 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : if -> identifica0_.change_identification_form_id
2018-11-06 22:45:12.879 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : if -> identifica0_.change_identification_form_id
2018-11-06 22:45:12.879 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:12.879 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.IdentificationForm does not require a join.
2018-11-06 22:45:12.879 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:12.879 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : if.customerServiceRequest -> identifica0_.csr_id
2018-11-06 22:45:12.879 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.879 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : if.customerServiceRequest.customerServiceRequestId -> identifica0_.csr_id
2018-11-06 22:45:12.881 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.881 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} identifica0_.change_identification_form_id ) ( FromClause{level=1} identification_form identifica0_ ) ( WHERE ( = ( identifica0_.csr_id ( identifica0_.csr_id identifica0_.change_identification_form_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:12.881 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [identification_form identifica0_]
2018-11-06 22:45:12.881 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.881 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (identification_form)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'identifica0_.change_identification_form_id as change_i1_58_' {alias=if, className=com.spring.starter.model.IdentificationForm, tableAlias=identifica0_}
    |  \-[SQL_TOKEN] SqlFragment: 'identifica0_.csr_id as csr_id5_58_, identifica0_.document_url as document2_58_, identifica0_.identification as identifi3_58_, identifica0_.soft_reject as soft_rej4_58_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[if], fromElementByTableAlias=[identifica0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'identification_form identifica0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=if,role=null,tableName=identification_form,tableAlias=identifica0_,origin=null,columns={,className=com.spring.starter.model.IdentificationForm}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'identifica0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=if.customerServiceRequest.customerServiceRequestId,tableAlias=identifica0_,className=com.spring.starter.model.IdentificationForm,classAlias=if}
          |  +-[DOT] DotNode: 'identifica0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=if.customerServiceRequest,tableAlias=identifica0_,className=com.spring.starter.model.IdentificationForm,classAlias=if}
          |  |  +-[ALIAS_REF] IdentNode: 'identifica0_.change_identification_form_id' {alias=if, className=com.spring.starter.model.IdentificationForm, tableAlias=identifica0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.881 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.881 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT if FROM com.spring.starter.model.IdentificationForm if WHERE if.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.881 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select identifica0_.change_identification_form_id as change_i1_58_, identifica0_.csr_id as csr_id5_58_, identifica0_.document_url as document2_58_, identifica0_.identification as identifi3_58_, identifica0_.soft_reject as soft_rej4_58_ from identification_form identifica0_ where identifica0_.csr_id=?
2018-11-06 22:45:12.881 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.890 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT cd FROM com.spring.starter.model.ContactDetails cd WHERE cd.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.890 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.891 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'ContactDetails'
    |  |     \-[ALIAS] Node: 'cd'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'cd'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'cd'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.891 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.891 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.ContactDetails (cd) -> contactdet0_
2018-11-06 22:45:12.891 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cd -> contactdet0_.contact_details_id
2018-11-06 22:45:12.891 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cd -> contactdet0_.contact_details_id
2018-11-06 22:45:12.891 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:12.891 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.ContactDetails does not require a join.
2018-11-06 22:45:12.891 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:12.891 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cd.customerServiceRequest -> contactdet0_.csr_id
2018-11-06 22:45:12.891 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.891 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cd.customerServiceRequest.customerServiceRequestId -> contactdet0_.csr_id
2018-11-06 22:45:12.893 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.893 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} contactdet0_.contact_details_id ) ( FromClause{level=1} contact_details contactdet0_ ) ( WHERE ( = ( contactdet0_.csr_id ( contactdet0_.csr_id contactdet0_.contact_details_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:12.893 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [contact_details contactdet0_]
2018-11-06 22:45:12.893 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.893 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (contact_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'contactdet0_.contact_details_id as contact_1_23_' {alias=cd, className=com.spring.starter.model.ContactDetails, tableAlias=contactdet0_}
    |  \-[SQL_TOKEN] SqlFragment: 'contactdet0_.csr_id as csr_id7_23_, contactdet0_.email as email2_23_, contactdet0_.mobile_number as mobile_n3_23_, contactdet0_.office_number as office_n4_23_, contactdet0_.residence_number as residenc5_23_, contactdet0_.soft_reject as soft_rej6_23_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cd], fromElementByTableAlias=[contactdet0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'contact_details contactdet0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cd,role=null,tableName=contact_details,tableAlias=contactdet0_,origin=null,columns={,className=com.spring.starter.model.ContactDetails}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'contactdet0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=cd.customerServiceRequest.customerServiceRequestId,tableAlias=contactdet0_,className=com.spring.starter.model.ContactDetails,classAlias=cd}
          |  +-[DOT] DotNode: 'contactdet0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=cd.customerServiceRequest,tableAlias=contactdet0_,className=com.spring.starter.model.ContactDetails,classAlias=cd}
          |  |  +-[ALIAS_REF] IdentNode: 'contactdet0_.contact_details_id' {alias=cd, className=com.spring.starter.model.ContactDetails, tableAlias=contactdet0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.893 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.893 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT cd FROM com.spring.starter.model.ContactDetails cd WHERE cd.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.893 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select contactdet0_.contact_details_id as contact_1_23_, contactdet0_.csr_id as csr_id7_23_, contactdet0_.email as email2_23_, contactdet0_.mobile_number as mobile_n3_23_, contactdet0_.office_number as office_n4_23_, contactdet0_.residence_number as residenc5_23_, contactdet0_.soft_reject as soft_rej6_23_ from contact_details contactdet0_ where contactdet0_.csr_id=?
2018-11-06 22:45:12.893 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.913 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT eor FROM com.spring.starter.model.EffectOrRevokePayment eor WHERE eor.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.913 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.913 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'EffectOrRevokePayment'
    |  |     \-[ALIAS] Node: 'eor'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'eor'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'eor'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.913 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.913 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.EffectOrRevokePayment (eor) -> effectorre0_
2018-11-06 22:45:12.914 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : eor -> effectorre0_.effect_or_revoke_payment_id
2018-11-06 22:45:12.914 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : eor -> effectorre0_.effect_or_revoke_payment_id
2018-11-06 22:45:12.914 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:12.914 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.EffectOrRevokePayment does not require a join.
2018-11-06 22:45:12.914 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:12.914 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : eor.customerServiceRequest -> effectorre0_.customer_service_request_id
2018-11-06 22:45:12.914 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.914 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : eor.customerServiceRequest.customerServiceRequestId -> effectorre0_.customer_service_request_id
2018-11-06 22:45:12.915 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.915 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} effectorre0_.effect_or_revoke_payment_id ) ( FromClause{level=1} effect_or_revoke_payment effectorre0_ ) ( WHERE ( = ( effectorre0_.customer_service_request_id ( effectorre0_.customer_service_request_id effectorre0_.effect_or_revoke_payment_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:12.915 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [effect_or_revoke_payment effectorre0_]
2018-11-06 22:45:12.915 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.915 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (effect_or_revoke_payment)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'effectorre0_.effect_or_revoke_payment_id as effect_o1_38_' {alias=eor, className=com.spring.starter.model.EffectOrRevokePayment, tableAlias=effectorre0_}
    |  \-[SQL_TOKEN] SqlFragment: 'effectorre0_.customer_account_no as customer2_38_, effectorre0_.customer_service_request_id as customer5_38_, effectorre0_.soft_reject as soft_rej3_38_, effectorre0_.status as status4_38_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[eor], fromElementByTableAlias=[effectorre0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'effect_or_revoke_payment effectorre0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=eor,role=null,tableName=effect_or_revoke_payment,tableAlias=effectorre0_,origin=null,columns={,className=com.spring.starter.model.EffectOrRevokePayment}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'effectorre0_.customer_service_request_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=eor.customerServiceRequest.customerServiceRequestId,tableAlias=effectorre0_,className=com.spring.starter.model.EffectOrRevokePayment,classAlias=eor}
          |  +-[DOT] DotNode: 'effectorre0_.customer_service_request_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=eor.customerServiceRequest,tableAlias=effectorre0_,className=com.spring.starter.model.EffectOrRevokePayment,classAlias=eor}
          |  |  +-[ALIAS_REF] IdentNode: 'effectorre0_.effect_or_revoke_payment_id' {alias=eor, className=com.spring.starter.model.EffectOrRevokePayment, tableAlias=effectorre0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.915 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.915 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT eor FROM com.spring.starter.model.EffectOrRevokePayment eor WHERE eor.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.915 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select effectorre0_.effect_or_revoke_payment_id as effect_o1_38_, effectorre0_.customer_account_no as customer2_38_, effectorre0_.customer_service_request_id as customer5_38_, effectorre0_.soft_reject as soft_rej3_38_, effectorre0_.status as status4_38_ from effect_or_revoke_payment effectorre0_ where effectorre0_.customer_service_request_id=?
2018-11-06 22:45:12.915 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.946 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: select c from com.spring.starter.model.WithholdingFdCd  c where c.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.946 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.947 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'WithholdingFdCd'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'c'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.947 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.947 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.WithholdingFdCd (c) -> withholdin0_
2018-11-06 22:45:12.947 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> withholdin0_.withholding_fd_id
2018-11-06 22:45:12.947 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> withholdin0_.withholding_fd_id
2018-11-06 22:45:12.947 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:12.947 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.WithholdingFdCd does not require a join.
2018-11-06 22:45:12.947 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:12.947 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.customerServiceRequest -> withholdin0_.csr_id
2018-11-06 22:45:12.947 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.947 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.customerServiceRequest.customerServiceRequestId -> withholdin0_.csr_id
2018-11-06 22:45:12.947 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.947 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} withholdin0_.withholding_fd_id ) ( FromClause{level=1} withholding_fd_cd withholdin0_ ) ( where ( = ( withholdin0_.csr_id ( withholdin0_.csr_id withholdin0_.withholding_fd_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:12.948 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [withholding_fd_cd withholdin0_]
2018-11-06 22:45:12.948 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.948 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (withholding_fd_cd)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'withholdin0_.withholding_fd_id as withhold1_96_' {alias=c, className=com.spring.starter.model.WithholdingFdCd, tableAlias=withholdin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'withholdin0_.account_type as account_2_96_, withholdin0_.csr_id as csr_id5_96_, withholdin0_.maturity_date as maturity3_96_, withholdin0_.soft_reject as soft_rej4_96_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[withholdin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'withholding_fd_cd withholdin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=withholding_fd_cd,tableAlias=withholdin0_,origin=null,columns={,className=com.spring.starter.model.WithholdingFdCd}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'withholdin0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=c.customerServiceRequest.customerServiceRequestId,tableAlias=withholdin0_,className=com.spring.starter.model.WithholdingFdCd,classAlias=c}
          |  +-[DOT] DotNode: 'withholdin0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=c.customerServiceRequest,tableAlias=withholdin0_,className=com.spring.starter.model.WithholdingFdCd,classAlias=c}
          |  |  +-[ALIAS_REF] IdentNode: 'withholdin0_.withholding_fd_id' {alias=c, className=com.spring.starter.model.WithholdingFdCd, tableAlias=withholdin0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.948 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.948 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: select c from com.spring.starter.model.WithholdingFdCd  c where c.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.948 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select withholdin0_.withholding_fd_id as withhold1_96_, withholdin0_.account_type as account_2_96_, withholdin0_.csr_id as csr_id5_96_, withholdin0_.maturity_date as maturity3_96_, withholdin0_.soft_reject as soft_rej4_96_ from withholding_fd_cd withholdin0_ where withholdin0_.csr_id=?
2018-11-06 22:45:12.948 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.957 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: select c from com.spring.starter.model.OtherFdCdRelatedRequest  c where c.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.957 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.957 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'OtherFdCdRelatedRequest'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'c'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.958 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.958 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.OtherFdCdRelatedRequest (c) -> otherfdcdr0_
2018-11-06 22:45:12.958 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> otherfdcdr0_.related_req_id
2018-11-06 22:45:12.958 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> otherfdcdr0_.related_req_id
2018-11-06 22:45:12.958 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:12.958 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.OtherFdCdRelatedRequest does not require a join.
2018-11-06 22:45:12.958 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:12.958 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.customerServiceRequest -> otherfdcdr0_.csr_id
2018-11-06 22:45:12.958 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.958 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.customerServiceRequest.customerServiceRequestId -> otherfdcdr0_.csr_id
2018-11-06 22:45:12.962 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.962 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} otherfdcdr0_.related_req_id ) ( FromClause{level=1} other_fd_cd_related_request otherfdcdr0_ ) ( where ( = ( otherfdcdr0_.csr_id ( otherfdcdr0_.csr_id otherfdcdr0_.related_req_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:12.962 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [other_fd_cd_related_request otherfdcdr0_]
2018-11-06 22:45:12.962 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.962 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (other_fd_cd_related_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'otherfdcdr0_.related_req_id as related_1_69_' {alias=c, className=com.spring.starter.model.OtherFdCdRelatedRequest, tableAlias=otherfdcdr0_}
    |  \-[SQL_TOKEN] SqlFragment: 'otherfdcdr0_.account_no as account_2_69_, otherfdcdr0_.account_type as account_3_69_, otherfdcdr0_.csr_id as csr_id7_69_, otherfdcdr0_.date as date4_69_, otherfdcdr0_.request as request5_69_, otherfdcdr0_.soft_reject as soft_rej6_69_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[otherfdcdr0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'other_fd_cd_related_request otherfdcdr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=other_fd_cd_related_request,tableAlias=otherfdcdr0_,origin=null,columns={,className=com.spring.starter.model.OtherFdCdRelatedRequest}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'otherfdcdr0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=c.customerServiceRequest.customerServiceRequestId,tableAlias=otherfdcdr0_,className=com.spring.starter.model.OtherFdCdRelatedRequest,classAlias=c}
          |  +-[DOT] DotNode: 'otherfdcdr0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=c.customerServiceRequest,tableAlias=otherfdcdr0_,className=com.spring.starter.model.OtherFdCdRelatedRequest,classAlias=c}
          |  |  +-[ALIAS_REF] IdentNode: 'otherfdcdr0_.related_req_id' {alias=c, className=com.spring.starter.model.OtherFdCdRelatedRequest, tableAlias=otherfdcdr0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.962 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.962 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: select c from com.spring.starter.model.OtherFdCdRelatedRequest  c where c.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.963 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select otherfdcdr0_.related_req_id as related_1_69_, otherfdcdr0_.account_no as account_2_69_, otherfdcdr0_.account_type as account_3_69_, otherfdcdr0_.csr_id as csr_id7_69_, otherfdcdr0_.date as date4_69_, otherfdcdr0_.request as request5_69_, otherfdcdr0_.soft_reject as soft_rej6_69_ from other_fd_cd_related_request otherfdcdr0_ where otherfdcdr0_.csr_id=?
2018-11-06 22:45:12.963 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.975 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: select c from com.spring.starter.model.DuplicateFdCdCert  c where c.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.975 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.975 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'DuplicateFdCdCert'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'c'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:12.975 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:12.975 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.DuplicateFdCdCert (c) -> duplicatef0_
2018-11-06 22:45:12.975 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> duplicatef0_.duplicate_id
2018-11-06 22:45:12.975 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> duplicatef0_.duplicate_id
2018-11-06 22:45:12.976 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:12.976 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.DuplicateFdCdCert does not require a join.
2018-11-06 22:45:12.976 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:12.976 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.customerServiceRequest -> duplicatef0_.csr_id
2018-11-06 22:45:12.976 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:12.976 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.customerServiceRequest.customerServiceRequestId -> duplicatef0_.csr_id
2018-11-06 22:45:12.980 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:12.980 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} duplicatef0_.duplicate_id ) ( FromClause{level=1} duplicate_fd_cd_cert duplicatef0_ ) ( where ( = ( duplicatef0_.csr_id ( duplicatef0_.csr_id duplicatef0_.duplicate_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:12.980 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [duplicate_fd_cd_cert duplicatef0_]
2018-11-06 22:45:12.980 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:12.980 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (duplicate_fd_cd_cert)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'duplicatef0_.duplicate_id as duplicat1_37_' {alias=c, className=com.spring.starter.model.DuplicateFdCdCert, tableAlias=duplicatef0_}
    |  \-[SQL_TOKEN] SqlFragment: 'duplicatef0_.account_type as account_2_37_, duplicatef0_.csr_id as csr_id6_37_, duplicatef0_.date as date3_37_, duplicatef0_.fd_cd_deposit_no as fd_cd_de4_37_, duplicatef0_.soft_reject as soft_rej5_37_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[duplicatef0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'duplicate_fd_cd_cert duplicatef0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=duplicate_fd_cd_cert,tableAlias=duplicatef0_,origin=null,columns={,className=com.spring.starter.model.DuplicateFdCdCert}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'duplicatef0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=c.customerServiceRequest.customerServiceRequestId,tableAlias=duplicatef0_,className=com.spring.starter.model.DuplicateFdCdCert,classAlias=c}
          |  +-[DOT] DotNode: 'duplicatef0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=c.customerServiceRequest,tableAlias=duplicatef0_,className=com.spring.starter.model.DuplicateFdCdCert,classAlias=c}
          |  |  +-[ALIAS_REF] IdentNode: 'duplicatef0_.duplicate_id' {alias=c, className=com.spring.starter.model.DuplicateFdCdCert, tableAlias=duplicatef0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:12.980 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:12.980 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: select c from com.spring.starter.model.DuplicateFdCdCert  c where c.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:12.980 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select duplicatef0_.duplicate_id as duplicat1_37_, duplicatef0_.account_type as account_2_37_, duplicatef0_.csr_id as csr_id6_37_, duplicatef0_.date as date3_37_, duplicatef0_.fd_cd_deposit_no as fd_cd_de4_37_, duplicatef0_.soft_reject as soft_rej5_37_ from duplicate_fd_cd_cert duplicatef0_ where duplicatef0_.csr_id=?
2018-11-06 22:45:12.980 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.000 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT ft FROM com.spring.starter.model.FundTransferCEFT ft WHERE ft.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:13.000 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.000 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'FundTransferCEFT'
    |  |     \-[ALIAS] Node: 'ft'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'ft'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'ft'
          |  |  \-[IDENT] Node: 'customerTransactionRequest'
          |  \-[IDENT] Node: 'customerTransactionRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:13.000 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.001 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.FundTransferCEFT (ft) -> fundtransf0_
2018-11-06 22:45:13.001 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ft -> fundtransf0_.fund_transferceftid
2018-11-06 22:45:13.001 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ft -> fundtransf0_.fund_transferceftid
2018-11-06 22:45:13.001 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerTransactionRequest)
2018-11-06 22:45:13.001 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerTransactionRequestId in com.spring.starter.model.FundTransferCEFT does not require a join.
2018-11-06 22:45:13.001 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerTransactionRequest.customerTransactionRequestId'
2018-11-06 22:45:13.001 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ft.customerTransactionRequest -> fundtransf0_.customer_transaction_request_id
2018-11-06 22:45:13.001 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest.customerTransactionRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:13.001 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ft.customerTransactionRequest.customerTransactionRequestId -> fundtransf0_.customer_transaction_request_id
2018-11-06 22:45:13.003 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.003 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} fundtransf0_.fund_transferceftid ) ( FromClause{level=1} fund_transfer_ceft fundtransf0_ ) ( WHERE ( = ( fundtransf0_.customer_transaction_request_id ( fundtransf0_.customer_transaction_request_id fundtransf0_.fund_transferceftid customerTransactionRequest ) customerTransactionRequestId ) ? ) ) )
2018-11-06 22:45:13.003 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [fund_transfer_ceft fundtransf0_]
2018-11-06 22:45:13.003 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.003 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fund_transfer_ceft)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'fundtransf0_.fund_transferceftid as fund_tra1_43_' {alias=ft, className=com.spring.starter.model.FundTransferCEFT, tableAlias=fundtransf0_}
    |  \-[SQL_TOKEN] SqlFragment: 'fundtransf0_.account_name as account_2_43_, fundtransf0_.account_number as account_3_43_, fundtransf0_.ammount as ammount4_43_, fundtransf0_.bank_id as bank_id10_43_, fundtransf0_.brancb_id as brancb_11_43_, fundtransf0_.credit_account_no as credit_a5_43_, fundtransf0_.customer_transaction_request_id as custome12_43_, fundtransf0_.fund_transferceftbreak_down_id as fund_tr13_43_, fundtransf0_.reason as reason6_43_, fundtransf0_.request_complete_date as request_7_43_, fundtransf0_.status as status8_43_, fundtransf0_.url as url9_43_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[ft], fromElementByTableAlias=[fundtransf0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'fund_transfer_ceft fundtransf0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=ft,role=null,tableName=fund_transfer_ceft,tableAlias=fundtransf0_,origin=null,columns={,className=com.spring.starter.model.FundTransferCEFT}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'fundtransf0_.customer_transaction_request_id' {propertyName=customerTransactionRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=ft.customerTransactionRequest.customerTransactionRequestId,tableAlias=fundtransf0_,className=com.spring.starter.model.FundTransferCEFT,classAlias=ft}
          |  +-[DOT] DotNode: 'fundtransf0_.customer_transaction_request_id' {propertyName=customerTransactionRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=ft.customerTransactionRequest,tableAlias=fundtransf0_,className=com.spring.starter.model.FundTransferCEFT,classAlias=ft}
          |  |  +-[ALIAS_REF] IdentNode: 'fundtransf0_.fund_transferceftid' {alias=ft, className=com.spring.starter.model.FundTransferCEFT, tableAlias=fundtransf0_}
          |  |  \-[IDENT] IdentNode: 'customerTransactionRequest' {originalText=customerTransactionRequest}
          |  \-[IDENT] IdentNode: 'customerTransactionRequestId' {originalText=customerTransactionRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:13.003 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.003 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT ft FROM com.spring.starter.model.FundTransferCEFT ft WHERE ft.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:13.003 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select fundtransf0_.fund_transferceftid as fund_tra1_43_, fundtransf0_.account_name as account_2_43_, fundtransf0_.account_number as account_3_43_, fundtransf0_.ammount as ammount4_43_, fundtransf0_.bank_id as bank_id10_43_, fundtransf0_.brancb_id as brancb_11_43_, fundtransf0_.credit_account_no as credit_a5_43_, fundtransf0_.customer_transaction_request_id as custome12_43_, fundtransf0_.fund_transferceftbreak_down_id as fund_tr13_43_, fundtransf0_.reason as reason6_43_, fundtransf0_.request_complete_date as request_7_43_, fundtransf0_.status as status8_43_, fundtransf0_.url as url9_43_ from fund_transfer_ceft fundtransf0_ where fundtransf0_.customer_transaction_request_id=?
2018-11-06 22:45:13.005 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.025 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT a FROM com.spring.starter.model.FundTransferCEFTUpdateRecords a WHERE a.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:13.025 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.025 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'FundTransferCEFTUpdateRecords'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'a'
          |  |  \-[IDENT] Node: 'customerTransactionRequest'
          |  \-[IDENT] Node: 'customerTransactionRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:13.025 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.025 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.FundTransferCEFTUpdateRecords (a) -> fundtransf0_
2018-11-06 22:45:13.025 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : a -> fundtransf0_.fund_trasnferceftupdate_records_id
2018-11-06 22:45:13.025 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : a -> fundtransf0_.fund_trasnferceftupdate_records_id
2018-11-06 22:45:13.025 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerTransactionRequest)
2018-11-06 22:45:13.025 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerTransactionRequestId in com.spring.starter.model.FundTransferCEFTUpdateRecords does not require a join.
2018-11-06 22:45:13.025 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerTransactionRequest.customerTransactionRequestId'
2018-11-06 22:45:13.025 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : a.customerTransactionRequest -> fundtransf0_.customer_service_request_id
2018-11-06 22:45:13.025 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest.customerTransactionRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:13.027 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : a.customerTransactionRequest.customerTransactionRequestId -> fundtransf0_.customer_service_request_id
2018-11-06 22:45:13.027 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.027 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} fundtransf0_.fund_trasnferceftupdate_records_id ) ( FromClause{level=1} fund_transfer_cefte_update_records fundtransf0_ ) ( WHERE ( = ( fundtransf0_.customer_service_request_id ( fundtransf0_.customer_service_request_id fundtransf0_.fund_trasnferceftupdate_records_id customerTransactionRequest ) customerTransactionRequestId ) ? ) ) )
2018-11-06 22:45:13.027 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [fund_transfer_cefte_update_records fundtransf0_]
2018-11-06 22:45:13.027 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.027 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fund_transfer_cefte_update_records)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'fundtransf0_.fund_trasnferceftupdate_records_id as fund_tra1_46_' {alias=a, className=com.spring.starter.model.FundTransferCEFTUpdateRecords, tableAlias=fundtransf0_}
    |  \-[SQL_TOKEN] SqlFragment: 'fundtransf0_.comment as comment2_46_, fundtransf0_.customer_service_request_id as customer4_46_, fundtransf0_.url as url3_46_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[fundtransf0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'fund_transfer_cefte_update_records fundtransf0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=fund_transfer_cefte_update_records,tableAlias=fundtransf0_,origin=null,columns={,className=com.spring.starter.model.FundTransferCEFTUpdateRecords}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'fundtransf0_.customer_service_request_id' {propertyName=customerTransactionRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=a.customerTransactionRequest.customerTransactionRequestId,tableAlias=fundtransf0_,className=com.spring.starter.model.FundTransferCEFTUpdateRecords,classAlias=a}
          |  +-[DOT] DotNode: 'fundtransf0_.customer_service_request_id' {propertyName=customerTransactionRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=a.customerTransactionRequest,tableAlias=fundtransf0_,className=com.spring.starter.model.FundTransferCEFTUpdateRecords,classAlias=a}
          |  |  +-[ALIAS_REF] IdentNode: 'fundtransf0_.fund_trasnferceftupdate_records_id' {alias=a, className=com.spring.starter.model.FundTransferCEFTUpdateRecords, tableAlias=fundtransf0_}
          |  |  \-[IDENT] IdentNode: 'customerTransactionRequest' {originalText=customerTransactionRequest}
          |  \-[IDENT] IdentNode: 'customerTransactionRequestId' {originalText=customerTransactionRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:13.027 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.027 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT a FROM com.spring.starter.model.FundTransferCEFTUpdateRecords a WHERE a.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:13.027 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select fundtransf0_.fund_trasnferceftupdate_records_id as fund_tra1_46_, fundtransf0_.comment as comment2_46_, fundtransf0_.customer_service_request_id as customer4_46_, fundtransf0_.url as url3_46_ from fund_transfer_cefte_update_records fundtransf0_ where fundtransf0_.customer_service_request_id=?
2018-11-06 22:45:13.028 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.047 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT b FROM com.spring.starter.model.FundTransferCEFTBreakDown b WHERE b.fundTransferCEFT.fundTransferCEFTId =:fundTransferCEFTId
2018-11-06 22:45:13.048 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.048 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'FundTransferCEFTBreakDown'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'b'
          |  |  \-[IDENT] Node: 'fundTransferCEFT'
          |  \-[IDENT] Node: 'fundTransferCEFTId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'fundTransferCEFTId'

2018-11-06 22:45:13.048 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.048 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.FundTransferCEFTBreakDown (b) -> fundtransf0_
2018-11-06 22:45:13.048 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b -> fundtransf0_.fund_transferceftbreak_down_id
2018-11-06 22:45:13.048 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b -> fundtransf0_.fund_transferceftbreak_down_id
2018-11-06 22:45:13.048 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : fundTransferCEFT -> org.hibernate.type.ManyToOneType(com.spring.starter.model.FundTransferCEFT)
2018-11-06 22:45:13.048 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property fundTransferCEFTId in com.spring.starter.model.FundTransferCEFTBreakDown does not require a join.
2018-11-06 22:45:13.048 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'fundTransferCEFT.fundTransferCEFTId'
2018-11-06 22:45:13.048 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b.fundTransferCEFT -> fundtransf0_.fund_transferceftid
2018-11-06 22:45:13.048 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : fundTransferCEFT.fundTransferCEFTId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:13.049 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b.fundTransferCEFT.fundTransferCEFTId -> fundtransf0_.fund_transferceftid
2018-11-06 22:45:13.050 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.050 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} fundtransf0_.fund_transferceftbreak_down_id ) ( FromClause{level=1} fund_transfer_ceft_break_down fundtransf0_ ) ( WHERE ( = ( fundtransf0_.fund_transferceftid ( fundtransf0_.fund_transferceftid fundtransf0_.fund_transferceftbreak_down_id fundTransferCEFT ) fundTransferCEFTId ) ? ) ) )
2018-11-06 22:45:13.050 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [fund_transfer_ceft_break_down fundtransf0_]
2018-11-06 22:45:13.050 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.050 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fund_transfer_ceft_break_down)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'fundtransf0_.fund_transferceftbreak_down_id as fund_tra1_44_' {alias=b, className=com.spring.starter.model.FundTransferCEFTBreakDown, tableAlias=fundtransf0_}
    |  \-[SQL_TOKEN] SqlFragment: 'fundtransf0_.amount as amount2_44_, fundtransf0_.comment as comment3_44_, fundtransf0_.fund_transferceftid as fund_tr13_44_, fundtransf0_.value_of100notes as value_of4_44_, fundtransf0_.value_of10notes as value_of5_44_, fundtransf0_.value_of2000notes as value_of6_44_, fundtransf0_.value_of20notes as value_of7_44_, fundtransf0_.value_of5000notes as value_of8_44_, fundtransf0_.value_of500notes as value_of9_44_, fundtransf0_.value_of50notes as value_o10_44_, fundtransf0_.value_ofcoins as value_o11_44_, fundtransf0_.valueof1000notes as valueof12_44_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[fundtransf0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'fund_transfer_ceft_break_down fundtransf0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=fund_transfer_ceft_break_down,tableAlias=fundtransf0_,origin=null,columns={,className=com.spring.starter.model.FundTransferCEFTBreakDown}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'fundtransf0_.fund_transferceftid' {propertyName=fundTransferCEFTId,dereferenceType=PRIMITIVE,getPropertyPath=fundTransferCEFT.fundTransferCEFTId,path=b.fundTransferCEFT.fundTransferCEFTId,tableAlias=fundtransf0_,className=com.spring.starter.model.FundTransferCEFTBreakDown,classAlias=b}
          |  +-[DOT] DotNode: 'fundtransf0_.fund_transferceftid' {propertyName=fundTransferCEFTId,dereferenceType=UNKNOWN,getPropertyPath=fundTransferCEFT.fundTransferCEFTId,path=b.fundTransferCEFT,tableAlias=fundtransf0_,className=com.spring.starter.model.FundTransferCEFTBreakDown,classAlias=b}
          |  |  +-[ALIAS_REF] IdentNode: 'fundtransf0_.fund_transferceftbreak_down_id' {alias=b, className=com.spring.starter.model.FundTransferCEFTBreakDown, tableAlias=fundtransf0_}
          |  |  \-[IDENT] IdentNode: 'fundTransferCEFT' {originalText=fundTransferCEFT}
          |  \-[IDENT] IdentNode: 'fundTransferCEFTId' {originalText=fundTransferCEFTId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=fundTransferCEFTId, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:13.050 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.050 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT b FROM com.spring.starter.model.FundTransferCEFTBreakDown b WHERE b.fundTransferCEFT.fundTransferCEFTId =:fundTransferCEFTId
2018-11-06 22:45:13.050 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select fundtransf0_.fund_transferceftbreak_down_id as fund_tra1_44_, fundtransf0_.amount as amount2_44_, fundtransf0_.comment as comment3_44_, fundtransf0_.fund_transferceftid as fund_tr13_44_, fundtransf0_.value_of100notes as value_of4_44_, fundtransf0_.value_of10notes as value_of5_44_, fundtransf0_.value_of2000notes as value_of6_44_, fundtransf0_.value_of20notes as value_of7_44_, fundtransf0_.value_of5000notes as value_of8_44_, fundtransf0_.value_of500notes as value_of9_44_, fundtransf0_.value_of50notes as value_o10_44_, fundtransf0_.value_ofcoins as value_o11_44_, fundtransf0_.valueof1000notes as valueof12_44_ from fund_transfer_ceft_break_down fundtransf0_ where fundtransf0_.fund_transferceftid=?
2018-11-06 22:45:13.051 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.069 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT ft FROM com.spring.starter.model.FundTransferSLIPS ft WHERE ft.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:13.070 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.070 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'FundTransferSLIPS'
    |  |     \-[ALIAS] Node: 'ft'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'ft'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'ft'
          |  |  \-[IDENT] Node: 'customerTransactionRequest'
          |  \-[IDENT] Node: 'customerTransactionRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:13.070 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.070 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.FundTransferSLIPS (ft) -> fundtransf0_
2018-11-06 22:45:13.070 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ft -> fundtransf0_.fund_transferslipsid
2018-11-06 22:45:13.070 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ft -> fundtransf0_.fund_transferslipsid
2018-11-06 22:45:13.070 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerTransactionRequest)
2018-11-06 22:45:13.070 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerTransactionRequestId in com.spring.starter.model.FundTransferSLIPS does not require a join.
2018-11-06 22:45:13.070 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerTransactionRequest.customerTransactionRequestId'
2018-11-06 22:45:13.070 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ft.customerTransactionRequest -> fundtransf0_.customer_transaction_request_id
2018-11-06 22:45:13.070 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest.customerTransactionRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:13.072 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ft.customerTransactionRequest.customerTransactionRequestId -> fundtransf0_.customer_transaction_request_id
2018-11-06 22:45:13.072 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.072 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} fundtransf0_.fund_transferslipsid ) ( FromClause{level=1} fund_transfer_slips fundtransf0_ ) ( WHERE ( = ( fundtransf0_.customer_transaction_request_id ( fundtransf0_.customer_transaction_request_id fundtransf0_.fund_transferslipsid customerTransactionRequest ) customerTransactionRequestId ) ? ) ) )
2018-11-06 22:45:13.072 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [fund_transfer_slips fundtransf0_]
2018-11-06 22:45:13.072 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.072 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fund_transfer_slips)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'fundtransf0_.fund_transferslipsid as fund_tra1_48_' {alias=ft, className=com.spring.starter.model.FundTransferSLIPS, tableAlias=fundtransf0_}
    |  \-[SQL_TOKEN] SqlFragment: 'fundtransf0_.account_name as account_2_48_, fundtransf0_.account_number as account_3_48_, fundtransf0_.ammount as ammount4_48_, fundtransf0_.bank_id as bank_id10_48_, fundtransf0_.branch_id as branch_11_48_, fundtransf0_.credit_account_no as credit_a5_48_, fundtransf0_.customer_transaction_request_id as custome12_48_, fundtransf0_.fund_transferslipsbreak_down_id as fund_tr13_48_, fundtransf0_.reason as reason6_48_, fundtransf0_.request_complete_date as request_7_48_, fundtransf0_.status as status8_48_, fundtransf0_.url as url9_48_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[ft], fromElementByTableAlias=[fundtransf0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'fund_transfer_slips fundtransf0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=ft,role=null,tableName=fund_transfer_slips,tableAlias=fundtransf0_,origin=null,columns={,className=com.spring.starter.model.FundTransferSLIPS}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'fundtransf0_.customer_transaction_request_id' {propertyName=customerTransactionRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=ft.customerTransactionRequest.customerTransactionRequestId,tableAlias=fundtransf0_,className=com.spring.starter.model.FundTransferSLIPS,classAlias=ft}
          |  +-[DOT] DotNode: 'fundtransf0_.customer_transaction_request_id' {propertyName=customerTransactionRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=ft.customerTransactionRequest,tableAlias=fundtransf0_,className=com.spring.starter.model.FundTransferSLIPS,classAlias=ft}
          |  |  +-[ALIAS_REF] IdentNode: 'fundtransf0_.fund_transferslipsid' {alias=ft, className=com.spring.starter.model.FundTransferSLIPS, tableAlias=fundtransf0_}
          |  |  \-[IDENT] IdentNode: 'customerTransactionRequest' {originalText=customerTransactionRequest}
          |  \-[IDENT] IdentNode: 'customerTransactionRequestId' {originalText=customerTransactionRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:13.072 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.072 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT ft FROM com.spring.starter.model.FundTransferSLIPS ft WHERE ft.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:13.072 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select fundtransf0_.fund_transferslipsid as fund_tra1_48_, fundtransf0_.account_name as account_2_48_, fundtransf0_.account_number as account_3_48_, fundtransf0_.ammount as ammount4_48_, fundtransf0_.bank_id as bank_id10_48_, fundtransf0_.branch_id as branch_11_48_, fundtransf0_.credit_account_no as credit_a5_48_, fundtransf0_.customer_transaction_request_id as custome12_48_, fundtransf0_.fund_transferslipsbreak_down_id as fund_tr13_48_, fundtransf0_.reason as reason6_48_, fundtransf0_.request_complete_date as request_7_48_, fundtransf0_.status as status8_48_, fundtransf0_.url as url9_48_ from fund_transfer_slips fundtransf0_ where fundtransf0_.customer_transaction_request_id=?
2018-11-06 22:45:13.073 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.097 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT a FROM com.spring.starter.model.FundTransferSLIPSUpdateRecord a WHERE a.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:13.097 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.098 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'FundTransferSLIPSUpdateRecord'
    |  |     \-[ALIAS] Node: 'a'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'a'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'a'
          |  |  \-[IDENT] Node: 'customerTransactionRequest'
          |  \-[IDENT] Node: 'customerTransactionRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:13.098 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.098 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.FundTransferSLIPSUpdateRecord (a) -> fundtransf0_
2018-11-06 22:45:13.098 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : a -> fundtransf0_.fund_transferslipsupdate_record_id
2018-11-06 22:45:13.098 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : a -> fundtransf0_.fund_transferslipsupdate_record_id
2018-11-06 22:45:13.098 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerTransactionRequest)
2018-11-06 22:45:13.098 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerTransactionRequestId in com.spring.starter.model.FundTransferSLIPSUpdateRecord does not require a join.
2018-11-06 22:45:13.098 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerTransactionRequest.customerTransactionRequestId'
2018-11-06 22:45:13.098 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : a.customerTransactionRequest -> fundtransf0_.customer_transactions_request_id
2018-11-06 22:45:13.098 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest.customerTransactionRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:13.098 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : a.customerTransactionRequest.customerTransactionRequestId -> fundtransf0_.customer_transactions_request_id
2018-11-06 22:45:13.098 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.098 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} fundtransf0_.fund_transferslipsupdate_record_id ) ( FromClause{level=1} fund_transfer_slip_update_record fundtransf0_ ) ( WHERE ( = ( fundtransf0_.customer_transactions_request_id ( fundtransf0_.customer_transactions_request_id fundtransf0_.fund_transferslipsupdate_record_id customerTransactionRequest ) customerTransactionRequestId ) ? ) ) )
2018-11-06 22:45:13.098 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [fund_transfer_slip_update_record fundtransf0_]
2018-11-06 22:45:13.098 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.099 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fund_transfer_slip_update_record)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'fundtransf0_.fund_transferslipsupdate_record_id as fund_tra1_47_' {alias=a, className=com.spring.starter.model.FundTransferSLIPSUpdateRecord, tableAlias=fundtransf0_}
    |  \-[SQL_TOKEN] SqlFragment: 'fundtransf0_.comment as comment2_47_, fundtransf0_.customer_transactions_request_id as customer4_47_, fundtransf0_.signature_url as signatur3_47_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[fundtransf0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'fund_transfer_slip_update_record fundtransf0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=fund_transfer_slip_update_record,tableAlias=fundtransf0_,origin=null,columns={,className=com.spring.starter.model.FundTransferSLIPSUpdateRecord}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'fundtransf0_.customer_transactions_request_id' {propertyName=customerTransactionRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=a.customerTransactionRequest.customerTransactionRequestId,tableAlias=fundtransf0_,className=com.spring.starter.model.FundTransferSLIPSUpdateRecord,classAlias=a}
          |  +-[DOT] DotNode: 'fundtransf0_.customer_transactions_request_id' {propertyName=customerTransactionRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=a.customerTransactionRequest,tableAlias=fundtransf0_,className=com.spring.starter.model.FundTransferSLIPSUpdateRecord,classAlias=a}
          |  |  +-[ALIAS_REF] IdentNode: 'fundtransf0_.fund_transferslipsupdate_record_id' {alias=a, className=com.spring.starter.model.FundTransferSLIPSUpdateRecord, tableAlias=fundtransf0_}
          |  |  \-[IDENT] IdentNode: 'customerTransactionRequest' {originalText=customerTransactionRequest}
          |  \-[IDENT] IdentNode: 'customerTransactionRequestId' {originalText=customerTransactionRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:13.099 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.099 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT a FROM com.spring.starter.model.FundTransferSLIPSUpdateRecord a WHERE a.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:13.099 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select fundtransf0_.fund_transferslipsupdate_record_id as fund_tra1_47_, fundtransf0_.comment as comment2_47_, fundtransf0_.customer_transactions_request_id as customer4_47_, fundtransf0_.signature_url as signatur3_47_ from fund_transfer_slip_update_record fundtransf0_ where fundtransf0_.customer_transactions_request_id=?
2018-11-06 22:45:13.099 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.110 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT b FROM com.spring.starter.model.FundTransferSLIPSBreakDown b WHERE b.fundTransferSLIPS.fundTransferSLIPSId =:fundTransferSLIPSId
2018-11-06 22:45:13.110 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.110 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'FundTransferSLIPSBreakDown'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'b'
          |  |  \-[IDENT] Node: 'fundTransferSLIPS'
          |  \-[IDENT] Node: 'fundTransferSLIPSId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'fundTransferSLIPSId'

2018-11-06 22:45:13.110 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.111 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.FundTransferSLIPSBreakDown (b) -> fundtransf0_
2018-11-06 22:45:13.111 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b -> fundtransf0_.fund_transferslipsbreak_down_id
2018-11-06 22:45:13.111 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b -> fundtransf0_.fund_transferslipsbreak_down_id
2018-11-06 22:45:13.111 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : fundTransferSLIPS -> org.hibernate.type.ManyToOneType(com.spring.starter.model.FundTransferSLIPS)
2018-11-06 22:45:13.111 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property fundTransferSLIPSId in com.spring.starter.model.FundTransferSLIPSBreakDown does not require a join.
2018-11-06 22:45:13.111 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'fundTransferSLIPS.fundTransferSLIPSId'
2018-11-06 22:45:13.111 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b.fundTransferSLIPS -> fundtransf0_.fund_transferslipsid
2018-11-06 22:45:13.111 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : fundTransferSLIPS.fundTransferSLIPSId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:13.111 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b.fundTransferSLIPS.fundTransferSLIPSId -> fundtransf0_.fund_transferslipsid
2018-11-06 22:45:13.111 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.111 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} fundtransf0_.fund_transferslipsbreak_down_id ) ( FromClause{level=1} fund_transfer_slips_break_down fundtransf0_ ) ( WHERE ( = ( fundtransf0_.fund_transferslipsid ( fundtransf0_.fund_transferslipsid fundtransf0_.fund_transferslipsbreak_down_id fundTransferSLIPS ) fundTransferSLIPSId ) ? ) ) )
2018-11-06 22:45:13.111 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [fund_transfer_slips_break_down fundtransf0_]
2018-11-06 22:45:13.111 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.111 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fund_transfer_slips_break_down)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'fundtransf0_.fund_transferslipsbreak_down_id as fund_tra1_49_' {alias=b, className=com.spring.starter.model.FundTransferSLIPSBreakDown, tableAlias=fundtransf0_}
    |  \-[SQL_TOKEN] SqlFragment: 'fundtransf0_.amount as amount2_49_, fundtransf0_.comment as comment3_49_, fundtransf0_.fund_transferslipsid as fund_tr13_49_, fundtransf0_.value_of100notes as value_of4_49_, fundtransf0_.value_of10notes as value_of5_49_, fundtransf0_.value_of2000notes as value_of6_49_, fundtransf0_.value_of20notes as value_of7_49_, fundtransf0_.value_of5000notes as value_of8_49_, fundtransf0_.value_of500notes as value_of9_49_, fundtransf0_.value_of50notes as value_o10_49_, fundtransf0_.value_ofcoins as value_o11_49_, fundtransf0_.valueof1000notes as valueof12_49_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[fundtransf0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'fund_transfer_slips_break_down fundtransf0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=fund_transfer_slips_break_down,tableAlias=fundtransf0_,origin=null,columns={,className=com.spring.starter.model.FundTransferSLIPSBreakDown}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'fundtransf0_.fund_transferslipsid' {propertyName=fundTransferSLIPSId,dereferenceType=PRIMITIVE,getPropertyPath=fundTransferSLIPS.fundTransferSLIPSId,path=b.fundTransferSLIPS.fundTransferSLIPSId,tableAlias=fundtransf0_,className=com.spring.starter.model.FundTransferSLIPSBreakDown,classAlias=b}
          |  +-[DOT] DotNode: 'fundtransf0_.fund_transferslipsid' {propertyName=fundTransferSLIPSId,dereferenceType=UNKNOWN,getPropertyPath=fundTransferSLIPS.fundTransferSLIPSId,path=b.fundTransferSLIPS,tableAlias=fundtransf0_,className=com.spring.starter.model.FundTransferSLIPSBreakDown,classAlias=b}
          |  |  +-[ALIAS_REF] IdentNode: 'fundtransf0_.fund_transferslipsbreak_down_id' {alias=b, className=com.spring.starter.model.FundTransferSLIPSBreakDown, tableAlias=fundtransf0_}
          |  |  \-[IDENT] IdentNode: 'fundTransferSLIPS' {originalText=fundTransferSLIPS}
          |  \-[IDENT] IdentNode: 'fundTransferSLIPSId' {originalText=fundTransferSLIPSId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=fundTransferSLIPSId, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:13.112 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.112 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT b FROM com.spring.starter.model.FundTransferSLIPSBreakDown b WHERE b.fundTransferSLIPS.fundTransferSLIPSId =:fundTransferSLIPSId
2018-11-06 22:45:13.112 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select fundtransf0_.fund_transferslipsbreak_down_id as fund_tra1_49_, fundtransf0_.amount as amount2_49_, fundtransf0_.comment as comment3_49_, fundtransf0_.fund_transferslipsid as fund_tr13_49_, fundtransf0_.value_of100notes as value_of4_49_, fundtransf0_.value_of10notes as value_of5_49_, fundtransf0_.value_of2000notes as value_of6_49_, fundtransf0_.value_of20notes as value_of7_49_, fundtransf0_.value_of5000notes as value_of8_49_, fundtransf0_.value_of500notes as value_of9_49_, fundtransf0_.value_of50notes as value_o10_49_, fundtransf0_.value_ofcoins as value_o11_49_, fundtransf0_.valueof1000notes as valueof12_49_ from fund_transfer_slips_break_down fundtransf0_ where fundtransf0_.fund_transferslipsid=?
2018-11-06 22:45:13.112 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.131 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT ftwn FROM com.spring.starter.model.FundTransferWithinNDB ftwn WHERE ftwn.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:13.131 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.131 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'FundTransferWithinNDB'
    |  |     \-[ALIAS] Node: 'ftwn'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'ftwn'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'ftwn'
          |  |  \-[IDENT] Node: 'customerTransactionRequest'
          |  \-[IDENT] Node: 'customerTransactionRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:13.131 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.131 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.FundTransferWithinNDB (ftwn) -> fundtransf0_
2018-11-06 22:45:13.131 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ftwn -> fundtransf0_.fund_transfer_within_ndb_id
2018-11-06 22:45:13.131 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ftwn -> fundtransf0_.fund_transfer_within_ndb_id
2018-11-06 22:45:13.132 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerTransactionRequest)
2018-11-06 22:45:13.132 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerTransactionRequestId in com.spring.starter.model.FundTransferWithinNDB does not require a join.
2018-11-06 22:45:13.132 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerTransactionRequest.customerTransactionRequestId'
2018-11-06 22:45:13.132 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ftwn.customerTransactionRequest -> fundtransf0_.customer_transaction_request_id
2018-11-06 22:45:13.132 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest.customerTransactionRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:13.135 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ftwn.customerTransactionRequest.customerTransactionRequestId -> fundtransf0_.customer_transaction_request_id
2018-11-06 22:45:13.135 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.135 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} fundtransf0_.fund_transfer_within_ndb_id ) ( FromClause{level=1} fund_transfer_within_ndb fundtransf0_ ) ( WHERE ( = ( fundtransf0_.customer_transaction_request_id ( fundtransf0_.customer_transaction_request_id fundtransf0_.fund_transfer_within_ndb_id customerTransactionRequest ) customerTransactionRequestId ) ? ) ) )
2018-11-06 22:45:13.135 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [fund_transfer_within_ndb fundtransf0_]
2018-11-06 22:45:13.135 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.135 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fund_transfer_within_ndb)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'fundtransf0_.fund_transfer_within_ndb_id as fund_tra1_52_' {alias=ftwn, className=com.spring.starter.model.FundTransferWithinNDB, tableAlias=fundtransf0_}
    |  \-[SQL_TOKEN] SqlFragment: 'fundtransf0_.fund_transfer_withinndbbreak_down_id as fund_tr12_52_, fundtransf0_.amount as amount2_52_, fundtransf0_.branch_id as branch_13_52_, fundtransf0_.currency_id as currenc14_52_, fundtransf0_.customer_transaction_request_id as custome15_52_, fundtransf0_.date as date3_52_, fundtransf0_.from_account as from_acc4_52_, fundtransf0_.from_account_name as from_acc5_52_, fundtransf0_.from_account_type as from_acc6_52_, fundtransf0_.request_complete_date as request_7_52_, fundtransf0_.signature_url as signatur8_52_, fundtransf0_.status as status9_52_, fundtransf0_.to_account as to_acco10_52_, fundtransf0_.to_account_name as to_acco11_52_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[ftwn], fromElementByTableAlias=[fundtransf0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'fund_transfer_within_ndb fundtransf0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=ftwn,role=null,tableName=fund_transfer_within_ndb,tableAlias=fundtransf0_,origin=null,columns={,className=com.spring.starter.model.FundTransferWithinNDB}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'fundtransf0_.customer_transaction_request_id' {propertyName=customerTransactionRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=ftwn.customerTransactionRequest.customerTransactionRequestId,tableAlias=fundtransf0_,className=com.spring.starter.model.FundTransferWithinNDB,classAlias=ftwn}
          |  +-[DOT] DotNode: 'fundtransf0_.customer_transaction_request_id' {propertyName=customerTransactionRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=ftwn.customerTransactionRequest,tableAlias=fundtransf0_,className=com.spring.starter.model.FundTransferWithinNDB,classAlias=ftwn}
          |  |  +-[ALIAS_REF] IdentNode: 'fundtransf0_.fund_transfer_within_ndb_id' {alias=ftwn, className=com.spring.starter.model.FundTransferWithinNDB, tableAlias=fundtransf0_}
          |  |  \-[IDENT] IdentNode: 'customerTransactionRequest' {originalText=customerTransactionRequest}
          |  \-[IDENT] IdentNode: 'customerTransactionRequestId' {originalText=customerTransactionRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:13.135 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.136 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT ftwn FROM com.spring.starter.model.FundTransferWithinNDB ftwn WHERE ftwn.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:13.136 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select fundtransf0_.fund_transfer_within_ndb_id as fund_tra1_52_, fundtransf0_.fund_transfer_withinndbbreak_down_id as fund_tr12_52_, fundtransf0_.amount as amount2_52_, fundtransf0_.branch_id as branch_13_52_, fundtransf0_.currency_id as currenc14_52_, fundtransf0_.customer_transaction_request_id as custome15_52_, fundtransf0_.date as date3_52_, fundtransf0_.from_account as from_acc4_52_, fundtransf0_.from_account_name as from_acc5_52_, fundtransf0_.from_account_type as from_acc6_52_, fundtransf0_.request_complete_date as request_7_52_, fundtransf0_.signature_url as signatur8_52_, fundtransf0_.status as status9_52_, fundtransf0_.to_account as to_acco10_52_, fundtransf0_.to_account_name as to_acco11_52_ from fund_transfer_within_ndb fundtransf0_ where fundtransf0_.customer_transaction_request_id=?
2018-11-06 22:45:13.136 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.157 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT ftwnur FROM com.spring.starter.model.FundTransferWithinNDBUpdateRecord ftwnur WHERE ftwnur.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:13.157 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.157 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'FundTransferWithinNDBUpdateRecord'
    |  |     \-[ALIAS] Node: 'ftwnur'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'ftwnur'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'ftwnur'
          |  |  \-[IDENT] Node: 'customerTransactionRequest'
          |  \-[IDENT] Node: 'customerTransactionRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:13.157 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.157 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.FundTransferWithinNDBUpdateRecord (ftwnur) -> fundtransf0_
2018-11-06 22:45:13.157 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ftwnur -> fundtransf0_.fund_transfer_withinndbupdate_record_id
2018-11-06 22:45:13.157 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ftwnur -> fundtransf0_.fund_transfer_withinndbupdate_record_id
2018-11-06 22:45:13.157 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerTransactionRequest)
2018-11-06 22:45:13.158 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerTransactionRequestId in com.spring.starter.model.FundTransferWithinNDBUpdateRecord does not require a join.
2018-11-06 22:45:13.158 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerTransactionRequest.customerTransactionRequestId'
2018-11-06 22:45:13.158 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ftwnur.customerTransactionRequest -> fundtransf0_.customer_transactions_request_id
2018-11-06 22:45:13.158 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerTransactionRequest.customerTransactionRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:13.158 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ftwnur.customerTransactionRequest.customerTransactionRequestId -> fundtransf0_.customer_transactions_request_id
2018-11-06 22:45:13.158 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.158 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} fundtransf0_.fund_transfer_withinndbupdate_record_id ) ( FromClause{level=1} fund_transfer_within_ndb_update_record fundtransf0_ ) ( WHERE ( = ( fundtransf0_.customer_transactions_request_id ( fundtransf0_.customer_transactions_request_id fundtransf0_.fund_transfer_withinndbupdate_record_id customerTransactionRequest ) customerTransactionRequestId ) ? ) ) )
2018-11-06 22:45:13.158 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [fund_transfer_within_ndb_update_record fundtransf0_]
2018-11-06 22:45:13.158 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.158 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fund_transfer_within_ndb_update_record)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'fundtransf0_.fund_transfer_withinndbupdate_record_id as fund_tra1_56_' {alias=ftwnur, className=com.spring.starter.model.FundTransferWithinNDBUpdateRecord, tableAlias=fundtransf0_}
    |  \-[SQL_TOKEN] SqlFragment: 'fundtransf0_.comment as comment2_56_, fundtransf0_.customer_transactions_request_id as customer4_56_, fundtransf0_.signature_url as signatur3_56_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[ftwnur], fromElementByTableAlias=[fundtransf0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'fund_transfer_within_ndb_update_record fundtransf0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=ftwnur,role=null,tableName=fund_transfer_within_ndb_update_record,tableAlias=fundtransf0_,origin=null,columns={,className=com.spring.starter.model.FundTransferWithinNDBUpdateRecord}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'fundtransf0_.customer_transactions_request_id' {propertyName=customerTransactionRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=ftwnur.customerTransactionRequest.customerTransactionRequestId,tableAlias=fundtransf0_,className=com.spring.starter.model.FundTransferWithinNDBUpdateRecord,classAlias=ftwnur}
          |  +-[DOT] DotNode: 'fundtransf0_.customer_transactions_request_id' {propertyName=customerTransactionRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerTransactionRequest.customerTransactionRequestId,path=ftwnur.customerTransactionRequest,tableAlias=fundtransf0_,className=com.spring.starter.model.FundTransferWithinNDBUpdateRecord,classAlias=ftwnur}
          |  |  +-[ALIAS_REF] IdentNode: 'fundtransf0_.fund_transfer_withinndbupdate_record_id' {alias=ftwnur, className=com.spring.starter.model.FundTransferWithinNDBUpdateRecord, tableAlias=fundtransf0_}
          |  |  \-[IDENT] IdentNode: 'customerTransactionRequest' {originalText=customerTransactionRequest}
          |  \-[IDENT] IdentNode: 'customerTransactionRequestId' {originalText=customerTransactionRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:13.158 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.159 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT ftwnur FROM com.spring.starter.model.FundTransferWithinNDBUpdateRecord ftwnur WHERE ftwnur.customerTransactionRequest.customerTransactionRequestId=?1
2018-11-06 22:45:13.159 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select fundtransf0_.fund_transfer_withinndbupdate_record_id as fund_tra1_56_, fundtransf0_.comment as comment2_56_, fundtransf0_.customer_transactions_request_id as customer4_56_, fundtransf0_.signature_url as signatur3_56_ from fund_transfer_within_ndb_update_record fundtransf0_ where fundtransf0_.customer_transactions_request_id=?
2018-11-06 22:45:13.159 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.182 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT b FROM com.spring.starter.model.FundTransferWithinNDBBreakDown b WHERE b.fundTransferWithinNDB.fundTransferWithinNdbId =:fundTransferWithinNdbId
2018-11-06 22:45:13.182 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.183 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'FundTransferWithinNDBBreakDown'
    |  |     \-[ALIAS] Node: 'b'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'b'
          |  |  \-[IDENT] Node: 'fundTransferWithinNDB'
          |  \-[IDENT] Node: 'fundTransferWithinNdbId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'fundTransferWithinNdbId'

2018-11-06 22:45:13.183 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.183 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.FundTransferWithinNDBBreakDown (b) -> fundtransf0_
2018-11-06 22:45:13.183 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b -> fundtransf0_.fund_transfer_withinndbbreak_down_id
2018-11-06 22:45:13.183 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b -> fundtransf0_.fund_transfer_withinndbbreak_down_id
2018-11-06 22:45:13.183 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : fundTransferWithinNDB -> org.hibernate.type.ManyToOneType(com.spring.starter.model.FundTransferWithinNDB)
2018-11-06 22:45:13.183 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property fundTransferWithinNdbId in com.spring.starter.model.FundTransferWithinNDBBreakDown does not require a join.
2018-11-06 22:45:13.183 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'fundTransferWithinNDB.fundTransferWithinNdbId'
2018-11-06 22:45:13.183 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b.fundTransferWithinNDB -> fundtransf0_.fund_transfer_within_ndb_id
2018-11-06 22:45:13.183 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : fundTransferWithinNDB.fundTransferWithinNdbId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:13.185 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : b.fundTransferWithinNDB.fundTransferWithinNdbId -> fundtransf0_.fund_transfer_within_ndb_id
2018-11-06 22:45:13.185 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.185 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} fundtransf0_.fund_transfer_withinndbbreak_down_id ) ( FromClause{level=1} fund_transfer_within_ndb_break_down fundtransf0_ ) ( WHERE ( = ( fundtransf0_.fund_transfer_within_ndb_id ( fundtransf0_.fund_transfer_within_ndb_id fundtransf0_.fund_transfer_withinndbbreak_down_id fundTransferWithinNDB ) fundTransferWithinNdbId ) ? ) ) )
2018-11-06 22:45:13.185 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [fund_transfer_within_ndb_break_down fundtransf0_]
2018-11-06 22:45:13.185 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.185 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fund_transfer_within_ndb_break_down)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'fundtransf0_.fund_transfer_withinndbbreak_down_id as fund_tra1_53_' {alias=b, className=com.spring.starter.model.FundTransferWithinNDBBreakDown, tableAlias=fundtransf0_}
    |  \-[SQL_TOKEN] SqlFragment: 'fundtransf0_.amount as amount2_53_, fundtransf0_.comment as comment3_53_, fundtransf0_.fund_transfer_within_ndb_id as fund_tr13_53_, fundtransf0_.value_of100notes as value_of4_53_, fundtransf0_.value_of10notes as value_of5_53_, fundtransf0_.value_of2000notes as value_of6_53_, fundtransf0_.value_of20notes as value_of7_53_, fundtransf0_.value_of5000notes as value_of8_53_, fundtransf0_.value_of500notes as value_of9_53_, fundtransf0_.value_of50notes as value_o10_53_, fundtransf0_.value_ofcoins as value_o11_53_, fundtransf0_.valueof1000notes as valueof12_53_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[fundtransf0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'fund_transfer_within_ndb_break_down fundtransf0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=fund_transfer_within_ndb_break_down,tableAlias=fundtransf0_,origin=null,columns={,className=com.spring.starter.model.FundTransferWithinNDBBreakDown}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'fundtransf0_.fund_transfer_within_ndb_id' {propertyName=fundTransferWithinNdbId,dereferenceType=PRIMITIVE,getPropertyPath=fundTransferWithinNDB.fundTransferWithinNdbId,path=b.fundTransferWithinNDB.fundTransferWithinNdbId,tableAlias=fundtransf0_,className=com.spring.starter.model.FundTransferWithinNDBBreakDown,classAlias=b}
          |  +-[DOT] DotNode: 'fundtransf0_.fund_transfer_within_ndb_id' {propertyName=fundTransferWithinNdbId,dereferenceType=UNKNOWN,getPropertyPath=fundTransferWithinNDB.fundTransferWithinNdbId,path=b.fundTransferWithinNDB,tableAlias=fundtransf0_,className=com.spring.starter.model.FundTransferWithinNDBBreakDown,classAlias=b}
          |  |  +-[ALIAS_REF] IdentNode: 'fundtransf0_.fund_transfer_withinndbbreak_down_id' {alias=b, className=com.spring.starter.model.FundTransferWithinNDBBreakDown, tableAlias=fundtransf0_}
          |  |  \-[IDENT] IdentNode: 'fundTransferWithinNDB' {originalText=fundTransferWithinNDB}
          |  \-[IDENT] IdentNode: 'fundTransferWithinNdbId' {originalText=fundTransferWithinNdbId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=fundTransferWithinNdbId, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:13.185 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.185 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT b FROM com.spring.starter.model.FundTransferWithinNDBBreakDown b WHERE b.fundTransferWithinNDB.fundTransferWithinNdbId =:fundTransferWithinNdbId
2018-11-06 22:45:13.185 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select fundtransf0_.fund_transfer_withinndbbreak_down_id as fund_tra1_53_, fundtransf0_.amount as amount2_53_, fundtransf0_.comment as comment3_53_, fundtransf0_.fund_transfer_within_ndb_id as fund_tr13_53_, fundtransf0_.value_of100notes as value_of4_53_, fundtransf0_.value_of10notes as value_of5_53_, fundtransf0_.value_of2000notes as value_of6_53_, fundtransf0_.value_of20notes as value_of7_53_, fundtransf0_.value_of5000notes as value_of8_53_, fundtransf0_.value_of500notes as value_of9_53_, fundtransf0_.value_of50notes as value_o10_53_, fundtransf0_.value_ofcoins as value_o11_53_, fundtransf0_.valueof1000notes as valueof12_53_ from fund_transfer_within_ndb_break_down fundtransf0_ where fundtransf0_.fund_transfer_within_ndb_id=?
2018-11-06 22:45:13.186 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.212 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT ib FROM com.spring.starter.model.InternetBanking ib WHERE ib.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:13.212 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.212 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'InternetBanking'
    |  |     \-[ALIAS] Node: 'ib'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'ib'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'ib'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:13.213 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.213 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.InternetBanking (ib) -> internetba0_
2018-11-06 22:45:13.213 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ib -> internetba0_.internet_banking_id
2018-11-06 22:45:13.213 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ib -> internetba0_.internet_banking_id
2018-11-06 22:45:13.213 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:13.213 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.InternetBanking does not require a join.
2018-11-06 22:45:13.213 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:13.213 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ib.customerServiceRequest -> internetba0_.csr_id
2018-11-06 22:45:13.213 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:13.213 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ib.customerServiceRequest.customerServiceRequestId -> internetba0_.csr_id
2018-11-06 22:45:13.214 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.214 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} internetba0_.internet_banking_id ) ( FromClause{level=1} internet_banking internetba0_ ) ( WHERE ( = ( internetba0_.csr_id ( internetba0_.csr_id internetba0_.internet_banking_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:13.214 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [internet_banking internetba0_]
2018-11-06 22:45:13.214 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.214 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (internet_banking)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'internetba0_.internet_banking_id as internet1_59_' {alias=ib, className=com.spring.starter.model.InternetBanking, tableAlias=internetba0_}
    |  \-[SQL_TOKEN] SqlFragment: 'internetba0_.active_user as active_u2_59_, internetba0_.cansel_internet_banking as cansel_i3_59_, internetba0_.csr_id as csr_id7_59_, internetba0_.inactive_user as inactive4_59_, internetba0_.internet_banking_user_id as internet5_59_, internetba0_.soft_reject as soft_rej6_59_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[ib], fromElementByTableAlias=[internetba0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'internet_banking internetba0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=ib,role=null,tableName=internet_banking,tableAlias=internetba0_,origin=null,columns={,className=com.spring.starter.model.InternetBanking}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'internetba0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=ib.customerServiceRequest.customerServiceRequestId,tableAlias=internetba0_,className=com.spring.starter.model.InternetBanking,classAlias=ib}
          |  +-[DOT] DotNode: 'internetba0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=ib.customerServiceRequest,tableAlias=internetba0_,className=com.spring.starter.model.InternetBanking,classAlias=ib}
          |  |  +-[ALIAS_REF] IdentNode: 'internetba0_.internet_banking_id' {alias=ib, className=com.spring.starter.model.InternetBanking, tableAlias=internetba0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:13.214 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.214 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT ib FROM com.spring.starter.model.InternetBanking ib WHERE ib.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:13.214 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select internetba0_.internet_banking_id as internet1_59_, internetba0_.active_user as active_u2_59_, internetba0_.cansel_internet_banking as cansel_i3_59_, internetba0_.csr_id as csr_id7_59_, internetba0_.inactive_user as inactive4_59_, internetba0_.internet_banking_user_id as internet5_59_, internetba0_.soft_reject as soft_rej6_59_ from internet_banking internetba0_ where internetba0_.csr_id=?
2018-11-06 22:45:13.214 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.234 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT eia FROM com.spring.starter.model.ExcludeInternetAccount eia WHERE eia.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:13.234 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.234 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'ExcludeInternetAccount'
    |  |     \-[ALIAS] Node: 'eia'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'eia'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'eia'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:13.234 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.234 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.ExcludeInternetAccount (eia) -> excludeint0_
2018-11-06 22:45:13.234 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : eia -> excludeint0_.exclude_internet_account_id
2018-11-06 22:45:13.234 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : eia -> excludeint0_.exclude_internet_account_id
2018-11-06 22:45:13.234 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:13.234 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.ExcludeInternetAccount does not require a join.
2018-11-06 22:45:13.234 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:13.234 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : eia.customerServiceRequest -> excludeint0_.csr_id
2018-11-06 22:45:13.234 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:13.234 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : eia.customerServiceRequest.customerServiceRequestId -> excludeint0_.csr_id
2018-11-06 22:45:13.235 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.235 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} excludeint0_.exclude_internet_account_id ) ( FromClause{level=1} exclude_internet_account excludeint0_ ) ( WHERE ( = ( excludeint0_.csr_id ( excludeint0_.csr_id excludeint0_.exclude_internet_account_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:13.235 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [exclude_internet_account excludeint0_]
2018-11-06 22:45:13.235 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.235 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (exclude_internet_account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'excludeint0_.exclude_internet_account_id as exclude_1_41_' {alias=eia, className=com.spring.starter.model.ExcludeInternetAccount, tableAlias=excludeint0_}
    |  \-[SQL_TOKEN] SqlFragment: 'excludeint0_.csr_id as csr_id4_41_, excludeint0_.existing_banking_user_id as existing2_41_, excludeint0_.soft_reject as soft_rej3_41_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[eia], fromElementByTableAlias=[excludeint0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'exclude_internet_account excludeint0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=eia,role=null,tableName=exclude_internet_account,tableAlias=excludeint0_,origin=null,columns={,className=com.spring.starter.model.ExcludeInternetAccount}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'excludeint0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=eia.customerServiceRequest.customerServiceRequestId,tableAlias=excludeint0_,className=com.spring.starter.model.ExcludeInternetAccount,classAlias=eia}
          |  +-[DOT] DotNode: 'excludeint0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=eia.customerServiceRequest,tableAlias=excludeint0_,className=com.spring.starter.model.ExcludeInternetAccount,classAlias=eia}
          |  |  +-[ALIAS_REF] IdentNode: 'excludeint0_.exclude_internet_account_id' {alias=eia, className=com.spring.starter.model.ExcludeInternetAccount, tableAlias=excludeint0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:13.235 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.235 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT eia FROM com.spring.starter.model.ExcludeInternetAccount eia WHERE eia.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:13.235 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select excludeint0_.exclude_internet_account_id as exclude_1_41_, excludeint0_.csr_id as csr_id4_41_, excludeint0_.existing_banking_user_id as existing2_41_, excludeint0_.soft_reject as soft_rej3_41_ from exclude_internet_account excludeint0_ where excludeint0_.csr_id=?
2018-11-06 22:45:13.235 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.250 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT rl FROM com.spring.starter.model.ReissueLoginPasswordModel rl WHERE rl.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:13.250 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.250 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'ReissueLoginPasswordModel'
    |  |     \-[ALIAS] Node: 'rl'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'rl'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'rl'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:13.250 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.250 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.ReissueLoginPasswordModel (rl) -> reissuelog0_
2018-11-06 22:45:13.251 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : rl -> reissuelog0_.reissue_login_password_model_id
2018-11-06 22:45:13.251 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : rl -> reissuelog0_.reissue_login_password_model_id
2018-11-06 22:45:13.251 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:13.251 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.ReissueLoginPasswordModel does not require a join.
2018-11-06 22:45:13.251 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:13.251 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : rl.customerServiceRequest -> reissuelog0_.csr_id
2018-11-06 22:45:13.251 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:13.251 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : rl.customerServiceRequest.customerServiceRequestId -> reissuelog0_.csr_id
2018-11-06 22:45:13.253 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.253 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} reissuelog0_.reissue_login_password_model_id ) ( FromClause{level=1} reissue_login_password_model reissuelog0_ ) ( WHERE ( = ( reissuelog0_.csr_id ( reissuelog0_.csr_id reissuelog0_.reissue_login_password_model_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:13.253 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [reissue_login_password_model reissuelog0_]
2018-11-06 22:45:13.253 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.253 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (reissue_login_password_model)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'reissuelog0_.reissue_login_password_model_id as reissue_1_76_' {alias=rl, className=com.spring.starter.model.ReissueLoginPasswordModel, tableAlias=reissuelog0_}
    |  \-[SQL_TOKEN] SqlFragment: 'reissuelog0_.addresss as addresss2_76_, reissuelog0_.at_branch as at_branc3_76_, reissuelog0_.banking_user_id as banking_4_76_, reissuelog0_.branch_id as branch_i8_76_, reissuelog0_.csr_id as csr_id9_76_, reissuelog0_.post_to_address as post_to_5_76_, reissuelog0_.post_to_correspondence_address as post_to_6_76_, reissuelog0_.soft_reject as soft_rej7_76_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[rl], fromElementByTableAlias=[reissuelog0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'reissue_login_password_model reissuelog0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=rl,role=null,tableName=reissue_login_password_model,tableAlias=reissuelog0_,origin=null,columns={,className=com.spring.starter.model.ReissueLoginPasswordModel}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'reissuelog0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=rl.customerServiceRequest.customerServiceRequestId,tableAlias=reissuelog0_,className=com.spring.starter.model.ReissueLoginPasswordModel,classAlias=rl}
          |  +-[DOT] DotNode: 'reissuelog0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=rl.customerServiceRequest,tableAlias=reissuelog0_,className=com.spring.starter.model.ReissueLoginPasswordModel,classAlias=rl}
          |  |  +-[ALIAS_REF] IdentNode: 'reissuelog0_.reissue_login_password_model_id' {alias=rl, className=com.spring.starter.model.ReissueLoginPasswordModel, tableAlias=reissuelog0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:13.253 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.253 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT rl FROM com.spring.starter.model.ReissueLoginPasswordModel rl WHERE rl.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:13.253 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select reissuelog0_.reissue_login_password_model_id as reissue_1_76_, reissuelog0_.addresss as addresss2_76_, reissuelog0_.at_branch as at_branc3_76_, reissuelog0_.banking_user_id as banking_4_76_, reissuelog0_.branch_id as branch_i8_76_, reissuelog0_.csr_id as csr_id9_76_, reissuelog0_.post_to_address as post_to_5_76_, reissuelog0_.post_to_correspondence_address as post_to_6_76_, reissuelog0_.soft_reject as soft_rej7_76_ from reissue_login_password_model reissuelog0_ where reissuelog0_.csr_id=?
2018-11-06 22:45:13.254 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.265 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT la FROM com.spring.starter.model.LinkAccountModel la WHERE la.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:13.265 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.265 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'LinkAccountModel'
    |  |     \-[ALIAS] Node: 'la'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'la'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'la'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:13.265 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.265 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.LinkAccountModel (la) -> linkaccoun0_
2018-11-06 22:45:13.265 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : la -> linkaccoun0_.link_account_model_id
2018-11-06 22:45:13.265 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : la -> linkaccoun0_.link_account_model_id
2018-11-06 22:45:13.265 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:13.266 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.LinkAccountModel does not require a join.
2018-11-06 22:45:13.266 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:13.266 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : la.customerServiceRequest -> linkaccoun0_.csr_id
2018-11-06 22:45:13.266 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:13.266 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : la.customerServiceRequest.customerServiceRequestId -> linkaccoun0_.csr_id
2018-11-06 22:45:13.270 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.270 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} linkaccoun0_.link_account_model_id ) ( FromClause{level=1} link_account_model linkaccoun0_ ) ( WHERE ( = ( linkaccoun0_.csr_id ( linkaccoun0_.csr_id linkaccoun0_.link_account_model_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:13.270 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [link_account_model linkaccoun0_]
2018-11-06 22:45:13.270 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.270 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (link_account_model)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'linkaccoun0_.link_account_model_id as link_acc1_64_' {alias=la, className=com.spring.starter.model.LinkAccountModel, tableAlias=linkaccoun0_}
    |  \-[SQL_TOKEN] SqlFragment: 'linkaccoun0_.csr_id as csr_id4_64_, linkaccoun0_.existing_banking_user_id as existing2_64_, linkaccoun0_.soft_reject as soft_rej3_64_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[la], fromElementByTableAlias=[linkaccoun0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'link_account_model linkaccoun0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=la,role=null,tableName=link_account_model,tableAlias=linkaccoun0_,origin=null,columns={,className=com.spring.starter.model.LinkAccountModel}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'linkaccoun0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=la.customerServiceRequest.customerServiceRequestId,tableAlias=linkaccoun0_,className=com.spring.starter.model.LinkAccountModel,classAlias=la}
          |  +-[DOT] DotNode: 'linkaccoun0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=la.customerServiceRequest,tableAlias=linkaccoun0_,className=com.spring.starter.model.LinkAccountModel,classAlias=la}
          |  |  +-[ALIAS_REF] IdentNode: 'linkaccoun0_.link_account_model_id' {alias=la, className=com.spring.starter.model.LinkAccountModel, tableAlias=linkaccoun0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:13.270 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.270 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT la FROM com.spring.starter.model.LinkAccountModel la WHERE la.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:13.270 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select linkaccoun0_.link_account_model_id as link_acc1_64_, linkaccoun0_.csr_id as csr_id4_64_, linkaccoun0_.existing_banking_user_id as existing2_64_, linkaccoun0_.soft_reject as soft_rej3_64_ from link_account_model linkaccoun0_ where linkaccoun0_.csr_id=?
2018-11-06 22:45:13.271 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.315 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT u FROM com.spring.starter.model.StaffUser u WHERE u.username=?1 AND u.active = 1
2018-11-06 22:45:13.315 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.315 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'StaffUser'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'username'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'u'
             |  \-[IDENT] Node: 'active'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:13.316 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.316 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.StaffUser (u) -> staffuser0_
2018-11-06 22:45:13.316 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u -> staffuser0_.staff_id
2018-11-06 22:45:13.316 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u -> staffuser0_.staff_id
2018-11-06 22:45:13.316 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : username -> org.hibernate.type.StringType@f620100
2018-11-06 22:45:13.316 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u.username -> staffuser0_.username
2018-11-06 22:45:13.316 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u -> staffuser0_.staff_id
2018-11-06 22:45:13.316 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : active -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:13.316 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u.active -> staffuser0_.active
2018-11-06 22:45:13.316 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.317 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} staffuser0_.staff_id ) ( FromClause{level=1} staff_user staffuser0_ ) ( WHERE ( AND ( = ( staffuser0_.username staffuser0_.staff_id username ) ? ) ( = ( staffuser0_.active staffuser0_.staff_id active ) 1 ) ) ) )
2018-11-06 22:45:13.320 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [staff_user staffuser0_]
2018-11-06 22:45:13.320 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.320 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (staff_user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'staffuser0_.staff_id as staff_id1_88_' {alias=u, className=com.spring.starter.model.StaffUser, tableAlias=staffuser0_}
    |  \-[SQL_TOKEN] SqlFragment: 'staffuser0_.name as name2_88_, staffuser0_.active as active3_88_, staffuser0_.branch_id as branch_10_88_, staffuser0_.browser_key as browser_4_88_, staffuser0_.client_key as client_k5_88_, staffuser0_.email as email6_88_, staffuser0_.epf_number as epf_numb7_88_, staffuser0_.password as password8_88_, staffuser0_.role_id as role_id11_88_, staffuser0_.username as username9_88_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[staffuser0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'staff_user staffuser0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=staff_user,tableAlias=staffuser0_,origin=null,columns={,className=com.spring.starter.model.StaffUser}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'staffuser0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=staffuser0_,className=com.spring.starter.model.StaffUser,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'staffuser0_.staff_id' {alias=u, className=com.spring.starter.model.StaffUser, tableAlias=staffuser0_}
          |  |  \-[IDENT] IdentNode: 'username' {originalText=username}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@f620100}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'staffuser0_.active' {propertyName=active,dereferenceType=PRIMITIVE,getPropertyPath=active,path=u.active,tableAlias=staffuser0_,className=com.spring.starter.model.StaffUser,classAlias=u}
             |  +-[ALIAS_REF] IdentNode: 'staffuser0_.staff_id' {alias=u, className=com.spring.starter.model.StaffUser, tableAlias=staffuser0_}
             |  \-[IDENT] IdentNode: 'active' {originalText=active}
             \-[NUM_INT] LiteralNode: '1'

2018-11-06 22:45:13.320 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.320 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT u FROM com.spring.starter.model.StaffUser u WHERE u.username=?1 AND u.active = 1
2018-11-06 22:45:13.320 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select staffuser0_.staff_id as staff_id1_88_, staffuser0_.name as name2_88_, staffuser0_.active as active3_88_, staffuser0_.branch_id as branch_10_88_, staffuser0_.browser_key as browser_4_88_, staffuser0_.client_key as client_k5_88_, staffuser0_.email as email6_88_, staffuser0_.epf_number as epf_numb7_88_, staffuser0_.password as password8_88_, staffuser0_.role_id as role_id11_88_, staffuser0_.username as username9_88_ from staff_user staffuser0_ where staffuser0_.username=? and staffuser0_.active=1
2018-11-06 22:45:13.321 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.322 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT u FROM com.spring.starter.model.StaffUser u WHERE u.username = ?1 AND password = ?2
2018-11-06 22:45:13.322 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.322 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'StaffUser'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'username'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'password'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-11-06 22:45:13.322 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.323 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.StaffUser (u) -> staffuser0_
2018-11-06 22:45:13.323 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u -> staffuser0_.staff_id
2018-11-06 22:45:13.323 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u -> staffuser0_.staff_id
2018-11-06 22:45:13.323 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : username -> org.hibernate.type.StringType@f620100
2018-11-06 22:45:13.323 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u.username -> staffuser0_.username
2018-11-06 22:45:13.323 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : {synthetic-alias} -> {synthetic-alias}
2018-11-06 22:45:13.323 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : password -> org.hibernate.type.StringType@f620100
2018-11-06 22:45:13.323 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : {synthetic-alias}.password -> staffuser0_.password
2018-11-06 22:45:13.323 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.323 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} staffuser0_.staff_id ) ( FromClause{level=1} staff_user staffuser0_ ) ( WHERE ( AND ( = ( staffuser0_.username staffuser0_.staff_id username ) ? ) ( = ( staffuser0_.password {synthetic-alias} password ) ? ) ) ) )
2018-11-06 22:45:13.327 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [staff_user staffuser0_]
2018-11-06 22:45:13.327 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.327 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (staff_user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'staffuser0_.staff_id as staff_id1_88_' {alias=u, className=com.spring.starter.model.StaffUser, tableAlias=staffuser0_}
    |  \-[SQL_TOKEN] SqlFragment: 'staffuser0_.name as name2_88_, staffuser0_.active as active3_88_, staffuser0_.branch_id as branch_10_88_, staffuser0_.browser_key as browser_4_88_, staffuser0_.client_key as client_k5_88_, staffuser0_.email as email6_88_, staffuser0_.epf_number as epf_numb7_88_, staffuser0_.password as password8_88_, staffuser0_.role_id as role_id11_88_, staffuser0_.username as username9_88_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[staffuser0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'staff_user staffuser0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=staff_user,tableAlias=staffuser0_,origin=null,columns={,className=com.spring.starter.model.StaffUser}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'staffuser0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=staffuser0_,className=com.spring.starter.model.StaffUser,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'staffuser0_.staff_id' {alias=u, className=com.spring.starter.model.StaffUser, tableAlias=staffuser0_}
          |  |  \-[IDENT] IdentNode: 'username' {originalText=username}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@f620100}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'staffuser0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path={synthetic-alias}.password,tableAlias=staffuser0_,className=com.spring.starter.model.StaffUser,classAlias=u}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@f620100}

2018-11-06 22:45:13.327 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.327 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT u FROM com.spring.starter.model.StaffUser u WHERE u.username = ?1 AND password = ?2
2018-11-06 22:45:13.327 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select staffuser0_.staff_id as staff_id1_88_, staffuser0_.name as name2_88_, staffuser0_.active as active3_88_, staffuser0_.branch_id as branch_10_88_, staffuser0_.browser_key as browser_4_88_, staffuser0_.client_key as client_k5_88_, staffuser0_.email as email6_88_, staffuser0_.epf_number as epf_numb7_88_, staffuser0_.password as password8_88_, staffuser0_.role_id as role_id11_88_, staffuser0_.username as username9_88_ from staff_user staffuser0_ where staffuser0_.username=? and staffuser0_.password=?
2018-11-06 22:45:13.329 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.330 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT u FROM com.spring.starter.model.StaffUser u WHERE u.email=?1
2018-11-06 22:45:13.330 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.330 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'StaffUser'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'email'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:13.331 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.331 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.StaffUser (u) -> staffuser0_
2018-11-06 22:45:13.331 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u -> staffuser0_.staff_id
2018-11-06 22:45:13.331 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u -> staffuser0_.staff_id
2018-11-06 22:45:13.331 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : email -> org.hibernate.type.StringType@f620100
2018-11-06 22:45:13.331 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u.email -> staffuser0_.email
2018-11-06 22:45:13.331 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.331 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} staffuser0_.staff_id ) ( FromClause{level=1} staff_user staffuser0_ ) ( WHERE ( = ( staffuser0_.email staffuser0_.staff_id email ) ? ) ) )
2018-11-06 22:45:13.331 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [staff_user staffuser0_]
2018-11-06 22:45:13.331 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.331 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (staff_user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'staffuser0_.staff_id as staff_id1_88_' {alias=u, className=com.spring.starter.model.StaffUser, tableAlias=staffuser0_}
    |  \-[SQL_TOKEN] SqlFragment: 'staffuser0_.name as name2_88_, staffuser0_.active as active3_88_, staffuser0_.branch_id as branch_10_88_, staffuser0_.browser_key as browser_4_88_, staffuser0_.client_key as client_k5_88_, staffuser0_.email as email6_88_, staffuser0_.epf_number as epf_numb7_88_, staffuser0_.password as password8_88_, staffuser0_.role_id as role_id11_88_, staffuser0_.username as username9_88_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[staffuser0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'staff_user staffuser0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=staff_user,tableAlias=staffuser0_,origin=null,columns={,className=com.spring.starter.model.StaffUser}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'staffuser0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=staffuser0_,className=com.spring.starter.model.StaffUser,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'staffuser0_.staff_id' {alias=u, className=com.spring.starter.model.StaffUser, tableAlias=staffuser0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@f620100}

2018-11-06 22:45:13.335 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.335 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT u FROM com.spring.starter.model.StaffUser u WHERE u.email=?1
2018-11-06 22:45:13.335 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select staffuser0_.staff_id as staff_id1_88_, staffuser0_.name as name2_88_, staffuser0_.active as active3_88_, staffuser0_.branch_id as branch_10_88_, staffuser0_.browser_key as browser_4_88_, staffuser0_.client_key as client_k5_88_, staffuser0_.email as email6_88_, staffuser0_.epf_number as epf_numb7_88_, staffuser0_.password as password8_88_, staffuser0_.role_id as role_id11_88_, staffuser0_.username as username9_88_ from staff_user staffuser0_ where staffuser0_.email=?
2018-11-06 22:45:13.335 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.336 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT u FROM com.spring.starter.model.StaffUser u WHERE u.active = 0
2018-11-06 22:45:13.336 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.336 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'StaffUser'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'active'
          \-[NUM_INT] Node: '0'

2018-11-06 22:45:13.336 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.336 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.StaffUser (u) -> staffuser0_
2018-11-06 22:45:13.336 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u -> staffuser0_.staff_id
2018-11-06 22:45:13.337 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u -> staffuser0_.staff_id
2018-11-06 22:45:13.337 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : active -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:13.337 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u.active -> staffuser0_.active
2018-11-06 22:45:13.337 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.337 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} staffuser0_.staff_id ) ( FromClause{level=1} staff_user staffuser0_ ) ( WHERE ( = ( staffuser0_.active staffuser0_.staff_id active ) 0 ) ) )
2018-11-06 22:45:13.337 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [staff_user staffuser0_]
2018-11-06 22:45:13.337 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.337 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (staff_user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'staffuser0_.staff_id as staff_id1_88_' {alias=u, className=com.spring.starter.model.StaffUser, tableAlias=staffuser0_}
    |  \-[SQL_TOKEN] SqlFragment: 'staffuser0_.name as name2_88_, staffuser0_.active as active3_88_, staffuser0_.branch_id as branch_10_88_, staffuser0_.browser_key as browser_4_88_, staffuser0_.client_key as client_k5_88_, staffuser0_.email as email6_88_, staffuser0_.epf_number as epf_numb7_88_, staffuser0_.password as password8_88_, staffuser0_.role_id as role_id11_88_, staffuser0_.username as username9_88_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[staffuser0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'staff_user staffuser0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=staff_user,tableAlias=staffuser0_,origin=null,columns={,className=com.spring.starter.model.StaffUser}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'staffuser0_.active' {propertyName=active,dereferenceType=PRIMITIVE,getPropertyPath=active,path=u.active,tableAlias=staffuser0_,className=com.spring.starter.model.StaffUser,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'staffuser0_.staff_id' {alias=u, className=com.spring.starter.model.StaffUser, tableAlias=staffuser0_}
          |  \-[IDENT] IdentNode: 'active' {originalText=active}
          \-[NUM_INT] LiteralNode: '0'

2018-11-06 22:45:13.341 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.341 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT u FROM com.spring.starter.model.StaffUser u WHERE u.active = 0
2018-11-06 22:45:13.341 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select staffuser0_.staff_id as staff_id1_88_, staffuser0_.name as name2_88_, staffuser0_.active as active3_88_, staffuser0_.branch_id as branch_10_88_, staffuser0_.browser_key as browser_4_88_, staffuser0_.client_key as client_k5_88_, staffuser0_.email as email6_88_, staffuser0_.epf_number as epf_numb7_88_, staffuser0_.password as password8_88_, staffuser0_.role_id as role_id11_88_, staffuser0_.username as username9_88_ from staff_user staffuser0_ where staffuser0_.active=0
2018-11-06 22:45:13.341 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.342 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT u FROM com.spring.starter.model.StaffUser u WHERE u.epfNumber=?1
2018-11-06 22:45:13.342 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.342 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'StaffUser'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'epfNumber'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:13.342 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.343 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.StaffUser (u) -> staffuser0_
2018-11-06 22:45:13.343 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u -> staffuser0_.staff_id
2018-11-06 22:45:13.343 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u -> staffuser0_.staff_id
2018-11-06 22:45:13.343 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : epfNumber -> org.hibernate.type.StringType@f620100
2018-11-06 22:45:13.343 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u.epfNumber -> staffuser0_.epf_number
2018-11-06 22:45:13.343 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.343 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} staffuser0_.staff_id ) ( FromClause{level=1} staff_user staffuser0_ ) ( WHERE ( = ( staffuser0_.epf_number staffuser0_.staff_id epfNumber ) ? ) ) )
2018-11-06 22:45:13.343 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [staff_user staffuser0_]
2018-11-06 22:45:13.343 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.343 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (staff_user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'staffuser0_.staff_id as staff_id1_88_' {alias=u, className=com.spring.starter.model.StaffUser, tableAlias=staffuser0_}
    |  \-[SQL_TOKEN] SqlFragment: 'staffuser0_.name as name2_88_, staffuser0_.active as active3_88_, staffuser0_.branch_id as branch_10_88_, staffuser0_.browser_key as browser_4_88_, staffuser0_.client_key as client_k5_88_, staffuser0_.email as email6_88_, staffuser0_.epf_number as epf_numb7_88_, staffuser0_.password as password8_88_, staffuser0_.role_id as role_id11_88_, staffuser0_.username as username9_88_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[staffuser0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'staff_user staffuser0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=staff_user,tableAlias=staffuser0_,origin=null,columns={,className=com.spring.starter.model.StaffUser}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'staffuser0_.epf_number' {propertyName=epfNumber,dereferenceType=PRIMITIVE,getPropertyPath=epfNumber,path=u.epfNumber,tableAlias=staffuser0_,className=com.spring.starter.model.StaffUser,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'staffuser0_.staff_id' {alias=u, className=com.spring.starter.model.StaffUser, tableAlias=staffuser0_}
          |  \-[IDENT] IdentNode: 'epfNumber' {originalText=epfNumber}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@f620100}

2018-11-06 22:45:13.347 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.347 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT u FROM com.spring.starter.model.StaffUser u WHERE u.epfNumber=?1
2018-11-06 22:45:13.347 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select staffuser0_.staff_id as staff_id1_88_, staffuser0_.name as name2_88_, staffuser0_.active as active3_88_, staffuser0_.branch_id as branch_10_88_, staffuser0_.browser_key as browser_4_88_, staffuser0_.client_key as client_k5_88_, staffuser0_.email as email6_88_, staffuser0_.epf_number as epf_numb7_88_, staffuser0_.password as password8_88_, staffuser0_.role_id as role_id11_88_, staffuser0_.username as username9_88_ from staff_user staffuser0_ where staffuser0_.epf_number=?
2018-11-06 22:45:13.347 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.348 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT u FROM com.spring.starter.model.StaffUser u WHERE u.active = 1
2018-11-06 22:45:13.348 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.349 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'StaffUser'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'active'
          \-[NUM_INT] Node: '1'

2018-11-06 22:45:13.349 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.349 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.StaffUser (u) -> staffuser0_
2018-11-06 22:45:13.349 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u -> staffuser0_.staff_id
2018-11-06 22:45:13.349 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u -> staffuser0_.staff_id
2018-11-06 22:45:13.349 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : active -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:13.349 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u.active -> staffuser0_.active
2018-11-06 22:45:13.349 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.349 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} staffuser0_.staff_id ) ( FromClause{level=1} staff_user staffuser0_ ) ( WHERE ( = ( staffuser0_.active staffuser0_.staff_id active ) 1 ) ) )
2018-11-06 22:45:13.349 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [staff_user staffuser0_]
2018-11-06 22:45:13.349 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.349 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (staff_user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'staffuser0_.staff_id as staff_id1_88_' {alias=u, className=com.spring.starter.model.StaffUser, tableAlias=staffuser0_}
    |  \-[SQL_TOKEN] SqlFragment: 'staffuser0_.name as name2_88_, staffuser0_.active as active3_88_, staffuser0_.branch_id as branch_10_88_, staffuser0_.browser_key as browser_4_88_, staffuser0_.client_key as client_k5_88_, staffuser0_.email as email6_88_, staffuser0_.epf_number as epf_numb7_88_, staffuser0_.password as password8_88_, staffuser0_.role_id as role_id11_88_, staffuser0_.username as username9_88_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[staffuser0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'staff_user staffuser0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=staff_user,tableAlias=staffuser0_,origin=null,columns={,className=com.spring.starter.model.StaffUser}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'staffuser0_.active' {propertyName=active,dereferenceType=PRIMITIVE,getPropertyPath=active,path=u.active,tableAlias=staffuser0_,className=com.spring.starter.model.StaffUser,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'staffuser0_.staff_id' {alias=u, className=com.spring.starter.model.StaffUser, tableAlias=staffuser0_}
          |  \-[IDENT] IdentNode: 'active' {originalText=active}
          \-[NUM_INT] LiteralNode: '1'

2018-11-06 22:45:13.350 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.350 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT u FROM com.spring.starter.model.StaffUser u WHERE u.active = 1
2018-11-06 22:45:13.350 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select staffuser0_.staff_id as staff_id1_88_, staffuser0_.name as name2_88_, staffuser0_.active as active3_88_, staffuser0_.branch_id as branch_10_88_, staffuser0_.browser_key as browser_4_88_, staffuser0_.client_key as client_k5_88_, staffuser0_.email as email6_88_, staffuser0_.epf_number as epf_numb7_88_, staffuser0_.password as password8_88_, staffuser0_.role_id as role_id11_88_, staffuser0_.username as username9_88_ from staff_user staffuser0_ where staffuser0_.active=1
2018-11-06 22:45:13.350 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.351 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT u FROM com.spring.starter.model.StaffUser u WHERE u.username=?1
2018-11-06 22:45:13.351 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.351 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'StaffUser'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:13.351 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.352 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.StaffUser (u) -> staffuser0_
2018-11-06 22:45:13.352 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u -> staffuser0_.staff_id
2018-11-06 22:45:13.352 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u -> staffuser0_.staff_id
2018-11-06 22:45:13.352 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : username -> org.hibernate.type.StringType@f620100
2018-11-06 22:45:13.352 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u.username -> staffuser0_.username
2018-11-06 22:45:13.352 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.352 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} staffuser0_.staff_id ) ( FromClause{level=1} staff_user staffuser0_ ) ( WHERE ( = ( staffuser0_.username staffuser0_.staff_id username ) ? ) ) )
2018-11-06 22:45:13.352 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [staff_user staffuser0_]
2018-11-06 22:45:13.352 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.352 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (staff_user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'staffuser0_.staff_id as staff_id1_88_' {alias=u, className=com.spring.starter.model.StaffUser, tableAlias=staffuser0_}
    |  \-[SQL_TOKEN] SqlFragment: 'staffuser0_.name as name2_88_, staffuser0_.active as active3_88_, staffuser0_.branch_id as branch_10_88_, staffuser0_.browser_key as browser_4_88_, staffuser0_.client_key as client_k5_88_, staffuser0_.email as email6_88_, staffuser0_.epf_number as epf_numb7_88_, staffuser0_.password as password8_88_, staffuser0_.role_id as role_id11_88_, staffuser0_.username as username9_88_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[staffuser0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'staff_user staffuser0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=staff_user,tableAlias=staffuser0_,origin=null,columns={,className=com.spring.starter.model.StaffUser}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'staffuser0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=staffuser0_,className=com.spring.starter.model.StaffUser,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'staffuser0_.staff_id' {alias=u, className=com.spring.starter.model.StaffUser, tableAlias=staffuser0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@f620100}

2018-11-06 22:45:13.356 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.356 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT u FROM com.spring.starter.model.StaffUser u WHERE u.username=?1
2018-11-06 22:45:13.356 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select staffuser0_.staff_id as staff_id1_88_, staffuser0_.name as name2_88_, staffuser0_.active as active3_88_, staffuser0_.branch_id as branch_10_88_, staffuser0_.browser_key as browser_4_88_, staffuser0_.client_key as client_k5_88_, staffuser0_.email as email6_88_, staffuser0_.epf_number as epf_numb7_88_, staffuser0_.password as password8_88_, staffuser0_.role_id as role_id11_88_, staffuser0_.username as username9_88_ from staff_user staffuser0_ where staffuser0_.username=?
2018-11-06 22:45:13.356 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.390 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT cmm FROM com.spring.starter.model.ChangeMailingMailModel cmm WHERE cmm.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:13.390 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.390 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'ChangeMailingMailModel'
    |  |     \-[ALIAS] Node: 'cmm'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'cmm'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'cmm'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:13.391 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.391 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.ChangeMailingMailModel (cmm) -> changemail0_
2018-11-06 22:45:13.391 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cmm -> changemail0_.change_mailing_mail_id
2018-11-06 22:45:13.391 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cmm -> changemail0_.change_mailing_mail_id
2018-11-06 22:45:13.391 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:13.391 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.ChangeMailingMailModel does not require a join.
2018-11-06 22:45:13.391 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:13.391 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cmm.customerServiceRequest -> changemail0_.csr_id
2018-11-06 22:45:13.391 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:13.391 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : cmm.customerServiceRequest.customerServiceRequestId -> changemail0_.csr_id
2018-11-06 22:45:13.393 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.393 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} changemail0_.change_mailing_mail_id ) ( FromClause{level=1} change_mailing_mail changemail0_ ) ( WHERE ( = ( changemail0_.csr_id ( changemail0_.csr_id changemail0_.change_mailing_mail_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:13.393 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [change_mailing_mail changemail0_]
2018-11-06 22:45:13.393 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.393 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (change_mailing_mail)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'changemail0_.change_mailing_mail_id as change_m1_20_' {alias=cmm, className=com.spring.starter.model.ChangeMailingMailModel, tableAlias=changemail0_}
    |  \-[SQL_TOKEN] SqlFragment: 'changemail0_.city as city2_20_, changemail0_.csr_id as csr_id7_20_, changemail0_.new_mailing_address as new_mail3_20_, changemail0_.postal_code as postal_c4_20_, changemail0_.soft_reject as soft_rej5_20_, changemail0_.state_or_province as state_or6_20_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cmm], fromElementByTableAlias=[changemail0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'change_mailing_mail changemail0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cmm,role=null,tableName=change_mailing_mail,tableAlias=changemail0_,origin=null,columns={,className=com.spring.starter.model.ChangeMailingMailModel}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'changemail0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=cmm.customerServiceRequest.customerServiceRequestId,tableAlias=changemail0_,className=com.spring.starter.model.ChangeMailingMailModel,classAlias=cmm}
          |  +-[DOT] DotNode: 'changemail0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=cmm.customerServiceRequest,tableAlias=changemail0_,className=com.spring.starter.model.ChangeMailingMailModel,classAlias=cmm}
          |  |  +-[ALIAS_REF] IdentNode: 'changemail0_.change_mailing_mail_id' {alias=cmm, className=com.spring.starter.model.ChangeMailingMailModel, tableAlias=changemail0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:13.393 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.393 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT cmm FROM com.spring.starter.model.ChangeMailingMailModel cmm WHERE cmm.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:13.393 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select changemail0_.change_mailing_mail_id as change_m1_20_, changemail0_.city as city2_20_, changemail0_.csr_id as csr_id7_20_, changemail0_.new_mailing_address as new_mail3_20_, changemail0_.postal_code as postal_c4_20_, changemail0_.soft_reject as soft_rej5_20_, changemail0_.state_or_province as state_or6_20_ from change_mailing_mail changemail0_ where changemail0_.csr_id=?
2018-11-06 22:45:13.394 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.423 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: select c from com.spring.starter.model.OtherServiceRequest  c where c.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:13.423 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.423 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'OtherServiceRequest'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'c'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:13.424 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.424 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.OtherServiceRequest (c) -> otherservi0_
2018-11-06 22:45:13.424 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> otherservi0_.otherid
2018-11-06 22:45:13.424 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> otherservi0_.otherid
2018-11-06 22:45:13.424 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:13.424 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.OtherServiceRequest does not require a join.
2018-11-06 22:45:13.424 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:13.424 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.customerServiceRequest -> otherservi0_.csr_id
2018-11-06 22:45:13.424 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:13.424 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.customerServiceRequest.customerServiceRequestId -> otherservi0_.csr_id
2018-11-06 22:45:13.425 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.425 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} otherservi0_.otherid ) ( FromClause{level=1} other_service_request otherservi0_ ) ( where ( = ( otherservi0_.csr_id ( otherservi0_.csr_id otherservi0_.otherid customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:13.425 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [other_service_request otherservi0_]
2018-11-06 22:45:13.425 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.425 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (other_service_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'otherservi0_.otherid as otherid1_70_' {alias=c, className=com.spring.starter.model.OtherServiceRequest, tableAlias=otherservi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'otherservi0_.csr_id as csr_id5_70_, otherservi0_.date as date2_70_, otherservi0_.request_msg as request_3_70_, otherservi0_.soft_reject as soft_rej4_70_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[otherservi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'other_service_request otherservi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=other_service_request,tableAlias=otherservi0_,origin=null,columns={,className=com.spring.starter.model.OtherServiceRequest}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'otherservi0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=c.customerServiceRequest.customerServiceRequestId,tableAlias=otherservi0_,className=com.spring.starter.model.OtherServiceRequest,classAlias=c}
          |  +-[DOT] DotNode: 'otherservi0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=c.customerServiceRequest,tableAlias=otherservi0_,className=com.spring.starter.model.OtherServiceRequest,classAlias=c}
          |  |  +-[ALIAS_REF] IdentNode: 'otherservi0_.otherid' {alias=c, className=com.spring.starter.model.OtherServiceRequest, tableAlias=otherservi0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:13.425 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.425 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: select c from com.spring.starter.model.OtherServiceRequest  c where c.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:13.425 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select otherservi0_.otherid as otherid1_70_, otherservi0_.csr_id as csr_id5_70_, otherservi0_.date as date2_70_, otherservi0_.request_msg as request_3_70_, otherservi0_.soft_reject as soft_rej4_70_ from other_service_request otherservi0_ where otherservi0_.csr_id=?
2018-11-06 22:45:13.425 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.457 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: select c from com.spring.starter.model.ServiceRequest c where c.digiFormId=?1
2018-11-06 22:45:13.458 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.458 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'ServiceRequest'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'digiFormId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:13.458 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.458 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.ServiceRequest (c) -> servicereq0_
2018-11-06 22:45:13.458 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> servicereq0_.service_request_id
2018-11-06 22:45:13.458 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> servicereq0_.service_request_id
2018-11-06 22:45:13.458 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : digiFormId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:13.458 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.digiFormId -> servicereq0_.digi_form_id
2018-11-06 22:45:13.459 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.459 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} servicereq0_.service_request_id ) ( FromClause{level=1} service_request servicereq0_ ) ( where ( = ( servicereq0_.digi_form_id servicereq0_.service_request_id digiFormId ) ? ) ) )
2018-11-06 22:45:13.459 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [service_request servicereq0_]
2018-11-06 22:45:13.459 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.459 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (service_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'servicereq0_.service_request_id as service_1_81_' {alias=c, className=com.spring.starter.model.ServiceRequest, tableAlias=servicereq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'servicereq0_.digi_form_id as digi_for2_81_, servicereq0_.digi_form_type as digi_for3_81_, servicereq0_.service_request_name as service_4_81_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[servicereq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'service_request servicereq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=service_request,tableAlias=servicereq0_,origin=null,columns={,className=com.spring.starter.model.ServiceRequest}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'servicereq0_.digi_form_id' {propertyName=digiFormId,dereferenceType=PRIMITIVE,getPropertyPath=digiFormId,path=c.digiFormId,tableAlias=servicereq0_,className=com.spring.starter.model.ServiceRequest,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'servicereq0_.service_request_id' {alias=c, className=com.spring.starter.model.ServiceRequest, tableAlias=servicereq0_}
          |  \-[IDENT] IdentNode: 'digiFormId' {originalText=digiFormId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:13.459 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.459 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: select c from com.spring.starter.model.ServiceRequest c where c.digiFormId=?1
2018-11-06 22:45:13.459 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select servicereq0_.service_request_id as service_1_81_, servicereq0_.digi_form_id as digi_for2_81_, servicereq0_.digi_form_type as digi_for3_81_, servicereq0_.service_request_name as service_4_81_ from service_request servicereq0_ where servicereq0_.digi_form_id=?
2018-11-06 22:45:13.459 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.469 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT ca from com.spring.starter.model.CustomerAccountNo ca WHERE ca.accountNumber= :accountNumber
2018-11-06 22:45:13.469 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.469 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'CustomerAccountNo'
    |  |     \-[ALIAS] Node: 'ca'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'ca'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'ca'
          |  \-[IDENT] Node: 'accountNumber'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'accountNumber'

2018-11-06 22:45:13.469 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.469 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.CustomerAccountNo (ca) -> customerac0_
2018-11-06 22:45:13.470 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ca -> customerac0_.customer_account_no_id
2018-11-06 22:45:13.470 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ca -> customerac0_.customer_account_no_id
2018-11-06 22:45:13.470 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : accountNumber -> org.hibernate.type.StringType@f620100
2018-11-06 22:45:13.470 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : ca.accountNumber -> customerac0_.account_number
2018-11-06 22:45:13.470 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.470 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} customerac0_.customer_account_no_id ) ( FromClause{level=1} customer_account_no customerac0_ ) ( WHERE ( = ( customerac0_.account_number customerac0_.customer_account_no_id accountNumber ) ? ) ) )
2018-11-06 22:45:13.470 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [customer_account_no customerac0_]
2018-11-06 22:45:13.470 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.472 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer_account_no)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerac0_.customer_account_no_id as customer1_31_' {alias=ca, className=com.spring.starter.model.CustomerAccountNo, tableAlias=customerac0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerac0_.account_number as account_2_31_, customerac0_.customer_id as customer3_31_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[ca], fromElementByTableAlias=[customerac0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'customer_account_no customerac0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=ca,role=null,tableName=customer_account_no,tableAlias=customerac0_,origin=null,columns={,className=com.spring.starter.model.CustomerAccountNo}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerac0_.account_number' {propertyName=accountNumber,dereferenceType=PRIMITIVE,getPropertyPath=accountNumber,path=ca.accountNumber,tableAlias=customerac0_,className=com.spring.starter.model.CustomerAccountNo,classAlias=ca}
          |  +-[ALIAS_REF] IdentNode: 'customerac0_.customer_account_no_id' {alias=ca, className=com.spring.starter.model.CustomerAccountNo, tableAlias=customerac0_}
          |  \-[IDENT] IdentNode: 'accountNumber' {originalText=accountNumber}
          \-[NAMED_PARAM] ParameterNode: '?' {name=accountNumber, expectedType=org.hibernate.type.StringType@f620100}

2018-11-06 22:45:13.472 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.472 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT ca from com.spring.starter.model.CustomerAccountNo ca WHERE ca.accountNumber= :accountNumber
2018-11-06 22:45:13.472 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select customerac0_.customer_account_no_id as customer1_31_, customerac0_.account_number as account_2_31_, customerac0_.customer_id as customer3_31_ from customer_account_no customerac0_ where customerac0_.account_number=?
2018-11-06 22:45:13.472 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.482 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT s FROM com.spring.starter.model.SMSAlertsForCreditCard s WHERE s.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:13.482 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.482 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'SMSAlertsForCreditCard'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 's'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 's'
          |  |  \-[IDENT] Node: 'customerServiceRequest'
          |  \-[IDENT] Node: 'customerServiceRequestId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:13.482 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.482 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.SMSAlertsForCreditCard (s) -> smsalertsf0_
2018-11-06 22:45:13.482 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : s -> smsalertsf0_.smsalerts_for_credit_card_id
2018-11-06 22:45:13.482 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : s -> smsalertsf0_.smsalerts_for_credit_card_id
2018-11-06 22:45:13.482 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest -> org.hibernate.type.ManyToOneType(com.spring.starter.model.CustomerServiceRequest)
2018-11-06 22:45:13.483 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property customerServiceRequestId in com.spring.starter.model.SMSAlertsForCreditCard does not require a join.
2018-11-06 22:45:13.483 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'customerServiceRequest.customerServiceRequestId'
2018-11-06 22:45:13.483 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : s.customerServiceRequest -> smsalertsf0_.csr_id
2018-11-06 22:45:13.483 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : customerServiceRequest.customerServiceRequestId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:13.483 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : s.customerServiceRequest.customerServiceRequestId -> smsalertsf0_.csr_id
2018-11-06 22:45:13.485 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.485 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} smsalertsf0_.smsalerts_for_credit_card_id ) ( FromClause{level=1} sms_alerts_for_credit_card smsalertsf0_ ) ( WHERE ( = ( smsalertsf0_.csr_id ( smsalertsf0_.csr_id smsalertsf0_.smsalerts_for_credit_card_id customerServiceRequest ) customerServiceRequestId ) ? ) ) )
2018-11-06 22:45:13.485 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [sms_alerts_for_credit_card smsalertsf0_]
2018-11-06 22:45:13.485 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.485 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (sms_alerts_for_credit_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'smsalertsf0_.smsalerts_for_credit_card_id as smsalert1_85_' {alias=s, className=com.spring.starter.model.SMSAlertsForCreditCard, tableAlias=smsalertsf0_}
    |  \-[SQL_TOKEN] SqlFragment: 'smsalertsf0_.csr_id as csr_id4_85_, smsalertsf0_.mobile_number as mobile_n2_85_, smsalertsf0_.soft_reject as soft_rej3_85_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[smsalertsf0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'sms_alerts_for_credit_card smsalertsf0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=sms_alerts_for_credit_card,tableAlias=smsalertsf0_,origin=null,columns={,className=com.spring.starter.model.SMSAlertsForCreditCard}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'smsalertsf0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=PRIMITIVE,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=s.customerServiceRequest.customerServiceRequestId,tableAlias=smsalertsf0_,className=com.spring.starter.model.SMSAlertsForCreditCard,classAlias=s}
          |  +-[DOT] DotNode: 'smsalertsf0_.csr_id' {propertyName=customerServiceRequestId,dereferenceType=UNKNOWN,getPropertyPath=customerServiceRequest.customerServiceRequestId,path=s.customerServiceRequest,tableAlias=smsalertsf0_,className=com.spring.starter.model.SMSAlertsForCreditCard,classAlias=s}
          |  |  +-[ALIAS_REF] IdentNode: 'smsalertsf0_.smsalerts_for_credit_card_id' {alias=s, className=com.spring.starter.model.SMSAlertsForCreditCard, tableAlias=smsalertsf0_}
          |  |  \-[IDENT] IdentNode: 'customerServiceRequest' {originalText=customerServiceRequest}
          |  \-[IDENT] IdentNode: 'customerServiceRequestId' {originalText=customerServiceRequestId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:13.485 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.485 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT s FROM com.spring.starter.model.SMSAlertsForCreditCard s WHERE s.customerServiceRequest.customerServiceRequestId=?1
2018-11-06 22:45:13.485 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select smsalertsf0_.smsalerts_for_credit_card_id as smsalert1_85_, smsalertsf0_.csr_id as csr_id4_85_, smsalertsf0_.mobile_number as mobile_n2_85_, smsalertsf0_.soft_reject as soft_rej3_85_ from sms_alerts_for_credit_card smsalertsf0_ where smsalertsf0_.csr_id=?
2018-11-06 22:45:13.486 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.495 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT srf FROM com.spring.starter.model.ServiceRequestTif srf WHERE date(srf.date) =?1
2018-11-06 22:45:13.495 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.495 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'ServiceRequestTif'
    |  |     \-[ALIAS] Node: 'srf'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'srf'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'date'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'srf'
          |        \-[IDENT] Node: 'date'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:13.495 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:13.495 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.ServiceRequestTif (srf) -> servicereq0_
2018-11-06 22:45:13.496 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : srf -> servicereq0_.service_request_tif_id
2018-11-06 22:45:13.496 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : srf -> servicereq0_.service_request_tif_id
2018-11-06 22:45:13.496 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : date -> org.hibernate.type.TimestampType@5f023e8d
2018-11-06 22:45:13.496 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : srf.date -> servicereq0_.date
2018-11-06 22:45:13.496 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:13.496 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} servicereq0_.service_request_tif_id ) ( FromClause{level=1} service_request_tif servicereq0_ ) ( WHERE ( = ( ( date ( exprList ( servicereq0_.date servicereq0_.service_request_tif_id date ) ) ) ? ) ) )
2018-11-06 22:45:13.496 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [service_request_tif servicereq0_]
2018-11-06 22:45:13.496 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:13.497 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (service_request_tif)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'servicereq0_.service_request_tif_id as service_1_80_' {alias=srf, className=com.spring.starter.model.ServiceRequestTif, tableAlias=servicereq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'servicereq0_.customer_service_request_id as customer5_80_, servicereq0_.date as date2_80_, servicereq0_.queue_id as queue_id3_80_, servicereq0_.url as url4_80_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[srf], fromElementByTableAlias=[servicereq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'service_request_tif servicereq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=srf,role=null,tableName=service_request_tif,tableAlias=servicereq0_,origin=null,columns={,className=com.spring.starter.model.ServiceRequestTif}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'date' {originalText=date}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'servicereq0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=srf.date,tableAlias=servicereq0_,className=com.spring.starter.model.ServiceRequestTif,classAlias=srf}
          |        +-[ALIAS_REF] IdentNode: 'servicereq0_.service_request_tif_id' {alias=srf, className=com.spring.starter.model.ServiceRequestTif, tableAlias=servicereq0_}
          |        \-[IDENT] IdentNode: 'date' {originalText=date}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.DateType@15167eb1}

2018-11-06 22:45:13.497 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:13.497 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT srf FROM com.spring.starter.model.ServiceRequestTif srf WHERE date(srf.date) =?1
2018-11-06 22:45:13.497 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select servicereq0_.service_request_tif_id as service_1_80_, servicereq0_.customer_service_request_id as customer5_80_, servicereq0_.date as date2_80_, servicereq0_.queue_id as queue_id3_80_, servicereq0_.url as url4_80_ from service_request_tif servicereq0_ where date(servicereq0_.date)=?
2018-11-06 22:45:13.497 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.012 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT t FROM com.spring.starter.model.JwtTokens t WHERE t.token=?1
2018-11-06 22:45:14.012 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.013 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'JwtTokens'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'token'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:14.013 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:14.013 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.JwtTokens (t) -> jwttokens0_
2018-11-06 22:45:14.013 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : t -> jwttokens0_.token_id
2018-11-06 22:45:14.013 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : t -> jwttokens0_.token_id
2018-11-06 22:45:14.013 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : token -> org.hibernate.type.StringType@f620100
2018-11-06 22:45:14.013 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : t.token -> jwttokens0_.token
2018-11-06 22:45:14.013 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:14.013 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} jwttokens0_.token_id ) ( FromClause{level=1} jwt_tokens jwttokens0_ ) ( WHERE ( = ( jwttokens0_.token jwttokens0_.token_id token ) ? ) ) )
2018-11-06 22:45:14.014 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [jwt_tokens jwttokens0_]
2018-11-06 22:45:14.014 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:14.014 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (jwt_tokens)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'jwttokens0_.token_id as token_id1_63_' {alias=t, className=com.spring.starter.model.JwtTokens, tableAlias=jwttokens0_}
    |  \-[SQL_TOKEN] SqlFragment: 'jwttokens0_.is_valied as is_valie2_63_, jwttokens0_.issued_time as issued_t3_63_, jwttokens0_.login_logs_id as login_lo6_63_, jwttokens0_.reject_time as reject_t4_63_, jwttokens0_.staff_id as staff_id7_63_, jwttokens0_.token as token5_63_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[jwttokens0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'jwt_tokens jwttokens0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=jwt_tokens,tableAlias=jwttokens0_,origin=null,columns={,className=com.spring.starter.model.JwtTokens}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'jwttokens0_.token' {propertyName=token,dereferenceType=PRIMITIVE,getPropertyPath=token,path=t.token,tableAlias=jwttokens0_,className=com.spring.starter.model.JwtTokens,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'jwttokens0_.token_id' {alias=t, className=com.spring.starter.model.JwtTokens, tableAlias=jwttokens0_}
          |  \-[IDENT] IdentNode: 'token' {originalText=token}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@f620100}

2018-11-06 22:45:14.014 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.014 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT t FROM com.spring.starter.model.JwtTokens t WHERE t.token=?1
2018-11-06 22:45:14.014 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select jwttokens0_.token_id as token_id1_63_, jwttokens0_.is_valied as is_valie2_63_, jwttokens0_.issued_time as issued_t3_63_, jwttokens0_.login_logs_id as login_lo6_63_, jwttokens0_.reject_time as reject_t4_63_, jwttokens0_.staff_id as staff_id7_63_, jwttokens0_.token as token5_63_ from jwt_tokens jwttokens0_ where jwttokens0_.token=?
2018-11-06 22:45:14.014 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.016 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT t FROM com.spring.starter.model.JwtTokens t WHERE t.staffUser.staffId = ?1
2018-11-06 22:45:14.017 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.017 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'JwtTokens'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 't'
          |  |  \-[IDENT] Node: 'staffUser'
          |  \-[IDENT] Node: 'staffId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:14.017 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:14.017 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.JwtTokens (t) -> jwttokens0_
2018-11-06 22:45:14.017 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : t -> jwttokens0_.token_id
2018-11-06 22:45:14.017 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : t -> jwttokens0_.token_id
2018-11-06 22:45:14.017 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : staffUser -> org.hibernate.type.ManyToOneType(com.spring.starter.model.StaffUser)
2018-11-06 22:45:14.017 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property staffId in com.spring.starter.model.JwtTokens does not require a join.
2018-11-06 22:45:14.017 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'staffUser.staffId'
2018-11-06 22:45:14.017 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : t.staffUser -> jwttokens0_.staff_id
2018-11-06 22:45:14.017 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : staffUser.staffId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:14.017 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : t.staffUser.staffId -> jwttokens0_.staff_id
2018-11-06 22:45:14.018 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:14.021 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} jwttokens0_.token_id ) ( FromClause{level=1} jwt_tokens jwttokens0_ ) ( WHERE ( = ( jwttokens0_.staff_id ( jwttokens0_.staff_id jwttokens0_.token_id staffUser ) staffId ) ? ) ) )
2018-11-06 22:45:14.021 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [jwt_tokens jwttokens0_]
2018-11-06 22:45:14.021 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:14.021 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (jwt_tokens)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'jwttokens0_.token_id as token_id1_63_' {alias=t, className=com.spring.starter.model.JwtTokens, tableAlias=jwttokens0_}
    |  \-[SQL_TOKEN] SqlFragment: 'jwttokens0_.is_valied as is_valie2_63_, jwttokens0_.issued_time as issued_t3_63_, jwttokens0_.login_logs_id as login_lo6_63_, jwttokens0_.reject_time as reject_t4_63_, jwttokens0_.staff_id as staff_id7_63_, jwttokens0_.token as token5_63_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[jwttokens0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'jwt_tokens jwttokens0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=jwt_tokens,tableAlias=jwttokens0_,origin=null,columns={,className=com.spring.starter.model.JwtTokens}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'jwttokens0_.staff_id' {propertyName=staffId,dereferenceType=PRIMITIVE,getPropertyPath=staffUser.staffId,path=t.staffUser.staffId,tableAlias=jwttokens0_,className=com.spring.starter.model.JwtTokens,classAlias=t}
          |  +-[DOT] DotNode: 'jwttokens0_.staff_id' {propertyName=staffId,dereferenceType=UNKNOWN,getPropertyPath=staffUser.staffId,path=t.staffUser,tableAlias=jwttokens0_,className=com.spring.starter.model.JwtTokens,classAlias=t}
          |  |  +-[ALIAS_REF] IdentNode: 'jwttokens0_.token_id' {alias=t, className=com.spring.starter.model.JwtTokens, tableAlias=jwttokens0_}
          |  |  \-[IDENT] IdentNode: 'staffUser' {originalText=staffUser}
          |  \-[IDENT] IdentNode: 'staffId' {originalText=staffId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:14.021 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.021 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT t FROM com.spring.starter.model.JwtTokens t WHERE t.staffUser.staffId = ?1
2018-11-06 22:45:14.021 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select jwttokens0_.token_id as token_id1_63_, jwttokens0_.is_valied as is_valie2_63_, jwttokens0_.issued_time as issued_t3_63_, jwttokens0_.login_logs_id as login_lo6_63_, jwttokens0_.reject_time as reject_t4_63_, jwttokens0_.staff_id as staff_id7_63_, jwttokens0_.token as token5_63_ from jwt_tokens jwttokens0_ where jwttokens0_.staff_id=?
2018-11-06 22:45:14.021 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.024 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT t FROM com.spring.starter.model.JwtTokens t WHERE t.token=?1 AND t.isValied = 1
2018-11-06 22:45:14.024 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.024 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'JwtTokens'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 't'
          |  |  \-[IDENT] Node: 'token'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 't'
             |  \-[IDENT] Node: 'isValied'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:14.024 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:14.024 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.JwtTokens (t) -> jwttokens0_
2018-11-06 22:45:14.025 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : t -> jwttokens0_.token_id
2018-11-06 22:45:14.025 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : t -> jwttokens0_.token_id
2018-11-06 22:45:14.025 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : token -> org.hibernate.type.StringType@f620100
2018-11-06 22:45:14.025 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : t.token -> jwttokens0_.token
2018-11-06 22:45:14.025 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : t -> jwttokens0_.token_id
2018-11-06 22:45:14.025 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : isValied -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:14.025 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : t.isValied -> jwttokens0_.is_valied
2018-11-06 22:45:14.025 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:14.025 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} jwttokens0_.token_id ) ( FromClause{level=1} jwt_tokens jwttokens0_ ) ( WHERE ( AND ( = ( jwttokens0_.token jwttokens0_.token_id token ) ? ) ( = ( jwttokens0_.is_valied jwttokens0_.token_id isValied ) 1 ) ) ) )
2018-11-06 22:45:14.028 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [jwt_tokens jwttokens0_]
2018-11-06 22:45:14.028 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:14.028 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (jwt_tokens)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'jwttokens0_.token_id as token_id1_63_' {alias=t, className=com.spring.starter.model.JwtTokens, tableAlias=jwttokens0_}
    |  \-[SQL_TOKEN] SqlFragment: 'jwttokens0_.is_valied as is_valie2_63_, jwttokens0_.issued_time as issued_t3_63_, jwttokens0_.login_logs_id as login_lo6_63_, jwttokens0_.reject_time as reject_t4_63_, jwttokens0_.staff_id as staff_id7_63_, jwttokens0_.token as token5_63_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[jwttokens0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'jwt_tokens jwttokens0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=jwt_tokens,tableAlias=jwttokens0_,origin=null,columns={,className=com.spring.starter.model.JwtTokens}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'jwttokens0_.token' {propertyName=token,dereferenceType=PRIMITIVE,getPropertyPath=token,path=t.token,tableAlias=jwttokens0_,className=com.spring.starter.model.JwtTokens,classAlias=t}
          |  |  +-[ALIAS_REF] IdentNode: 'jwttokens0_.token_id' {alias=t, className=com.spring.starter.model.JwtTokens, tableAlias=jwttokens0_}
          |  |  \-[IDENT] IdentNode: 'token' {originalText=token}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@f620100}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'jwttokens0_.is_valied' {propertyName=isValied,dereferenceType=PRIMITIVE,getPropertyPath=isValied,path=t.isValied,tableAlias=jwttokens0_,className=com.spring.starter.model.JwtTokens,classAlias=t}
             |  +-[ALIAS_REF] IdentNode: 'jwttokens0_.token_id' {alias=t, className=com.spring.starter.model.JwtTokens, tableAlias=jwttokens0_}
             |  \-[IDENT] IdentNode: 'isValied' {originalText=isValied}
             \-[NUM_INT] LiteralNode: '1'

2018-11-06 22:45:14.028 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.028 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT t FROM com.spring.starter.model.JwtTokens t WHERE t.token=?1 AND t.isValied = 1
2018-11-06 22:45:14.028 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select jwttokens0_.token_id as token_id1_63_, jwttokens0_.is_valied as is_valie2_63_, jwttokens0_.issued_time as issued_t3_63_, jwttokens0_.login_logs_id as login_lo6_63_, jwttokens0_.reject_time as reject_t4_63_, jwttokens0_.staff_id as staff_id7_63_, jwttokens0_.token as token5_63_ from jwt_tokens jwttokens0_ where jwttokens0_.token=? and jwttokens0_.is_valied=1
2018-11-06 22:45:14.028 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.066 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT tc FROM com.spring.starter.model.TransactionCustomer tc WHERE tc.identification = ?1
2018-11-06 22:45:14.067 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.067 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'TransactionCustomer'
    |  |     \-[ALIAS] Node: 'tc'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'tc'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'tc'
          |  \-[IDENT] Node: 'identification'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:14.067 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:14.067 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.TransactionCustomer (tc) -> transactio0_
2018-11-06 22:45:14.067 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : tc -> transactio0_.transaction_customer_id
2018-11-06 22:45:14.067 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : tc -> transactio0_.transaction_customer_id
2018-11-06 22:45:14.067 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : identification -> org.hibernate.type.StringType@f620100
2018-11-06 22:45:14.067 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : tc.identification -> transactio0_.identification
2018-11-06 22:45:14.067 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:14.067 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} transactio0_.transaction_customer_id ) ( FromClause{level=1} transaction_customer transactio0_ ) ( WHERE ( = ( transactio0_.identification transactio0_.transaction_customer_id identification ) ? ) ) )
2018-11-06 22:45:14.067 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [transaction_customer transactio0_]
2018-11-06 22:45:14.068 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:14.070 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (transaction_customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'transactio0_.transaction_customer_id as transact1_93_' {alias=tc, className=com.spring.starter.model.TransactionCustomer, tableAlias=transactio0_}
    |  \-[SQL_TOKEN] SqlFragment: 'transactio0_.date as date2_93_, transactio0_.identification as identifi3_93_, transactio0_.mobile as mobile4_93_, transactio0_.name as name5_93_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[tc], fromElementByTableAlias=[transactio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'transaction_customer transactio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tc,role=null,tableName=transaction_customer,tableAlias=transactio0_,origin=null,columns={,className=com.spring.starter.model.TransactionCustomer}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'transactio0_.identification' {propertyName=identification,dereferenceType=PRIMITIVE,getPropertyPath=identification,path=tc.identification,tableAlias=transactio0_,className=com.spring.starter.model.TransactionCustomer,classAlias=tc}
          |  +-[ALIAS_REF] IdentNode: 'transactio0_.transaction_customer_id' {alias=tc, className=com.spring.starter.model.TransactionCustomer, tableAlias=transactio0_}
          |  \-[IDENT] IdentNode: 'identification' {originalText=identification}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@f620100}

2018-11-06 22:45:14.070 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.070 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT tc FROM com.spring.starter.model.TransactionCustomer tc WHERE tc.identification = ?1
2018-11-06 22:45:14.070 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select transactio0_.transaction_customer_id as transact1_93_, transactio0_.date as date2_93_, transactio0_.identification as identifi3_93_, transactio0_.mobile as mobile4_93_, transactio0_.name as name5_93_ from transaction_customer transactio0_ where transactio0_.identification=?
2018-11-06 22:45:14.070 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.071 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT tc FROM com.spring.starter.model.TransactionCustomer tc WHERE date(tc.date) =?1
2018-11-06 22:45:14.072 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.072 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'TransactionCustomer'
    |  |     \-[ALIAS] Node: 'tc'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'tc'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'date'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[DOT] Node: '.'
          |        +-[IDENT] Node: 'tc'
          |        \-[IDENT] Node: 'date'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:14.072 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:14.072 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.TransactionCustomer (tc) -> transactio0_
2018-11-06 22:45:14.072 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : tc -> transactio0_.transaction_customer_id
2018-11-06 22:45:14.072 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : tc -> transactio0_.transaction_customer_id
2018-11-06 22:45:14.072 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : date -> org.hibernate.type.TimestampType@5f023e8d
2018-11-06 22:45:14.072 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : tc.date -> transactio0_.date
2018-11-06 22:45:14.072 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:14.072 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} transactio0_.transaction_customer_id ) ( FromClause{level=1} transaction_customer transactio0_ ) ( WHERE ( = ( ( date ( exprList ( transactio0_.date transactio0_.transaction_customer_id date ) ) ) ? ) ) )
2018-11-06 22:45:14.072 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [transaction_customer transactio0_]
2018-11-06 22:45:14.072 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:14.073 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (transaction_customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'transactio0_.transaction_customer_id as transact1_93_' {alias=tc, className=com.spring.starter.model.TransactionCustomer, tableAlias=transactio0_}
    |  \-[SQL_TOKEN] SqlFragment: 'transactio0_.date as date2_93_, transactio0_.identification as identifi3_93_, transactio0_.mobile as mobile4_93_, transactio0_.name as name5_93_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[tc], fromElementByTableAlias=[transactio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'transaction_customer transactio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tc,role=null,tableName=transaction_customer,tableAlias=transactio0_,origin=null,columns={,className=com.spring.starter.model.TransactionCustomer}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[METHOD_CALL] MethodNode: '('
          |  +-[METHOD_NAME] IdentNode: 'date' {originalText=date}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[DOT] DotNode: 'transactio0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=tc.date,tableAlias=transactio0_,className=com.spring.starter.model.TransactionCustomer,classAlias=tc}
          |        +-[ALIAS_REF] IdentNode: 'transactio0_.transaction_customer_id' {alias=tc, className=com.spring.starter.model.TransactionCustomer, tableAlias=transactio0_}
          |        \-[IDENT] IdentNode: 'date' {originalText=date}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.DateType@15167eb1}

2018-11-06 22:45:14.074 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.074 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT tc FROM com.spring.starter.model.TransactionCustomer tc WHERE date(tc.date) =?1
2018-11-06 22:45:14.074 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select transactio0_.transaction_customer_id as transact1_93_, transactio0_.date as date2_93_, transactio0_.identification as identifi3_93_, transactio0_.mobile as mobile4_93_, transactio0_.name as name5_93_ from transaction_customer transactio0_ where date(transactio0_.date)=?
2018-11-06 22:45:14.074 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.075 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT tc FROM com.spring.starter.model.TransactionCustomer tc WHERE tc.identification = ?1 AND date(tc.date)=?2
2018-11-06 22:45:14.075 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.075 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'TransactionCustomer'
    |  |     \-[ALIAS] Node: 'tc'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'tc'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'tc'
          |  |  \-[IDENT] Node: 'identification'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[METHOD_CALL] Node: '('
             |  +-[IDENT] Node: 'date'
             |  \-[EXPR_LIST] Node: 'exprList'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'tc'
             |        \-[IDENT] Node: 'date'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-11-06 22:45:14.076 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:14.076 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.TransactionCustomer (tc) -> transactio0_
2018-11-06 22:45:14.076 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : tc -> transactio0_.transaction_customer_id
2018-11-06 22:45:14.076 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : tc -> transactio0_.transaction_customer_id
2018-11-06 22:45:14.076 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : identification -> org.hibernate.type.StringType@f620100
2018-11-06 22:45:14.076 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : tc.identification -> transactio0_.identification
2018-11-06 22:45:14.076 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : tc -> transactio0_.transaction_customer_id
2018-11-06 22:45:14.076 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : date -> org.hibernate.type.TimestampType@5f023e8d
2018-11-06 22:45:14.076 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : tc.date -> transactio0_.date
2018-11-06 22:45:14.080 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:14.080 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} transactio0_.transaction_customer_id ) ( FromClause{level=1} transaction_customer transactio0_ ) ( WHERE ( AND ( = ( transactio0_.identification transactio0_.transaction_customer_id identification ) ? ) ( = ( ( date ( exprList ( transactio0_.date transactio0_.transaction_customer_id date ) ) ) ? ) ) ) )
2018-11-06 22:45:14.080 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [transaction_customer transactio0_]
2018-11-06 22:45:14.080 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:14.080 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (transaction_customer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'transactio0_.transaction_customer_id as transact1_93_' {alias=tc, className=com.spring.starter.model.TransactionCustomer, tableAlias=transactio0_}
    |  \-[SQL_TOKEN] SqlFragment: 'transactio0_.date as date2_93_, transactio0_.identification as identifi3_93_, transactio0_.mobile as mobile4_93_, transactio0_.name as name5_93_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[tc], fromElementByTableAlias=[transactio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'transaction_customer transactio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tc,role=null,tableName=transaction_customer,tableAlias=transactio0_,origin=null,columns={,className=com.spring.starter.model.TransactionCustomer}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'transactio0_.identification' {propertyName=identification,dereferenceType=PRIMITIVE,getPropertyPath=identification,path=tc.identification,tableAlias=transactio0_,className=com.spring.starter.model.TransactionCustomer,classAlias=tc}
          |  |  +-[ALIAS_REF] IdentNode: 'transactio0_.transaction_customer_id' {alias=tc, className=com.spring.starter.model.TransactionCustomer, tableAlias=transactio0_}
          |  |  \-[IDENT] IdentNode: 'identification' {originalText=identification}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@f620100}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[METHOD_CALL] MethodNode: '('
             |  +-[METHOD_NAME] IdentNode: 'date' {originalText=date}
             |  \-[EXPR_LIST] SqlNode: 'exprList'
             |     \-[DOT] DotNode: 'transactio0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=tc.date,tableAlias=transactio0_,className=com.spring.starter.model.TransactionCustomer,classAlias=tc}
             |        +-[ALIAS_REF] IdentNode: 'transactio0_.transaction_customer_id' {alias=tc, className=com.spring.starter.model.TransactionCustomer, tableAlias=transactio0_}
             |        \-[IDENT] IdentNode: 'date' {originalText=date}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.DateType@15167eb1}

2018-11-06 22:45:14.080 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.081 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT tc FROM com.spring.starter.model.TransactionCustomer tc WHERE tc.identification = ?1 AND date(tc.date)=?2
2018-11-06 22:45:14.081 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select transactio0_.transaction_customer_id as transact1_93_, transactio0_.date as date2_93_, transactio0_.identification as identifi3_93_, transactio0_.mobile as mobile4_93_, transactio0_.name as name5_93_ from transaction_customer transactio0_ where transactio0_.identification=? and date(transactio0_.date)=?
2018-11-06 22:45:14.081 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.158 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT s FROM com.spring.starter.model.QueueService s WHERE s.queue.queueNumId=?1 
2018-11-06 22:45:14.158 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.158 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'starter'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'QueueService'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 's'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 's'
          |  |  \-[IDENT] Node: 'queue'
          |  \-[IDENT] Node: 'queueNumId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-11-06 22:45:14.158 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2018-11-06 22:45:14.158 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.spring.starter.model.QueueService (s) -> queueservi0_
2018-11-06 22:45:14.158 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : s -> queueservi0_.queue_service_id
2018-11-06 22:45:14.159 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : s -> queueservi0_.queue_service_id
2018-11-06 22:45:14.159 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : queue -> org.hibernate.type.ManyToOneType(com.spring.starter.model.QueueNum)
2018-11-06 22:45:14.159 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : dereferenceShortcut() : property queueNumId in com.spring.starter.model.QueueService does not require a join.
2018-11-06 22:45:14.159 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : Unresolved property path is now 'queue.queueNumId'
2018-11-06 22:45:14.159 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : s.queue -> queueservi0_.queue_id
2018-11-06 22:45:14.159 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.tree.DotNode        : getDataType() : queue.queueNumId -> org.hibernate.type.IntegerType@7121ce7c
2018-11-06 22:45:14.159 DEBUG 9956 --- [restartedMain] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : s.queue.queueNumId -> queueservi0_.queue_id
2018-11-06 22:45:14.159 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2018-11-06 22:45:14.161 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} queueservi0_.queue_service_id ) ( FromClause{level=1} queue_service queueservi0_ ) ( WHERE ( = ( queueservi0_.queue_id ( queueservi0_.queue_id queueservi0_.queue_service_id queue ) queueNumId ) ? ) ) )
2018-11-06 22:45:14.161 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [queue_service queueservi0_]
2018-11-06 22:45:14.161 DEBUG 9956 --- [restartedMain] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2018-11-06 22:45:14.161 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (queue_service)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'queueservi0_.queue_service_id as queue_se1_74_' {alias=s, className=com.spring.starter.model.QueueService, tableAlias=queueservi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'queueservi0_.queue_id as queue_id2_74_, queueservi0_.teller_id as teller_i3_74_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[queueservi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'queue_service queueservi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=queue_service,tableAlias=queueservi0_,origin=null,columns={,className=com.spring.starter.model.QueueService}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'queueservi0_.queue_id' {propertyName=queueNumId,dereferenceType=PRIMITIVE,getPropertyPath=queue.queueNumId,path=s.queue.queueNumId,tableAlias=queueservi0_,className=com.spring.starter.model.QueueService,classAlias=s}
          |  +-[DOT] DotNode: 'queueservi0_.queue_id' {propertyName=queueNumId,dereferenceType=UNKNOWN,getPropertyPath=queue.queueNumId,path=s.queue,tableAlias=queueservi0_,className=com.spring.starter.model.QueueService,classAlias=s}
          |  |  +-[ALIAS_REF] IdentNode: 'queueservi0_.queue_service_id' {alias=s, className=com.spring.starter.model.QueueService, tableAlias=queueservi0_}
          |  |  \-[IDENT] IdentNode: 'queue' {originalText=queue}
          |  \-[IDENT] IdentNode: 'queueNumId' {originalText=queueNumId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7121ce7c}

2018-11-06 22:45:14.161 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.161 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT s FROM com.spring.starter.model.QueueService s WHERE s.queue.queueNumId=?1 
2018-11-06 22:45:14.161 DEBUG 9956 --- [restartedMain] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select queueservi0_.queue_service_id as queue_se1_74_, queueservi0_.queue_id as queue_id2_74_, queueservi0_.teller_id as teller_i3_74_ from queue_service queueservi0_ where queueservi0_.queue_id=?
2018-11-06 22:45:14.161 DEBUG 9956 --- [restartedMain] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2018-11-06 22:45:14.217 DEBUG 9956 --- [restartedMain] eGlobalAuthenticationAutowiredConfigurer : Eagerly initializing {securityConfig=com.spring.starter.configuration.SecurityConfig$$EnhancerBySpringCGLIB$$b980d972@30135a08}
2018-11-06 22:45:14.369 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/**', OPTIONS]
2018-11-06 22:45:14.372 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/login']
2018-11-06 22:45:14.372 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'hasRole('ROLE_ADMIN')', for Ant [pattern='/staffUsers/addNewUser']
2018-11-06 22:45:14.373 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/staffUsers/addStaffUserFirstTime']
2018-11-06 22:45:14.373 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/staffUsers/login/**']
2018-11-06 22:45:14.373 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/staffRoles']
2018-11-06 22:45:14.373 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/CustomerServiceRequest/**']
2018-11-06 22:45:14.373 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/atmOrDebit/request']
2018-11-06 22:45:14.373 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/atmOrDebit/reIssuePin']
2018-11-06 22:45:14.373 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/atmOrDebit/smsSubscription']
2018-11-06 22:45:14.373 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/atmOrDebit/posLimit']
2018-11-06 22:45:14.373 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/atmOrDebit/LinkedAccount']
2018-11-06 22:45:14.373 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/atmOrDebit/changePrimaryAccount']
2018-11-06 22:45:14.373 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/bankStatementPassBook/duplicatePassbook']
2018-11-06 22:45:14.373 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/bankStatementPassBook/AccountStatement']
2018-11-06 22:45:14.373 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/bankStatementPassBook/e-statement']
2018-11-06 22:45:14.376 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/bankStatementPassBook/statementFrequency']
2018-11-06 22:45:14.376 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/address/change-mailing']
2018-11-06 22:45:14.376 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/changePermanentAddress']
2018-11-06 22:45:14.376 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/CustomerServiceRequest']
2018-11-06 22:45:14.376 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/addRelatedRequest']
2018-11-06 22:45:14.376 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/addDuplicateFdCdCert']
2018-11-06 22:45:14.376 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/internet-banking/reissue-password']
2018-11-06 22:45:14.376 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/link-JointAccounts']
2018-11-06 22:45:14.376 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/exclude-accounts']
2018-11-06 22:45:14.376 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/other-service']
2018-11-06 22:45:14.376 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/address/change-permenenet/']
2018-11-06 22:45:14.376 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/otherRequest']
2018-11-06 22:45:14.376 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/addNewBankService']
2018-11-06 22:45:14.376 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/getBankServices']
2018-11-06 22:45:14.376 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/addNewCustomer']
2018-11-06 22:45:14.376 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/addNewServiceToACustomer']
2018-11-06 22:45:14.376 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/getcustomer']
2018-11-06 22:45:14.377 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/getServicesOfACustomerByDate']
2018-11-06 22:45:14.377 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/getAllCustomerRequests']
2018-11-06 22:45:14.377 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/getAllCustomerDataWithRequests']
2018-11-06 22:45:14.377 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/completeACustomerRequest']
2018-11-06 22:45:14.377 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/addAStaffHandled']
2018-11-06 22:45:14.377 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/getServiceRequestForm']
2018-11-06 22:45:14.377 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/addSignature']
2018-11-06 22:45:14.377 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/SMSAlertsforCreditCard']
2018-11-06 22:45:14.377 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/serviceRequest/get-all-customer-requests-filter-by-reject/**']
2018-11-06 22:45:14.377 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/add-service']
2018-11-06 22:45:14.377 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/view-transaction-request/**']
2018-11-06 22:45:14.377 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/getServiceRequestForm']
2018-11-06 22:45:14.377 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/ger-all-service']
2018-11-06 22:45:14.377 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/tif-image']
2018-11-06 22:45:14.377 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/getDocumentTypes/**']
2018-11-06 22:45:14.377 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/addSignature']
2018-11-06 22:45:14.377 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/softReject']
2018-11-06 22:45:14.377 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/softReject-all']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/add-transaction-customer']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/add-customer-to-trasaction-request']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/fund-transaction-within-ndb']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/cash-withdrawal']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/cash-deposit']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/cash-deposit/file-upload']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/cash-deposit/update']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/cash-deposit/signature']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/cash-deposit-denominations']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Bank/save']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Bank/update']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Bank/delete/**']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Bank/search-bank/**']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Bank/get-all-banks']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Branch/addNewBranch']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Branch/getAll']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Branch/updateBranch']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Branch/delete/**']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Branch/search-branch-by-bank/**']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Branch/search-branch/**']
2018-11-06 22:45:14.378 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/fund-transaction-within-ndb/file-upload']
2018-11-06 22:45:14.379 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/fund-transaction-within-ndb/update']
2018-11-06 22:45:14.379 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/fund-transaction-within-ndb/signature']
2018-11-06 22:45:14.379 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Transaction-Request/fundtrasnfet-other-slip/update']
2018-11-06 22:45:14.379 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Currency/save']
2018-11-06 22:45:14.379 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Currency/update']
2018-11-06 22:45:14.379 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Currency/delete/**']
2018-11-06 22:45:14.379 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Currency/search/**']
2018-11-06 22:45:14.380 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Currency/get-all']
2018-11-06 22:45:14.380 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/CSR-Queue/genarate-token']
2018-11-06 22:45:14.380 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/CSR-Queue/get-queue-list']
2018-11-06 22:45:14.380 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/CSR-Queue/get-hold-queue-list']
2018-11-06 22:45:14.380 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/CSR-Queue/get-pending-queue-list']
2018-11-06 22:45:14.380 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/CSR-Queue/hold-a-queue-number']
2018-11-06 22:45:14.380 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/CSR-Queue/complete-a-queue-number']
2018-11-06 22:45:14.380 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/CSR-Queue/get-completed-queue-list']
2018-11-06 22:45:14.380 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/CSR-Queue/continue-a-hold-token']
2018-11-06 22:45:14.380 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/CSR-Queue/genarate-an-special-queue-number']
2018-11-06 22:45:14.380 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/CSR-Queue/genarate-redundent-token']
2018-11-06 22:45:14.380 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Teller-Queue/genarate-token']
2018-11-06 22:45:14.380 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Teller-Queue/get-queue-list']
2018-11-06 22:45:14.380 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Teller-Queue/get-hold-queue-list']
2018-11-06 22:45:14.380 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Teller-Queue/get-pending-queue-list']
2018-11-06 22:45:14.381 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Teller-Queue/hold-a-queue-number']
2018-11-06 22:45:14.381 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Teller-Queue/complete-a-queue-number']
2018-11-06 22:45:14.381 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Teller-Queue/get-completed-queue-list']
2018-11-06 22:45:14.381 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Teller-Queue/continue-a-hold-token']
2018-11-06 22:45:14.381 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Teller-Queue/genarate-an-special-queue-number']
2018-11-06 22:45:14.381 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/Teller-Queue/genarate-redundent-token']
2018-11-06 22:45:14.381 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'permitAll', for Ant [pattern='/reports/daily-report']
2018-11-06 22:45:14.381 DEBUG 9956 --- [restartedMain] edFilterInvocationSecurityMetadataSource : Adding web access control expression 'authenticated', for org.springframework.security.web.util.matcher.AnyRequestMatcher@1
2018-11-06 22:45:14.389 DEBUG 9956 --- [restartedMain] o.s.s.w.a.i.FilterSecurityInterceptor    : Validated configuration attributes
2018-11-06 22:45:14.390 DEBUG 9956 --- [restartedMain] o.s.s.w.a.i.FilterSecurityInterceptor    : Validated configuration attributes
2018-11-06 22:45:14.395  INFO 9956 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@442c28ae, org.springframework.security.web.context.SecurityContextPersistenceFilter@5eb25a41, org.springframework.security.web.header.HeaderWriterFilter@412e5b28, com.spring.starter.jwt.JwtTokenAuthenticationFilter@1bc0b6cd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@65a58c55, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@114fa687, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4848517c, org.springframework.security.web.session.SessionManagementFilter@246f268, org.springframework.security.web.access.ExceptionTranslationFilter@78b7f8e4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4fb6feb8]
2018-11-06 22:45:14.413  INFO 9956 --- [restartedMain] o.s.s.p.JdbcUserDetailsManager           : No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2018-11-06 22:45:14.428 DEBUG 9956 --- [restartedMain] o.h.v.i.e.resolver.TraversableResolvers  : Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-11-06 22:45:14.428 DEBUG 9956 --- [restartedMain] o.h.v.i.e.resolver.TraversableResolvers  : Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-11-06 22:45:14.428 DEBUG 9956 --- [restartedMain] .h.v.m.ResourceBundleMessageInterpolator : Loaded expression factory via original TCCL
2018-11-06 22:45:14.435 DEBUG 9956 --- [restartedMain] o.h.v.i.e.resolver.TraversableResolvers  : Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-11-06 22:45:14.435 DEBUG 9956 --- [restartedMain] o.h.v.i.e.resolver.TraversableResolvers  : Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-11-06 22:45:14.436 DEBUG 9956 --- [restartedMain] o.h.v.internal.engine.ConfigurationImpl  : Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-11-06 22:45:14.437 DEBUG 9956 --- [restartedMain] o.h.v.internal.engine.ConfigurationImpl  : Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-11-06 22:45:14.438 DEBUG 9956 --- [restartedMain] o.h.v.internal.engine.ConfigurationImpl  : Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-11-06 22:45:14.439 DEBUG 9956 --- [restartedMain] o.h.v.i.xml.config.ValidationXmlParser   : Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-11-06 22:45:14.439 DEBUG 9956 --- [restartedMain] o.h.v.i.xml.config.ResourceLoaderHelper  : Trying to load META-INF/validation.xml via user class loader
2018-11-06 22:45:14.440 DEBUG 9956 --- [restartedMain] o.h.v.i.xml.config.ResourceLoaderHelper  : Trying to load META-INF/validation.xml via TCCL
2018-11-06 22:45:14.440 DEBUG 9956 --- [restartedMain] o.h.v.i.xml.config.ResourceLoaderHelper  : Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-11-06 22:45:14.440 DEBUG 9956 --- [restartedMain] o.h.v.i.xml.config.ValidationXmlParser   : No META-INF/validation.xml found. Using annotation based configuration only.
2018-11-06 22:45:14.445 DEBUG 9956 --- [restartedMain] o.h.v.i.engine.ValidatorFactoryImpl      : HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-11-06 22:45:14.445 DEBUG 9956 --- [restartedMain] o.h.v.i.engine.ValidatorFactoryImpl      : HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-11-06 22:45:14.445 DEBUG 9956 --- [restartedMain] o.h.v.i.engine.ValidatorFactoryImpl      : HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-11-06 22:45:14.445 DEBUG 9956 --- [restartedMain] o.h.v.i.engine.ValidatorFactoryImpl      : HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-11-06 22:45:14.446 DEBUG 9956 --- [restartedMain] o.h.v.i.engine.ValidatorFactoryImpl      : HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-11-06 22:45:14.828  WARN 9956 --- [restartedMain] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-11-06 22:50:22.323 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 1 of 10 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
2018-11-06 22:50:22.324 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 2 of 10 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
2018-11-06 22:50:22.326 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 3 of 10 in additional filter chain; firing Filter: 'HeaderWriterFilter'
2018-11-06 22:50:22.327 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 4 of 10 in additional filter chain; firing Filter: 'JwtTokenAuthenticationFilter'
2018-11-06 22:50:22.617 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 5 of 10 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
2018-11-06 22:50:22.617 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 6 of 10 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
2018-11-06 22:50:22.618 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 7 of 10 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
2018-11-06 22:50:22.618 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@40a3c9d3: Principal: 1; Credentials: [PROTECTED]; Authenticated: true; Details: null; Granted Authorities: ROLE_ADMIN'
2018-11-06 22:50:22.618 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 8 of 10 in additional filter chain; firing Filter: 'SessionManagementFilter'
2018-11-06 22:50:22.618 DEBUG 9956 --- [http-nio-8081-exec-2] s.CompositeSessionAuthenticationStrategy : Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@7dabbf06
2018-11-06 22:50:22.618 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 9 of 10 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
2018-11-06 22:50:22.618 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 10 of 10 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
2018-11-06 22:50:22.619 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Request 'POST /Transaction-Request/add-customer-to-trasaction-request' doesn't match 'OPTIONS /**
2018-11-06 22:50:22.619 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/login'
2018-11-06 22:50:22.619 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/staffUsers/addNewUser'
2018-11-06 22:50:22.619 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/staffUsers/addStaffUserFirstTime'
2018-11-06 22:50:22.619 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/staffUsers/login/**'
2018-11-06 22:50:22.619 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/staffRoles'
2018-11-06 22:50:22.619 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/CustomerServiceRequest/**'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/atmOrDebit/request'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/atmOrDebit/reIssuePin'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/atmOrDebit/smsSubscription'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/atmOrDebit/posLimit'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/atmOrDebit/LinkedAccount'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/atmOrDebit/changePrimaryAccount'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/bankStatementPassBook/duplicatePassbook'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/bankStatementPassBook/AccountStatement'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/bankStatementPassBook/e-statement'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/bankStatementPassBook/statementFrequency'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/address/change-mailing'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/changePermanentAddress'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/CustomerServiceRequest'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addRelatedRequest'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addDuplicateFdCdCert'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/internet-banking/reissue-password'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/link-JointAccounts'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/exclude-accounts'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/other-service'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/address/change-permenenet/'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/otherRequest'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addNewBankService'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/getBankServices'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addNewCustomer'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addNewServiceToACustomer'
2018-11-06 22:50:22.620 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/getcustomer'
2018-11-06 22:50:22.621 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/getServicesOfACustomerByDate'
2018-11-06 22:50:22.621 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/getAllCustomerRequests'
2018-11-06 22:50:22.621 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/getAllCustomerDataWithRequests'
2018-11-06 22:50:22.621 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/completeACustomerRequest'
2018-11-06 22:50:22.621 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addAStaffHandled'
2018-11-06 22:50:22.621 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/getServiceRequestForm'
2018-11-06 22:50:22.621 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addSignature'
2018-11-06 22:50:22.621 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/SMSAlertsforCreditCard'
2018-11-06 22:50:22.621 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/get-all-customer-requests-filter-by-reject/**'
2018-11-06 22:50:22.621 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/add-service'
2018-11-06 22:50:22.621 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/view-transaction-request/**'
2018-11-06 22:50:22.621 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/getServiceRequestForm'
2018-11-06 22:50:22.621 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/ger-all-service'
2018-11-06 22:50:22.621 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/tif-image'
2018-11-06 22:50:22.621 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/getDocumentTypes/**'
2018-11-06 22:50:22.621 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/addSignature'
2018-11-06 22:50:22.623 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/softReject'
2018-11-06 22:50:22.623 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/softReject-all'
2018-11-06 22:50:22.623 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/add-transaction-customer'
2018-11-06 22:50:22.623 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/add-customer-to-trasaction-request'
2018-11-06 22:50:22.623 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Secure object: FilterInvocation: URL: /Transaction-Request/add-customer-to-trasaction-request; Attributes: [permitAll]
2018-11-06 22:50:22.623 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@40a3c9d3: Principal: 1; Credentials: [PROTECTED]; Authenticated: true; Details: null; Granted Authorities: ROLE_ADMIN
2018-11-06 22:50:22.627 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.access.vote.AffirmativeBased       : Voter: org.springframework.security.web.access.expression.WebExpressionVoter@7f6831ad, returned: 1
2018-11-06 22:50:22.627 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorization successful
2018-11-06 22:50:22.627 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : RunAsManager did not change Authentication object
2018-11-06 22:50:22.628 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request reached end of additional filter chain; proceeding with original chain
2018-11-06 22:50:22.693 DEBUG 9956 --- [http-nio-8081-exec-2] o.h.e.t.internal.TransactionImpl         : begin
2018-11-06 22:50:22.715 DEBUG 9956 --- [http-nio-8081-exec-2] org.hibernate.SQL                        : select transactio0_.transaction_customer_id as transact1_93_0_, transactio0_.date as date2_93_0_, transactio0_.identification as identifi3_93_0_, transactio0_.mobile as mobile4_93_0_, transactio0_.name as name5_93_0_ from transaction_customer transactio0_ where transactio0_.transaction_customer_id=?
2018-11-06 22:50:22.730 DEBUG 9956 --- [http-nio-8081-exec-2] o.h.l.p.e.p.i.ResultSetProcessorImpl     : Starting ResultSet row #0
2018-11-06 22:50:22.731 DEBUG 9956 --- [http-nio-8081-exec-2] l.p.e.p.i.EntityReferenceInitializerImpl : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2018-11-06 22:50:22.740 DEBUG 9956 --- [http-nio-8081-exec-2] o.h.engine.internal.TwoPhaseLoad         : Resolving associations for [com.spring.starter.model.TransactionCustomer#1]
2018-11-06 22:50:22.741 DEBUG 9956 --- [http-nio-8081-exec-2] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.spring.starter.model.TransactionCustomer#1]
2018-11-06 22:50:22.741 DEBUG 9956 --- [http-nio-8081-exec-2] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2018-11-06 22:50:22.742 DEBUG 9956 --- [http-nio-8081-exec-2] .l.e.p.AbstractLoadPlanBasedEntityLoader : Done entity load : com.spring.starter.model.TransactionCustomer#1
2018-11-06 22:50:22.742 DEBUG 9956 --- [http-nio-8081-exec-2] org.hibernate.SQL                        : select transactio0_.transaction_request_id as transact1_94_0_, transactio0_.date as date2_94_0_, transactio0_.digi_form_id as digi_for3_94_0_, transactio0_.digi_form_type as digi_for4_94_0_, transactio0_.transaction_request_name as transact5_94_0_ from transaction_request transactio0_ where transactio0_.transaction_request_id=?
2018-11-06 22:50:22.743 DEBUG 9956 --- [http-nio-8081-exec-2] o.h.l.p.e.p.i.ResultSetProcessorImpl     : Starting ResultSet row #0
2018-11-06 22:50:22.743 DEBUG 9956 --- [http-nio-8081-exec-2] l.p.e.p.i.EntityReferenceInitializerImpl : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2018-11-06 22:50:22.745 DEBUG 9956 --- [http-nio-8081-exec-2] o.h.engine.internal.TwoPhaseLoad         : Resolving associations for [com.spring.starter.model.TransactionRequest#1]
2018-11-06 22:50:22.745 DEBUG 9956 --- [http-nio-8081-exec-2] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.spring.starter.model.TransactionRequest#1]
2018-11-06 22:50:22.745 DEBUG 9956 --- [http-nio-8081-exec-2] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2018-11-06 22:50:22.745 DEBUG 9956 --- [http-nio-8081-exec-2] .l.e.p.AbstractLoadPlanBasedEntityLoader : Done entity load : com.spring.starter.model.TransactionRequest#1
2018-11-06 22:50:22.757 DEBUG 9956 --- [http-nio-8081-exec-2] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2018-11-06 22:50:22.766 DEBUG 9956 --- [http-nio-8081-exec-2] org.hibernate.SQL                        : insert into customer_transaction_request (authorize, authorizer_data_transaction_request_id, request_complete_date, request_date, soft_reject, status, status_message, transaction_customer_id, transaction_request_id, tt_number) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2018-11-06 22:50:22.818 DEBUG 9956 --- [http-nio-8081-exec-2] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 53
2018-11-06 22:50:22.818 DEBUG 9956 --- [http-nio-8081-exec-2] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2018-11-06 22:50:22.820 DEBUG 9956 --- [http-nio-8081-exec-2] o.h.e.t.internal.TransactionImpl         : committing
2018-11-06 22:50:22.821 DEBUG 9956 --- [http-nio-8081-exec-2] o.h.e.i.AbstractFlushingEventListener    : Processing flush-time cascades
2018-11-06 22:50:22.821 DEBUG 9956 --- [http-nio-8081-exec-2] o.h.e.i.AbstractFlushingEventListener    : Dirty checking collections
2018-11-06 22:50:22.824 DEBUG 9956 --- [http-nio-8081-exec-2] o.h.e.i.AbstractFlushingEventListener    : Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2018-11-06 22:50:22.824 DEBUG 9956 --- [http-nio-8081-exec-2] o.h.e.i.AbstractFlushingEventListener    : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2018-11-06 22:50:22.825 DEBUG 9956 --- [http-nio-8081-exec-2] o.hibernate.internal.util.EntityPrinter  : Listing entities:
2018-11-06 22:50:22.825 DEBUG 9956 --- [http-nio-8081-exec-2] o.hibernate.internal.util.EntityPrinter  : com.spring.starter.model.TransactionRequest{date=2018-10-05 08:46:50.0, digiFormType=DEPOSIT REQUEST FORM, transactionRequestName=DEPOSITS, transactionRequestId=1, digiFormId=1}
2018-11-06 22:50:22.825 DEBUG 9956 --- [http-nio-8081-exec-2] o.hibernate.internal.util.EntityPrinter  : com.spring.starter.model.TransactionCustomer{date=null, identification=951160164v, mobile=0710873073, name=senila udara, transactionCustomerId=1}
2018-11-06 22:50:22.825 DEBUG 9956 --- [http-nio-8081-exec-2] o.hibernate.internal.util.EntityPrinter  : com.spring.starter.model.CustomerTransactionRequest{customerTransactionRequestId=53, csrDataTransaction=null, softReject=false, transactionRequest=com.spring.starter.model.TransactionRequest#1, authorizerDataTransaction=null, requestCompleteDate=null, statusMessage=null, ttNumber=null, requestDate=Tue Nov 06 22:50:22 IST 2018, authorize=false, staffUser=null, transactionCustomer=com.spring.starter.model.TransactionCustomer#1, status=false}
2018-11-06 22:50:22.915 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.header.writers.HstsHeaderWriter  : Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@98d858d
2018-11-06 22:50:22.923 DEBUG 9956 --- [http-nio-8081-exec-2] o.s.s.w.a.ExceptionTranslationFilter     : Chain processed normally
2018-11-06 22:50:22.923 DEBUG 9956 --- [http-nio-8081-exec-2] s.s.w.c.SecurityContextPersistenceFilter : SecurityContextHolder now cleared, as request processing completed
2018-11-06 22:50:23.938 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 1 of 10 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
2018-11-06 22:50:23.939 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 2 of 10 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
2018-11-06 22:50:23.939 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 3 of 10 in additional filter chain; firing Filter: 'HeaderWriterFilter'
2018-11-06 22:50:23.939 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 4 of 10 in additional filter chain; firing Filter: 'JwtTokenAuthenticationFilter'
2018-11-06 22:50:23.942 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 5 of 10 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
2018-11-06 22:50:23.942 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 6 of 10 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
2018-11-06 22:50:23.942 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 7 of 10 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
2018-11-06 22:50:23.942 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@40a3c9d3: Principal: 1; Credentials: [PROTECTED]; Authenticated: true; Details: null; Granted Authorities: ROLE_ADMIN'
2018-11-06 22:50:23.942 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 8 of 10 in additional filter chain; firing Filter: 'SessionManagementFilter'
2018-11-06 22:50:23.942 DEBUG 9956 --- [http-nio-8081-exec-3] s.CompositeSessionAuthenticationStrategy : Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@7dabbf06
2018-11-06 22:50:23.943 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 9 of 10 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
2018-11-06 22:50:23.943 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 10 of 10 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
2018-11-06 22:50:23.943 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Request 'POST /Transaction-Request/add-customer-to-trasaction-request' doesn't match 'OPTIONS /**
2018-11-06 22:50:23.943 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/login'
2018-11-06 22:50:23.943 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/staffUsers/addNewUser'
2018-11-06 22:50:23.943 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/staffUsers/addStaffUserFirstTime'
2018-11-06 22:50:23.943 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/staffUsers/login/**'
2018-11-06 22:50:23.943 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/staffRoles'
2018-11-06 22:50:23.943 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/CustomerServiceRequest/**'
2018-11-06 22:50:23.943 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/atmOrDebit/request'
2018-11-06 22:50:23.943 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/atmOrDebit/reIssuePin'
2018-11-06 22:50:23.943 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/atmOrDebit/smsSubscription'
2018-11-06 22:50:23.943 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/atmOrDebit/posLimit'
2018-11-06 22:50:23.943 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/atmOrDebit/LinkedAccount'
2018-11-06 22:50:23.943 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/atmOrDebit/changePrimaryAccount'
2018-11-06 22:50:23.944 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/bankStatementPassBook/duplicatePassbook'
2018-11-06 22:50:23.944 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/bankStatementPassBook/AccountStatement'
2018-11-06 22:50:23.944 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/bankStatementPassBook/e-statement'
2018-11-06 22:50:23.944 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/bankStatementPassBook/statementFrequency'
2018-11-06 22:50:23.944 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/address/change-mailing'
2018-11-06 22:50:23.944 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/changePermanentAddress'
2018-11-06 22:50:23.944 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/CustomerServiceRequest'
2018-11-06 22:50:23.944 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addRelatedRequest'
2018-11-06 22:50:23.944 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addDuplicateFdCdCert'
2018-11-06 22:50:23.944 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/internet-banking/reissue-password'
2018-11-06 22:50:23.944 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/link-JointAccounts'
2018-11-06 22:50:23.944 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/exclude-accounts'
2018-11-06 22:50:23.944 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/other-service'
2018-11-06 22:50:23.944 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/address/change-permenenet/'
2018-11-06 22:50:23.944 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/otherRequest'
2018-11-06 22:50:23.944 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addNewBankService'
2018-11-06 22:50:23.944 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/getBankServices'
2018-11-06 22:50:23.944 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addNewCustomer'
2018-11-06 22:50:23.944 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addNewServiceToACustomer'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/getcustomer'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/getServicesOfACustomerByDate'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/getAllCustomerRequests'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/getAllCustomerDataWithRequests'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/completeACustomerRequest'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addAStaffHandled'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/getServiceRequestForm'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addSignature'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/SMSAlertsforCreditCard'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/get-all-customer-requests-filter-by-reject/**'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/add-service'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/view-transaction-request/**'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/getServiceRequestForm'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/ger-all-service'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/tif-image'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/getDocumentTypes/**'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/addSignature'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/softReject'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/softReject-all'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/add-transaction-customer'
2018-11-06 22:50:23.945 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/add-customer-to-trasaction-request'
2018-11-06 22:50:23.946 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.a.i.FilterSecurityInterceptor    : Secure object: FilterInvocation: URL: /Transaction-Request/add-customer-to-trasaction-request; Attributes: [permitAll]
2018-11-06 22:50:23.946 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.a.i.FilterSecurityInterceptor    : Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@40a3c9d3: Principal: 1; Credentials: [PROTECTED]; Authenticated: true; Details: null; Granted Authorities: ROLE_ADMIN
2018-11-06 22:50:23.946 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.access.vote.AffirmativeBased       : Voter: org.springframework.security.web.access.expression.WebExpressionVoter@7f6831ad, returned: 1
2018-11-06 22:50:23.946 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorization successful
2018-11-06 22:50:23.946 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.a.i.FilterSecurityInterceptor    : RunAsManager did not change Authentication object
2018-11-06 22:50:23.946 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request reached end of additional filter chain; proceeding with original chain
2018-11-06 22:50:23.947 DEBUG 9956 --- [http-nio-8081-exec-3] o.h.e.t.internal.TransactionImpl         : begin
2018-11-06 22:50:23.948 DEBUG 9956 --- [http-nio-8081-exec-3] org.hibernate.SQL                        : select transactio0_.transaction_customer_id as transact1_93_0_, transactio0_.date as date2_93_0_, transactio0_.identification as identifi3_93_0_, transactio0_.mobile as mobile4_93_0_, transactio0_.name as name5_93_0_ from transaction_customer transactio0_ where transactio0_.transaction_customer_id=?
2018-11-06 22:50:23.949 DEBUG 9956 --- [http-nio-8081-exec-3] o.h.l.p.e.p.i.ResultSetProcessorImpl     : Starting ResultSet row #0
2018-11-06 22:50:23.949 DEBUG 9956 --- [http-nio-8081-exec-3] l.p.e.p.i.EntityReferenceInitializerImpl : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2018-11-06 22:50:23.949 DEBUG 9956 --- [http-nio-8081-exec-3] o.h.engine.internal.TwoPhaseLoad         : Resolving associations for [com.spring.starter.model.TransactionCustomer#1]
2018-11-06 22:50:23.949 DEBUG 9956 --- [http-nio-8081-exec-3] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.spring.starter.model.TransactionCustomer#1]
2018-11-06 22:50:23.949 DEBUG 9956 --- [http-nio-8081-exec-3] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2018-11-06 22:50:23.949 DEBUG 9956 --- [http-nio-8081-exec-3] .l.e.p.AbstractLoadPlanBasedEntityLoader : Done entity load : com.spring.starter.model.TransactionCustomer#1
2018-11-06 22:50:23.949 DEBUG 9956 --- [http-nio-8081-exec-3] org.hibernate.SQL                        : select transactio0_.transaction_request_id as transact1_94_0_, transactio0_.date as date2_94_0_, transactio0_.digi_form_id as digi_for3_94_0_, transactio0_.digi_form_type as digi_for4_94_0_, transactio0_.transaction_request_name as transact5_94_0_ from transaction_request transactio0_ where transactio0_.transaction_request_id=?
2018-11-06 22:50:23.950 DEBUG 9956 --- [http-nio-8081-exec-3] o.h.l.p.e.p.i.ResultSetProcessorImpl     : Starting ResultSet row #0
2018-11-06 22:50:23.950 DEBUG 9956 --- [http-nio-8081-exec-3] l.p.e.p.i.EntityReferenceInitializerImpl : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2018-11-06 22:50:23.950 DEBUG 9956 --- [http-nio-8081-exec-3] o.h.engine.internal.TwoPhaseLoad         : Resolving associations for [com.spring.starter.model.TransactionRequest#1]
2018-11-06 22:50:23.950 DEBUG 9956 --- [http-nio-8081-exec-3] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.spring.starter.model.TransactionRequest#1]
2018-11-06 22:50:23.950 DEBUG 9956 --- [http-nio-8081-exec-3] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2018-11-06 22:50:23.950 DEBUG 9956 --- [http-nio-8081-exec-3] .l.e.p.AbstractLoadPlanBasedEntityLoader : Done entity load : com.spring.starter.model.TransactionRequest#1
2018-11-06 22:50:23.951 DEBUG 9956 --- [http-nio-8081-exec-3] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2018-11-06 22:50:23.951 DEBUG 9956 --- [http-nio-8081-exec-3] org.hibernate.SQL                        : insert into customer_transaction_request (authorize, authorizer_data_transaction_request_id, request_complete_date, request_date, soft_reject, status, status_message, transaction_customer_id, transaction_request_id, tt_number) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2018-11-06 22:50:23.980 DEBUG 9956 --- [http-nio-8081-exec-3] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 54
2018-11-06 22:50:23.980 DEBUG 9956 --- [http-nio-8081-exec-3] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2018-11-06 22:50:23.980 DEBUG 9956 --- [http-nio-8081-exec-3] o.h.e.t.internal.TransactionImpl         : committing
2018-11-06 22:50:23.980 DEBUG 9956 --- [http-nio-8081-exec-3] o.h.e.i.AbstractFlushingEventListener    : Processing flush-time cascades
2018-11-06 22:50:23.981 DEBUG 9956 --- [http-nio-8081-exec-3] o.h.e.i.AbstractFlushingEventListener    : Dirty checking collections
2018-11-06 22:50:23.981 DEBUG 9956 --- [http-nio-8081-exec-3] o.h.e.i.AbstractFlushingEventListener    : Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2018-11-06 22:50:23.981 DEBUG 9956 --- [http-nio-8081-exec-3] o.h.e.i.AbstractFlushingEventListener    : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2018-11-06 22:50:23.981 DEBUG 9956 --- [http-nio-8081-exec-3] o.hibernate.internal.util.EntityPrinter  : Listing entities:
2018-11-06 22:50:23.981 DEBUG 9956 --- [http-nio-8081-exec-3] o.hibernate.internal.util.EntityPrinter  : com.spring.starter.model.TransactionRequest{date=2018-10-05 08:46:50.0, digiFormType=DEPOSIT REQUEST FORM, transactionRequestName=DEPOSITS, transactionRequestId=1, digiFormId=1}
2018-11-06 22:50:23.981 DEBUG 9956 --- [http-nio-8081-exec-3] o.hibernate.internal.util.EntityPrinter  : com.spring.starter.model.TransactionCustomer{date=null, identification=951160164v, mobile=0710873073, name=senila udara, transactionCustomerId=1}
2018-11-06 22:50:23.981 DEBUG 9956 --- [http-nio-8081-exec-3] o.hibernate.internal.util.EntityPrinter  : com.spring.starter.model.CustomerTransactionRequest{customerTransactionRequestId=54, csrDataTransaction=null, softReject=false, transactionRequest=com.spring.starter.model.TransactionRequest#1, authorizerDataTransaction=null, requestCompleteDate=null, statusMessage=null, ttNumber=null, requestDate=Tue Nov 06 22:50:23 IST 2018, authorize=false, staffUser=null, transactionCustomer=com.spring.starter.model.TransactionCustomer#1, status=false}
2018-11-06 22:50:24.037 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.header.writers.HstsHeaderWriter  : Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@98d858d
2018-11-06 22:50:24.038 DEBUG 9956 --- [http-nio-8081-exec-3] o.s.s.w.a.ExceptionTranslationFilter     : Chain processed normally
2018-11-06 22:50:24.038 DEBUG 9956 --- [http-nio-8081-exec-3] s.s.w.c.SecurityContextPersistenceFilter : SecurityContextHolder now cleared, as request processing completed
2018-11-06 22:50:25.077 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 1 of 10 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
2018-11-06 22:50:25.078 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 2 of 10 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
2018-11-06 22:50:25.079 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 3 of 10 in additional filter chain; firing Filter: 'HeaderWriterFilter'
2018-11-06 22:50:25.079 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 4 of 10 in additional filter chain; firing Filter: 'JwtTokenAuthenticationFilter'
2018-11-06 22:50:25.080 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 5 of 10 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
2018-11-06 22:50:25.080 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 6 of 10 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
2018-11-06 22:50:25.081 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 7 of 10 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
2018-11-06 22:50:25.081 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@40a3c9d3: Principal: 1; Credentials: [PROTECTED]; Authenticated: true; Details: null; Granted Authorities: ROLE_ADMIN'
2018-11-06 22:50:25.081 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 8 of 10 in additional filter chain; firing Filter: 'SessionManagementFilter'
2018-11-06 22:50:25.081 DEBUG 9956 --- [http-nio-8081-exec-4] s.CompositeSessionAuthenticationStrategy : Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@7dabbf06
2018-11-06 22:50:25.081 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 9 of 10 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
2018-11-06 22:50:25.081 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request at position 10 of 10 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
2018-11-06 22:50:25.081 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Request 'POST /Transaction-Request/add-customer-to-trasaction-request' doesn't match 'OPTIONS /**
2018-11-06 22:50:25.082 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/login'
2018-11-06 22:50:25.082 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/staffUsers/addNewUser'
2018-11-06 22:50:25.082 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/staffUsers/addStaffUserFirstTime'
2018-11-06 22:50:25.082 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/staffUsers/login/**'
2018-11-06 22:50:25.082 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/staffRoles'
2018-11-06 22:50:25.082 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/CustomerServiceRequest/**'
2018-11-06 22:50:25.082 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/atmOrDebit/request'
2018-11-06 22:50:25.082 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/atmOrDebit/reIssuePin'
2018-11-06 22:50:25.083 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/atmOrDebit/smsSubscription'
2018-11-06 22:50:25.083 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/atmOrDebit/posLimit'
2018-11-06 22:50:25.083 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/atmOrDebit/LinkedAccount'
2018-11-06 22:50:25.083 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/atmOrDebit/changePrimaryAccount'
2018-11-06 22:50:25.083 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/bankStatementPassBook/duplicatePassbook'
2018-11-06 22:50:25.083 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/bankStatementPassBook/AccountStatement'
2018-11-06 22:50:25.086 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/bankStatementPassBook/e-statement'
2018-11-06 22:50:25.086 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/bankStatementPassBook/statementFrequency'
2018-11-06 22:50:25.086 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/address/change-mailing'
2018-11-06 22:50:25.086 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/changePermanentAddress'
2018-11-06 22:50:25.086 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/CustomerServiceRequest'
2018-11-06 22:50:25.086 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addRelatedRequest'
2018-11-06 22:50:25.086 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addDuplicateFdCdCert'
2018-11-06 22:50:25.086 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/internet-banking/reissue-password'
2018-11-06 22:50:25.086 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/link-JointAccounts'
2018-11-06 22:50:25.086 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/exclude-accounts'
2018-11-06 22:50:25.086 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/other-service'
2018-11-06 22:50:25.087 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/address/change-permenenet/'
2018-11-06 22:50:25.087 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/otherRequest'
2018-11-06 22:50:25.087 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addNewBankService'
2018-11-06 22:50:25.087 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/getBankServices'
2018-11-06 22:50:25.087 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addNewCustomer'
2018-11-06 22:50:25.087 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addNewServiceToACustomer'
2018-11-06 22:50:25.087 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/getcustomer'
2018-11-06 22:50:25.087 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/getServicesOfACustomerByDate'
2018-11-06 22:50:25.087 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/getAllCustomerRequests'
2018-11-06 22:50:25.087 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/getAllCustomerDataWithRequests'
2018-11-06 22:50:25.087 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/completeACustomerRequest'
2018-11-06 22:50:25.087 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addAStaffHandled'
2018-11-06 22:50:25.087 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/getServiceRequestForm'
2018-11-06 22:50:25.087 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/addSignature'
2018-11-06 22:50:25.088 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/SMSAlertsforCreditCard'
2018-11-06 22:50:25.088 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/serviceRequest/get-all-customer-requests-filter-by-reject/**'
2018-11-06 22:50:25.088 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/add-service'
2018-11-06 22:50:25.088 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/view-transaction-request/**'
2018-11-06 22:50:25.088 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/getServiceRequestForm'
2018-11-06 22:50:25.088 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/ger-all-service'
2018-11-06 22:50:25.088 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/tif-image'
2018-11-06 22:50:25.088 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/getDocumentTypes/**'
2018-11-06 22:50:25.088 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/addSignature'
2018-11-06 22:50:25.088 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/softReject'
2018-11-06 22:50:25.088 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/softReject-all'
2018-11-06 22:50:25.088 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/add-transaction-customer'
2018-11-06 22:50:25.088 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/Transaction-Request/add-customer-to-trasaction-request'; against '/Transaction-Request/add-customer-to-trasaction-request'
2018-11-06 22:50:25.088 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.a.i.FilterSecurityInterceptor    : Secure object: FilterInvocation: URL: /Transaction-Request/add-customer-to-trasaction-request; Attributes: [permitAll]
2018-11-06 22:50:25.088 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.a.i.FilterSecurityInterceptor    : Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@40a3c9d3: Principal: 1; Credentials: [PROTECTED]; Authenticated: true; Details: null; Granted Authorities: ROLE_ADMIN
2018-11-06 22:50:25.088 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.access.vote.AffirmativeBased       : Voter: org.springframework.security.web.access.expression.WebExpressionVoter@7f6831ad, returned: 1
2018-11-06 22:50:25.089 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorization successful
2018-11-06 22:50:25.089 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.a.i.FilterSecurityInterceptor    : RunAsManager did not change Authentication object
2018-11-06 22:50:25.089 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.security.web.FilterChainProxy        : /Transaction-Request/add-customer-to-trasaction-request reached end of additional filter chain; proceeding with original chain
2018-11-06 22:50:25.090 DEBUG 9956 --- [http-nio-8081-exec-4] o.h.e.t.internal.TransactionImpl         : begin
2018-11-06 22:50:25.091 DEBUG 9956 --- [http-nio-8081-exec-4] org.hibernate.SQL                        : select transactio0_.transaction_customer_id as transact1_93_0_, transactio0_.date as date2_93_0_, transactio0_.identification as identifi3_93_0_, transactio0_.mobile as mobile4_93_0_, transactio0_.name as name5_93_0_ from transaction_customer transactio0_ where transactio0_.transaction_customer_id=?
2018-11-06 22:50:25.092 DEBUG 9956 --- [http-nio-8081-exec-4] o.h.l.p.e.p.i.ResultSetProcessorImpl     : Starting ResultSet row #0
2018-11-06 22:50:25.092 DEBUG 9956 --- [http-nio-8081-exec-4] l.p.e.p.i.EntityReferenceInitializerImpl : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2018-11-06 22:50:25.092 DEBUG 9956 --- [http-nio-8081-exec-4] o.h.engine.internal.TwoPhaseLoad         : Resolving associations for [com.spring.starter.model.TransactionCustomer#1]
2018-11-06 22:50:25.092 DEBUG 9956 --- [http-nio-8081-exec-4] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.spring.starter.model.TransactionCustomer#1]
2018-11-06 22:50:25.092 DEBUG 9956 --- [http-nio-8081-exec-4] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2018-11-06 22:50:25.093 DEBUG 9956 --- [http-nio-8081-exec-4] .l.e.p.AbstractLoadPlanBasedEntityLoader : Done entity load : com.spring.starter.model.TransactionCustomer#1
2018-11-06 22:50:25.093 DEBUG 9956 --- [http-nio-8081-exec-4] org.hibernate.SQL                        : select transactio0_.transaction_request_id as transact1_94_0_, transactio0_.date as date2_94_0_, transactio0_.digi_form_id as digi_for3_94_0_, transactio0_.digi_form_type as digi_for4_94_0_, transactio0_.transaction_request_name as transact5_94_0_ from transaction_request transactio0_ where transactio0_.transaction_request_id=?
2018-11-06 22:50:25.094 DEBUG 9956 --- [http-nio-8081-exec-4] o.h.l.p.e.p.i.ResultSetProcessorImpl     : Starting ResultSet row #0
2018-11-06 22:50:25.094 DEBUG 9956 --- [http-nio-8081-exec-4] l.p.e.p.i.EntityReferenceInitializerImpl : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2018-11-06 22:50:25.094 DEBUG 9956 --- [http-nio-8081-exec-4] o.h.engine.internal.TwoPhaseLoad         : Resolving associations for [com.spring.starter.model.TransactionRequest#1]
2018-11-06 22:50:25.094 DEBUG 9956 --- [http-nio-8081-exec-4] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.spring.starter.model.TransactionRequest#1]
2018-11-06 22:50:25.094 DEBUG 9956 --- [http-nio-8081-exec-4] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2018-11-06 22:50:25.094 DEBUG 9956 --- [http-nio-8081-exec-4] .l.e.p.AbstractLoadPlanBasedEntityLoader : Done entity load : com.spring.starter.model.TransactionRequest#1
2018-11-06 22:50:25.095 DEBUG 9956 --- [http-nio-8081-exec-4] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2018-11-06 22:50:25.095 DEBUG 9956 --- [http-nio-8081-exec-4] org.hibernate.SQL                        : insert into customer_transaction_request (authorize, authorizer_data_transaction_request_id, request_complete_date, request_date, soft_reject, status, status_message, transaction_customer_id, transaction_request_id, tt_number) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2018-11-06 22:50:25.126 DEBUG 9956 --- [http-nio-8081-exec-4] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 55
2018-11-06 22:50:25.126 DEBUG 9956 --- [http-nio-8081-exec-4] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2018-11-06 22:50:25.127 DEBUG 9956 --- [http-nio-8081-exec-4] o.h.e.t.internal.TransactionImpl         : committing
2018-11-06 22:50:25.127 DEBUG 9956 --- [http-nio-8081-exec-4] o.h.e.i.AbstractFlushingEventListener    : Processing flush-time cascades
2018-11-06 22:50:25.127 DEBUG 9956 --- [http-nio-8081-exec-4] o.h.e.i.AbstractFlushingEventListener    : Dirty checking collections
2018-11-06 22:50:25.127 DEBUG 9956 --- [http-nio-8081-exec-4] o.h.e.i.AbstractFlushingEventListener    : Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2018-11-06 22:50:25.127 DEBUG 9956 --- [http-nio-8081-exec-4] o.h.e.i.AbstractFlushingEventListener    : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2018-11-06 22:50:25.127 DEBUG 9956 --- [http-nio-8081-exec-4] o.hibernate.internal.util.EntityPrinter  : Listing entities:
2018-11-06 22:50:25.127 DEBUG 9956 --- [http-nio-8081-exec-4] o.hibernate.internal.util.EntityPrinter  : com.spring.starter.model.TransactionRequest{date=2018-10-05 08:46:50.0, digiFormType=DEPOSIT REQUEST FORM, transactionRequestName=DEPOSITS, transactionRequestId=1, digiFormId=1}
2018-11-06 22:50:25.127 DEBUG 9956 --- [http-nio-8081-exec-4] o.hibernate.internal.util.EntityPrinter  : com.spring.starter.model.TransactionCustomer{date=null, identification=951160164v, mobile=0710873073, name=senila udara, transactionCustomerId=1}
2018-11-06 22:50:25.127 DEBUG 9956 --- [http-nio-8081-exec-4] o.hibernate.internal.util.EntityPrinter  : com.spring.starter.model.CustomerTransactionRequest{customerTransactionRequestId=55, csrDataTransaction=null, softReject=false, transactionRequest=com.spring.starter.model.TransactionRequest#1, authorizerDataTransaction=null, requestCompleteDate=null, statusMessage=null, ttNumber=null, requestDate=Tue Nov 06 22:50:25 IST 2018, authorize=false, staffUser=null, transactionCustomer=com.spring.starter.model.TransactionCustomer#1, status=false}
2018-11-06 22:50:25.178 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.header.writers.HstsHeaderWriter  : Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@98d858d
2018-11-06 22:50:25.179 DEBUG 9956 --- [http-nio-8081-exec-4] o.s.s.w.a.ExceptionTranslationFilter     : Chain processed normally
2018-11-06 22:50:25.180 DEBUG 9956 --- [http-nio-8081-exec-4] s.s.w.c.SecurityContextPersistenceFilter : SecurityContextHolder now cleared, as request processing completed
